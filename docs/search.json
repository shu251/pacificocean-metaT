[
  {
    "objectID": "env-metadata.html",
    "href": "env-metadata.html",
    "title": "Environmental metadata",
    "section": "",
    "text": "Import metadata & combine\n\nlibrary(tidyverse); library(patchwork)\n\n\ntmp_all_metadata &lt;- read.csv(\"input-data/All_metadata.csv\")\n# colnames(tmp_all_metadata)\n# unique(tmp_all_metadata$Site)\n# View(tmp_all_metadata)\njuly &lt;- read.delim(\"input-data/flor_env_ALOHAJuly_SPOT.txt\")\nmarch &lt;- read.delim(\"input-data/flour_ALOHAMarch.txt\")\n\n\n# head(july)\n# head(march)\nfluor &lt;- july %&gt;% \n  left_join(march) %&gt;% \n  pivot_longer(cols = SPOT:ALOHAMarch, names_to = \"Site\", values_to = \"Fluor\")\n\nJoining with `by = join_by(Depth)`\n\n# unique(fluor$Site)\nmetadata_all &lt;- tmp_all_metadata %&gt;% \n  filter((!Site == \"ALOHA\")) %&gt;% \n  select(-X) %&gt;% \n  left_join(fluor) %&gt;% \n  pivot_longer(cols = Temp:Fluor, names_to = \"VARIABLE\", values_to = \"VALUE\")\n\nJoining with `by = join_by(Site, Depth, Fluor)`\n\n# head(metadata_all)\n# unique(metadata_all$Site)\n\nFigure aesthetics\n\nsite_order &lt;- c(\"SPOT\", \"PortofLA\", \"Catalina\", \"ALOHAJuly\", \"ALOHAMarch\")\nsite_label &lt;- c(\"SPOT\", \"Port of LA\", \"Catalina\", \"ALOHA July\", \"ALOHA March\")\nsite_color_fill &lt;- c(\"#3288bd\", \"#8073ac\", \"#66bd63\", \"#e6f598\", \"#d53e4f\")\nsite_color_fill_nopola &lt;- c(\"#3288bd\", \"#66bd63\", \"#e6f598\", \"#d53e4f\")\n\nIsolate specific depths, add a label\n\nspot&lt;-c(1,150,885)\nspotsite&lt;-c(\"SPOT\", \"Catalina\", \"PortofLA\")\naloha&lt;-c(1,120,150,1000)\n\nmetadata_pt_depth &lt;- metadata_all %&gt;% \n  filter(Site %in% spotsite & Depth %in% spot | grepl(\"ALOHA\", Site) & Depth %in% aloha) %&gt;% \n  add_column(Label = \"discrete\") %&gt;% \n  mutate(VAR_ORDER = factor(VARIABLE, levels = c(\"Temp\", \"Fluor\", \"Sal\", \"Oxy\"), labels = c(\"Temperature\", \"Chlorophyll\", \"Salinity\", \"Oxygen\"))) %&gt;% \n  mutate(SITE_ORDER = factor(Site, levels = site_order, labels = site_label))\n# unique(metadata_all$Site)\n\n\nallenv &lt;- metadata_all %&gt;% \n  mutate(VAR_ORDER = factor(VARIABLE, levels = c(\"Temp\", \"Fluor\", \"Sal\", \"Oxy\"), labels = c(\"Temperature\", \"Chlorophyll\", \"Salinity\", \"Oxygen\"))) %&gt;% \n  mutate(SITE_ORDER = factor(Site, levels = site_order, labels = site_label)) %&gt;% \n  arrange(Depth) %&gt;% \n  ggplot(aes(y = Depth, x = VALUE)) +\n  geom_hline(yintercept = 0, alpha = 0.3) +\n  geom_path(size = 1, aes(color = SITE_ORDER)) +\n  geom_point(data = metadata_pt_depth, size = 2, aes(y = Depth, x = VALUE, fill = SITE_ORDER, shape = SITE_ORDER)) +\n    scale_shape_manual(values = c(21, 22, 23, 24, 25)) +\n    scale_fill_manual(values = site_color_fill) +\n    scale_color_manual(values = site_color_fill) +\n  scale_y_reverse() +\n  facet_grid(. ~ VAR_ORDER, scales = \"free\", switch = \"both\") +\n  theme_linedraw() +\n  labs(x = \"\", y = \"Depth (m)\") +\n  theme(strip.background = element_blank(),\n        strip.placement = \"outside\",\n        strip.text = element_text(color = \"black\"),\n        legend.title = element_blank())\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\nallenv\n\nWarning: Removed 2 rows containing missing values (`geom_path()`).\n\n\n\n\n\n\nno_pola &lt;- metadata_all %&gt;% \n  mutate(VAR_ORDER = factor(VARIABLE, levels = c(\"Temp\", \"Fluor\", \"Sal\", \"Oxy\"), labels = c(\"Temperature\", \"Chlorophyll\", \"Salinity\", \"Oxygen\"))) %&gt;% \n  mutate(SITE_ORDER = factor(Site, levels = site_order, labels = site_label)) %&gt;% \n  arrange(Depth) %&gt;% \n  filter(Site != \"PortofLA\") %&gt;% \n  ggplot(aes(y = Depth, x = VALUE)) +\n  geom_hline(yintercept = 0, alpha = 0.3) +\n  geom_path(size = 1, aes(color = SITE_ORDER)) +\n  geom_point(data = (metadata_pt_depth %&gt;% filter(Site != \"PortofLA\")), size = 2, aes(y = Depth, x = VALUE, fill = SITE_ORDER, shape = SITE_ORDER)) +\n    scale_shape_manual(values = c(21, 22, 23, 24, 25)) +\n    scale_fill_manual(values = site_color_fill_nopola) +\n    scale_color_manual(values = site_color_fill_nopola) +\n  scale_y_reverse() +\n  facet_grid(. ~ VAR_ORDER, scales = \"free\", switch = \"both\") +\n  theme_linedraw() +\n  labs(x = \"\", y = \"Depth (m)\") +\n  theme(strip.background = element_blank(),\n        strip.placement = \"outside\",\n        strip.text = element_text(color = \"black\"),\n        legend.title = element_blank())\n\nno_pola\n\nWarning: Removed 2 rows containing missing values (`geom_path()`).\n\n\n\n\n\n\n# svg(\"figs/water-col.svg\", w = 8, h = 7)\nallenv + no_pola + patchwork::plot_layout(ncol = 1)\n\nWarning: Removed 2 rows containing missing values (`geom_path()`).\nRemoved 2 rows containing missing values (`geom_path()`).\n\n\n\n\n# dev.off()\n\n# Requires manual modification of chlorophyll with Port of LA sample"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Metatranscriptome survey of Pacific Ocean",
    "section": "",
    "text": "Home for code and analysis for microeukaryotic metatranscriptome survey. From github repo: https://github.com/shu251/pacificocean-metaT in prep\nTO DO:"
  },
  {
    "objectID": "metat-analysis.html",
    "href": "metat-analysis.html",
    "title": "Analysis of metatranscriptome data",
    "section": "",
    "text": "We have taken outputs from eukrhythmic and performed transcript-level normalization so we can do downstream analysis. There are two core questions for this metatranscriptome study that can be subset into untargeted and targeted approaches. Questions stem from previous studies at both the NPSG and sites off of coastal California.\n\n\n\n\n\n\n\n\n\n(1) How does nutrient utilization among euphotic zone phytoplankton vary between coastal California and the NPSG?\n(2) Do we see a similar euphotic vs. sub-euphotic shift in the metabolic potential of taxa observed at coastal California and the NPSG?\n\n\nUntargeted\n\nSubset whole dataset to taxa of interest (haptophytes, dinos, diatoms, archaeplastida), and to transcripts that were annotated.\nRun in DEseq2 to determine differentially expressed genes between: SPOT surface vs. all other samples in the euphotic zone.\nTally what appears similar and different across sample comparisons\nThen tally what appears different between taxa..\n\n\nSubset whole dataset to taxa of interest, dinos, ciliates, rhizaria, haptophytes.\nRun in DESeq2. Compare all euphotic to all subeuphotic. Then NPSG euphotic to subeuphotic. Then SPOT euphotic to subeuphotic.\nTally what appears similar and different across sample comparisons\nThen tally what appears different between taxa.\n\n\n\nTargeted\nSUBSET only those 4 groups from above. Run the count normalization, then isolate the key genes of interest. What is happening with critical N&P pathways?\nSUBSET only those 4 groups from above. Run the count normalization, then isolate the all the key genes of interest. Paying particular attention to phagotrophy-based genes."
  },
  {
    "objectID": "metat-analysis.html#input-all-tpm-results",
    "href": "metat-analysis.html#input-all-tpm-results",
    "title": "Analysis of metatranscriptome data",
    "section": "Input all TPM results",
    "text": "Input all TPM results\nBelow R objects sourced by first isolating only the eukaryotic transcripts, averaging across replicates, and placing into long format.\n\n# | echo: true\n# | eval: false\nload(file = \"Avg_scaled_tpm_08222023.RData\", verbose = T)\ntaxfxn &lt;- read.csv(\"TaxonomicAndFunctionalAnnotations.csv\")\n\nImport metadata as well.\n\n# metadata_tmp &lt;- read.delim(\"input-data/complete-sample-list.txt\", header = TRUE, sep = \",\")\n# sample_metadata &lt;- read.csv(\"input-data/sample_table.csv\") %&gt;%\n  # unite(SAMPLE, Sample, Replicate, sep = \"_\", remove = FALSE) %&gt;% \n  # select(RUN = SRR, everything()) %&gt;% \n  # right_join(metadata_tmp)\n\n# write.csv(sample_metadata, file = \"input-data/sample-metadata.csv\")\nsample_metadata_1 &lt;- read.csv(\"input-data/sample-metadata.csv\")\nsample_metadata &lt;- sample_metadata_1 %&gt;% \n  mutate(SAMPLE_MATCH = sub(\"_[^_]+$\", \"\", SAMPLE))\nsample_metadata\n\n    X         RUN         SAMN                  SAMPLE       Sample   Replicate\n1   1  SRR6048900 SAMN07647713  July_1000m_Rep1andRep2   July_1000m Rep1andRep2\n2   2  SRR6048899 SAMN07647714   July_150m_Rep1andRep2    July_150m Rep1andRep2\n3   3  SRR6048898 SAMN07647715            July_5m_Rep1      July_5m        Rep1\n4   4  SRR6048897 SAMN07647716            July_5m_Rep2      July_5m        Rep2\n5   5  SRR6048896 SAMN07647717           July_DCM_Rep1     July_DCM        Rep1\n6   6  SRR6048895 SAMN07647718           July_DCM_Rep2     July_DCM        Rep2\n7   7  SRR6048894 SAMN07647719 March_1000m_Rep1andRep2  March_1000m Rep1andRep2\n8   8  SRR6048893 SAMN07647720  March_150m_Rep1andRep2   March_150m Rep1andRep2\n9   9  SRR6048892 SAMN07647721           March_5m_Rep1     March_5m        Rep1\n10 10  SRR6048891 SAMN07647722           March_5m_Rep2     March_5m        Rep2\n11 11  SRR6048902 SAMN07647723          March_DCM_Rep1    March_DCM        Rep1\n12 12  SRR6048901 SAMN07647724          March_DCM_Rep2    March_DCM        Rep2\n13 13 SRR11178183 SAMN14206057             Catalina_19     Catalina          19\n14 14 SRR11178182 SAMN14206058             Catalina_20     Catalina          20\n15 15 SRR11178173 SAMN14206059             Catalina_21     Catalina          21\n16 16 SRR11178172 SAMN14206060             Catalina_22     Catalina          22\n17 17 SRR11178171 SAMN14206061             Catalina_23     Catalina          23\n18 18 SRR11178170 SAMN14206062             Catalina_24     Catalina          24\n19 19 SRR11178169 SAMN14206063              PortofLA_1     PortofLA           1\n20 20 SRR11178168 SAMN14206064              PortofLA_2     PortofLA           2\n21 21 SRR11178167 SAMN14206065              PortofLA_3     PortofLA           3\n22 22 SRR11178166 SAMN14206066              PortofLA_4     PortofLA           4\n23 23 SRR11178181 SAMN14206067              PortofLA_5     PortofLA           5\n24 24 SRR11178180 SAMN14206068              PortofLA_6     PortofLA           6\n25 25  SRR5799332 SAMN07269832      SPOT_150m_Rep1and2    SPOT_150m    Rep1and2\n26 26  SRR5799333 SAMN07269833      SPOT_150m_Rep3and4    SPOT_150m    Rep3and4\n27 27  SRR5799340 SAMN07269834      SPOT_150m_Rep5and6    SPOT_150m    Rep5and6\n28 28  SRR5799341 SAMN07269835      SPOT_890m_Rep1and2    SPOT_890m    Rep1and2\n29 29  SRR5799343 SAMN07269836      SPOT_890m_Rep3and4    SPOT_890m    Rep3and4\n30 30  SRR5799344 SAMN07269837      SPOT_890m_Rep5and6    SPOT_890m    Rep5and6\n31 31  SRR5799342 SAMN07269838          SPOT_890m_Rep7    SPOT_890m        Rep7\n32 32  SRR5799338 SAMN07269826          SPOT_surface_7 SPOT_surface           7\n33 33  SRR5799339 SAMN07269827          SPOT_surface_8 SPOT_surface           8\n34 34  SRR5799336 SAMN07269828          SPOT_surface_9 SPOT_surface           9\n35 35  SRR5799337 SAMN07269829         SPOT_surface_10 SPOT_surface          10\n36 36  SRR5799334 SAMN07269830         SPOT_surface_11 SPOT_surface          11\n37 37  SRR5799335 SAMN07269831         SPOT_surface_12 SPOT_surface          12\n38 38 SRR11178179 SAMN14206069         SPOT_surface_13 SPOT_surface          13\n39 39 SRR11178178 SAMN14206070         SPOT_surface_14 SPOT_surface          14\n40 40 SRR11178177 SAMN14206071         SPOT_surface_!5 SPOT_surface          !5\n41 41 SRR11178176 SAMN14206072         SPOT_surface_16 SPOT_surface          16\n42 42 SRR11178175 SAMN14206073         SPOT_surface_17 SPOT_surface          17\n43 43 SRR11178174 SAMN14206074         SPOT_surface_18 SPOT_surface          18\n         BASES  BIOPROJECT    BIOSAMPLE       DATE EXPERIMENT\n1  22179808750 PRJNA406025 SAMN07647713 2015-07-30 SRX3195831\n2  22251034000 PRJNA406025 SAMN07647714 2015-07-30 SRX3195832\n3  36858334750 PRJNA406025 SAMN07647715 2015-07-30 SRX3195833\n4  28427020000 PRJNA406025 SAMN07647716 2015-07-30 SRX3195834\n5  33698315000 PRJNA406025 SAMN07647717 2015-07-30 SRX3195835\n6  30540287750 PRJNA406025 SAMN07647718 2015-07-30 SRX3195836\n7  10727941750 PRJNA406025 SAMN07647719 2016-03-27 SRX3195837\n8  28071351250 PRJNA406025 SAMN07647720 2016-03-27 SRX3195838\n9  35787763750 PRJNA406025 SAMN07647721 2016-03-27 SRX3195839\n10 26198209000 PRJNA406025 SAMN07647722 2016-03-27 SRX3195840\n11 36850615000 PRJNA406025 SAMN07647723 2016-03-27 SRX3195829\n12 25119184500 PRJNA406025 SAMN07647724 2016-03-27 SRX3195830\n13  8956532750 PRJNA608423 SAMN14206057 2015-05-21 SRX7798845\n14  9890647250 PRJNA608423 SAMN14206058 2015-05-21 SRX7798846\n15  9213733750 PRJNA608423 SAMN14206059 2015-05-21 SRX7798855\n16  5346436500 PRJNA608423 SAMN14206060 2015-05-21 SRX7798856\n17  7289444750 PRJNA608423 SAMN14206061 2015-05-21 SRX7798857\n18 11865681500 PRJNA608423 SAMN14206062 2015-05-21 SRX7798858\n19  7728633500 PRJNA608423 SAMN14206063 2015-05-20 SRX7798859\n20  9733064500 PRJNA608423 SAMN14206064 2015-05-20 SRX7798860\n21  4491843250 PRJNA608423 SAMN14206065 2015-05-20 SRX7798861\n22  6380099500 PRJNA608423 SAMN14206066 2015-05-20 SRX7798862\n23  7907104250 PRJNA608423 SAMN14206067 2015-05-20 SRX7798847\n24  9629580250 PRJNA608423 SAMN14206068 2015-05-20 SRX7798848\n25 21179947000 PRJNA391503 SAMN07269832 2015-05-20 SRX2978825\n26 13838597000 PRJNA391503 SAMN07269833 2015-05-20 SRX2978824\n27 24355501250 PRJNA391503 SAMN07269834 2015-05-20 SRX2978817\n28  4599264250 PRJNA391503 SAMN07269835 2015-05-20 SRX2978816\n29 20218093250 PRJNA391503 SAMN07269836 2015-05-20 SRX2978814\n30 15436881250 PRJNA391503 SAMN07269837 2015-05-20 SRX2978813\n31 16907100750 PRJNA391503 SAMN07269838 2015-05-20 SRX2978815\n32  6490449000 PRJNA391503 SAMN07269826 2015-05-20 SRX2978819\n33  3741887000 PRJNA391503 SAMN07269827 2015-05-20 SRX2978818\n34  8523152000 PRJNA391503 SAMN07269828 2015-05-20 SRX2978821\n35 10675178500 PRJNA391503 SAMN07269829 2015-05-20 SRX2978820\n36  8449256000 PRJNA391503 SAMN07269830 2015-05-20 SRX2978823\n37  7203720250 PRJNA391503 SAMN07269831 2015-05-20 SRX2978822\n38 12565907750 PRJNA608423 SAMN14206069 2015-05-20 SRX7798849\n39  7464807500 PRJNA608423 SAMN14206070 2015-05-20 SRX7798850\n40  8583553750 PRJNA608423 SAMN14206071 2015-05-20 SRX7798851\n41  8126200000 PRJNA608423 SAMN14206072 2015-05-20 SRX7798852\n42  8329988250 PRJNA608423 SAMN14206073 2015-05-20 SRX7798853\n43  6430857250 PRJNA608423 SAMN14206074 2015-05-20 SRX7798854\n                  LAT_LON                  LIBRARY            SAMPLENAME DEPTH\n1  24.54987 N 156.33178 W               July_1000m  NPSG_ALOHA_1000_July  1000\n2  24.54987 N 156.33178 W                July_150m   NPSG_ALOHA_150_July   150\n3  24.54987 N 156.33178 W        July_surface_Rep1     NPSG_ALOHA_5_July     5\n4  24.54987 N 156.33178 W        July_surface_Rep2     NPSG_ALOHA_5_July     5\n5  24.54987 N 156.33178 W            July_DCM_Rep1   NPSG_ALOHA_119_July   119\n6  24.54987 N 156.33178 W            July_DCM_Rep2   NPSG_ALOHA_119_July   119\n7  24.54987 N 156.33178 W              March_1000m NPSG_ALOHA_1000_March  1000\n8  24.54987 N 156.33178 W               March_150m  NPSG_ALOHA_150_March   150\n9  24.54987 N 156.33178 W       March_surface_Rep1    NPSG_ALOHA_5_March     5\n10 24.54987 N 156.33178 W       March_surface_Rep2    NPSG_ALOHA_5_March     5\n11 24.54987 N 156.33178 W           March_DCM_Rep1  NPSG_ALOHA_120_March   120\n12 24.54987 N 156.33178 W           March_DCM_Rep2  NPSG_ALOHA_120_March   120\n13       33.44 N 118.47 W     Catalina_19_S22_L004     CA_Catalina_5_May     5\n14       33.44 N 118.47 W     Catalina_20_S23_L004     CA_Catalina_5_May     5\n15       33.44 N 118.47 W     Catalina_21_S24_L004     CA_Catalina_5_May     5\n16       33.44 N 118.47 W     Catalina_22_S25_L004     CA_Catalina_5_May     5\n17       33.44 N 118.47 W     Catalina_23_S26_L004     CA_Catalina_5_May     5\n18       33.44 N 118.47 W     Catalina_24_S27_L004     CA_Catalina_5_May     5\n19       33.71 N 118.26 W     Port_of_LA_1_S1_L001     CA_PortofLA_5_May     5\n20       33.71 N 118.26 W     Port_of_LA_2_S2_L001     CA_PortofLA_5_May     5\n21       33.71 N 118.26 W     Port_of_LA_3_S3_L001     CA_PortofLA_5_May     5\n22       33.71 N 118.26 W     Port_of_LA_4_S4_L001     CA_PortofLA_5_May     5\n23       33.71 N 118.26 W     Port_of_LA_5_S5_L001     CA_PortofLA_5_May     5\n24       33.71 N 118.26 W     Port_of_LA_6_S6_L001     CA_PortofLA_5_May     5\n25       33.55 N 118.40 W             SPOT_150m_25       CA_SPOT_150_May   150\n26       33.55 N 118.40 W             SPOT_150m_26       CA_SPOT_150_May   150\n27       33.55 N 118.40 W             SPOT_150m_27       CA_SPOT_150_May   150\n28       33.55 N 118.40 W             SPOT_890m_28       CA_SPOT_890_May   890\n29       33.55 N 118.40 W             SPOT_890m_29       CA_SPOT_890_May   890\n30       33.55 N 118.40 W             SPOT_890m_30       CA_SPOT_890_May   890\n31       33.55 N 118.40 W             SPOT_890m_31       CA_SPOT_890_May   890\n32       33.55 N 118.40 W           SPOT_surface_7         CA_SPOT_5_May     5\n33       33.55 N 118.40 W           SPOT_surface_8         CA_SPOT_5_May     5\n34       33.55 N 118.40 W           SPOT_surface_9         CA_SPOT_5_May     5\n35       33.55 N 118.40 W          SPOT_surface_10         CA_SPOT_5_May     5\n36       33.55 N 118.40 W          SPOT_surface_11         CA_SPOT_5_May     5\n37       33.55 N 118.40 W          SPOT_surface_12         CA_SPOT_5_May     5\n38       33.44 N 118.47 W SPOT_surface_13_S15_L003         CA_SPOT_5_May     5\n39       33.44 N 118.47 W SPOT_surface_14_S16_L003         CA_SPOT_5_May     5\n40       33.44 N 118.47 W SPOT_surface_15_S17_L003         CA_SPOT_5_May     5\n41       33.44 N 118.47 W SPOT_surface_16_S18_L003         CA_SPOT_5_May     5\n42       33.44 N 118.47 W SPOT_surface_17_S19_L003         CA_SPOT_5_May     5\n43       33.44 N 118.47 W SPOT_surface_18_S20_L003         CA_SPOT_5_May     5\n      SAMPLE_ID_PARSED DEPTH_CATEGORY   REGION PACIFIC_REGION MONTH\n1    July ALOHA 1000 m         1000 m    ALOHA           NPSG  July\n2     July ALOHA 150 m          150 m    ALOHA           NPSG  July\n3   July ALOHA surface        surface    ALOHA           NPSG  July\n4   July ALOHA surface        surface    ALOHA           NPSG  July\n5       July ALOHA DCM            DCM    ALOHA           NPSG  July\n6       July ALOHA DCM            DCM    ALOHA           NPSG  July\n7   March ALOHA 1000 m         1000 m    ALOHA           NPSG March\n8    March ALOHA 150 m          150 m    ALOHA           NPSG March\n9  March ALOHA surface        surface    ALOHA           NPSG March\n10 March ALOHA surface        surface    ALOHA           NPSG March\n11     March ALOHA DCM            DCM    ALOHA           NPSG March\n12     March ALOHA DCM            DCM    ALOHA           NPSG March\n13    Catalina surface        surface Catalina             CA   May\n14    Catalina surface        surface Catalina             CA   May\n15    Catalina surface        surface Catalina             CA   May\n16    Catalina surface        surface Catalina             CA   May\n17    Catalina surface        surface Catalina             CA   May\n18    Catalina surface        surface Catalina             CA   May\n19  Port of LA surface        surface PortofLA             CA   May\n20  Port of LA surface        surface PortofLA             CA   May\n21  Port of LA surface        surface PortofLA             CA   May\n22  Port of LA surface        surface PortofLA             CA   May\n23  Port of LA surface        surface PortofLA             CA   May\n24  Port of LA surface        surface PortofLA             CA   May\n25          SPOT 150 m          150 m     SPOT             CA   May\n26          SPOT 150 m          150 m     SPOT             CA   May\n27          SPOT 150 m          150 m     SPOT             CA   May\n28          SPOT 890 m          890 m     SPOT             CA   May\n29          SPOT 890 m          890 m     SPOT             CA   May\n30          SPOT 890 m          890 m     SPOT             CA   May\n31          SPOT 890 m          890 m     SPOT             CA   May\n32        SPOT surface        surface     SPOT             CA   May\n33        SPOT surface        surface     SPOT             CA   May\n34        SPOT surface        surface     SPOT             CA   May\n35        SPOT surface        surface     SPOT             CA   May\n36        SPOT surface        surface     SPOT             CA   May\n37        SPOT surface        surface     SPOT             CA   May\n38        SPOT surface        surface     SPOT             CA   May\n39        SPOT surface        surface     SPOT             CA   May\n40        SPOT surface        surface     SPOT             CA   May\n41        SPOT surface        surface     SPOT             CA   May\n42        SPOT surface        surface     SPOT             CA   May\n43        SPOT surface        surface     SPOT             CA   May\n          LIGHT SAMPLE_MATCH\n1  Sub-euphotic   July_1000m\n2      Euphotic    July_150m\n3      Euphotic      July_5m\n4      Euphotic      July_5m\n5      Euphotic     July_DCM\n6      Euphotic     July_DCM\n7  Sub-euphotic  March_1000m\n8      Euphotic   March_150m\n9      Euphotic     March_5m\n10     Euphotic     March_5m\n11     Euphotic    March_DCM\n12     Euphotic    March_DCM\n13     Euphotic     Catalina\n14     Euphotic     Catalina\n15     Euphotic     Catalina\n16     Euphotic     Catalina\n17     Euphotic     Catalina\n18     Euphotic     Catalina\n19     Euphotic     PortofLA\n20     Euphotic     PortofLA\n21     Euphotic     PortofLA\n22     Euphotic     PortofLA\n23     Euphotic     PortofLA\n24     Euphotic     PortofLA\n25 Sub-euphotic    SPOT_150m\n26 Sub-euphotic    SPOT_150m\n27 Sub-euphotic    SPOT_150m\n28 Sub-euphotic    SPOT_890m\n29 Sub-euphotic    SPOT_890m\n30 Sub-euphotic    SPOT_890m\n31 Sub-euphotic    SPOT_890m\n32     Euphotic SPOT_surface\n33     Euphotic SPOT_surface\n34     Euphotic SPOT_surface\n35     Euphotic SPOT_surface\n36     Euphotic SPOT_surface\n37     Euphotic SPOT_surface\n38     Euphotic SPOT_surface\n39     Euphotic SPOT_surface\n40     Euphotic SPOT_surface\n41     Euphotic SPOT_surface\n42     Euphotic SPOT_surface\n43     Euphotic SPOT_surface"
  },
  {
    "objectID": "metat-analysis.html#taxonomic-level-curation-and-estimate-relative-abundance",
    "href": "metat-analysis.html#taxonomic-level-curation-and-estimate-relative-abundance",
    "title": "Analysis of metatranscriptome data",
    "section": "Taxonomic level curation and estimate relative abundance",
    "text": "Taxonomic level curation and estimate relative abundance\nTaxa curation 3) Average across replicates (or how should replicates be considered) 4) Sum to each sample"
  },
  {
    "objectID": "metat-analysis.html#taxonomy-bar-plot",
    "href": "metat-analysis.html#taxonomy-bar-plot",
    "title": "Analysis of metatranscriptome data",
    "section": "Taxonomy bar plot",
    "text": "Taxonomy bar plot\n\nbar plot of relative TPM? CPM? for major taxnomic groups Keep ALOHA July and April separate, ALOHA on the left side and on the right side, all CA sites. Also place “sun” emoji for samples that are within the euphotic zone"
  },
  {
    "objectID": "metat-analysis.html#pcoa-with-whole-community-functional-profile",
    "href": "metat-analysis.html#pcoa-with-whole-community-functional-profile",
    "title": "Analysis of metatranscriptome data",
    "section": "PCoA with whole community functional profile",
    "text": "PCoA with whole community functional profile\nAhead of time, normalized community composition data was center scaled. Below, we can import this dataset and perform principle component analysis.\nImport normalized center data.\n\n# Run on HPC\nload(\"normed_center_df_08222023.RData\", verbose = TRUE)\n\n\n# Run on HPC\npca_lr &lt;- prcomp(as.data.frame(t(df_ctr_norm)))\nvariance_lr &lt;- (pca_lr$sdev^2)/sum(pca_lr$sdev^2)\n\nImport PCA objects from running R on the HPC.\n\nload(\"input-data/pca_objects.RData\", verbose = TRUE)\n\nLoading objects:\n  pca_df\n  variance_lr\n\n\nDetermine how appropriate the PCoA is in 2 vs 3 dimensions.\n\nbarplot(variance_lr, main = \"Log-Ratio PCA Screeplot\", xlab = \"PC Axis\", ylab = \"% Variance\", cex.names = 1.5, cex.axis = 1.5, cex.lab = 1.5, cex.main = 1.5)\n\n\n\n\n\npc1 &lt;- round(variance_lr[1] * 100, 2)\npc2 &lt;- round(variance_lr[2] * 100, 2)\n# head(sample_metadata)\n# svg(\"Rplot_metat_pca_wholecommunity.svg\", width = 7, height = 7)\npca_df %&gt;% \n  left_join(sample_metadata, by = c(\"SAMPLE_MATCH\" = \"SAMPLE\")) %&gt;%\n  mutate(REGION_ORDER = case_when(REGION == \"ALOHA\" ~ paste(\"ALOHA\", MONTH), TRUE ~ REGION)) %&gt;% \n  ggplot(aes(x = PC1, y = PC2)) +\n    geom_jitter(stroke = 1, size = 4, aes(shape = REGION_ORDER, fill = DEPTH_CATEGORY, color = LIGHT)) +\n    # scale_shape_manual(values = c(21, 22, 23, 24)) +\n    scale_shape_manual(values = c(24, 25, 23, 22, 21)) +\n    scale_fill_manual(values = c(\"#6a51a3\", \"#f768a1\", \"#8c96c6\", \"#fd8d3c\", \"#238b45\")) +\n    scale_color_manual(values = c(\"#cccccc\", \"#252525\")) +\n    theme_linedraw() + coord_fixed(ratio = 1) +\n    guides(fill = guide_legend(override.aes = list(shape = c(22)))) +\n    geom_hline(yintercept = 0) + geom_vline(xintercept = 0) +\n    theme(legend.title = element_blank(),\n          axis.text = element_text(color = \"black\", face = \"bold\", size = 13)) +\n    labs(x =  paste(pc1, \"%\"), y = paste(pc2, \"%\"))"
  },
  {
    "objectID": "metat-analysis.html#define-each-site-by-module",
    "href": "metat-analysis.html#define-each-site-by-module",
    "title": "Analysis of metatranscriptome data",
    "section": "Define each site by module",
    "text": "Define each site by module\n(k-means?)"
  },
  {
    "objectID": "metat-analysis.html#pcoa-with-curated-functional-profiles-and-known-taxonomic-ids.",
    "href": "metat-analysis.html#pcoa-with-curated-functional-profiles-and-known-taxonomic-ids.",
    "title": "Analysis of metatranscriptome data",
    "section": "PCoA with curated functional profiles and known taxonomic IDs.",
    "text": "PCoA with curated functional profiles and known taxonomic IDs.\n(subset this way to increase confidence?)\n\nHeterotrophy\nIsolate and sum to pathways associated with heterotrophy. Gene level is likely too much. Determine for each\n\nHow varied are the transcriptional signatures related to heterotrophy among protists?\n\nUse flag/half square heatmap, where top half shows the percent number of genes and bottom half shows the TPM summary.\n\n\nN & P metabolism\nIsolate at individual gene level for N & P pathways. Show TPM across sites and core taxa\n\nFor ecologically-important phytoplankton at ALOHA and coastal CA, what is the relative importance of nutrient profiles? nutrient utilization?\n\nPlot heat map for each taxa. Show all N and P relevant genes on the x axis and y axis should have all samples.\n\n\nDetermine statistical significance\nEstimate statistical significance for N&P genes, pairwise comparisons. Then add a column for each gene ID that lists the number of samples that are statistically different."
  },
  {
    "objectID": "index.html#study-sites",
    "href": "index.html#study-sites",
    "title": "Metatranscriptome survey of Pacific Ocean",
    "section": "Study sites",
    "text": "Study sites\n\nSPOT, POLA, Catalina\nALOHA"
  },
  {
    "objectID": "index.html#sequencing-information",
    "href": "index.html#sequencing-information",
    "title": "Metatranscriptome survey of Pacific Ocean",
    "section": "Sequencing information",
    "text": "Sequencing information"
  },
  {
    "objectID": "index.html#eukrhythmic",
    "href": "index.html#eukrhythmic",
    "title": "Metatranscriptome survey of Pacific Ocean",
    "section": "eukrhythmic",
    "text": "eukrhythmic"
  },
  {
    "objectID": "index.html#summary-of-analysis",
    "href": "index.html#summary-of-analysis",
    "title": "Metatranscriptome survey of Pacific Ocean",
    "section": "Summary of analysis",
    "text": "Summary of analysis"
  },
  {
    "objectID": "process-eukrhythmic-output.html",
    "href": "process-eukrhythmic-output.html",
    "title": "eukrhythmic compilation",
    "section": "",
    "text": "List of output directories:\nfinal-files/\n\n00-nucleotide_assembly/\n\nMAD.filtered.nospace.fasta: Full length sequences of merged assembly groups (MAD) that have been de-duplicated\n\n01-predicted_proteins/\n\nMAD.fasta.transdecoder.cds: Identified coding regions of transcripts from the Merged assembly groups (MAD)\nMAD.fasta.transdecoder.pep: Translated peptide sequences from the Merged assembly groups (MAD)\n\n02-annotation_table/\n\nTaxonomicAndFunctionalAnnotations.csv: Taxonomic levels, GOs, PFAMs, and KEGG KOs - assigned by short seq ID and the full sequence ID.\n\n03-abundance_tables/\n\nSeqID_Dict_NoSpaceNames.csv: key to link long sequence read IDs to ShortSeq IDs that will link to taxonomic and functional annotations\n\n\nintermediate-files/\n\n04-compare\n\n14-MAD-mapping-filtered: location of individual salmon outputs for all samples (quant.sf)\n\n\n\n\ncollate-results.py: description of code\n~Arianna - how do you want to handle this?~\n\nNotes for Sarah & Arianna: hopefully we can include a description of taking outputs from eukrhythmic and putting them in specific directories, etc. that can go stright into the run_tximport.R below."
  },
  {
    "objectID": "process-eukrhythmic-output.html#import-metadata",
    "href": "process-eukrhythmic-output.html#import-metadata",
    "title": "eukrhythmic compilation",
    "section": "Import metadata",
    "text": "Import metadata\n\ntic()\nmetadata <- fread(\"input-data/complete-sample-list.txt\", \n                 # verbose = TRUE,\n                 showProgress = TRUE,\n                 nThread = num_threads,\n                 header = TRUE)\ntoc() # 0.042 sec elapsed\n\n\nhead(metadata)\n\n# Order of current names of table\nsrr_order <- data.frame(RUN = (names(counts_all)[2:44]))\n\n# set re-name from metadata, include RUN srr IDs\nsrr_list_rename <- select(metadata, SAMPLENAME, RUN) %>% \n  distinct() %>% \n  unite(SRR_EDGER, SAMPLENAME, RUN, sep = \"-\", remove = FALSE)\n\n# Re-order these based on table\njoined_reorder <- srr_order %>% \n  left_join(srr_list_rename)\n\n# All should be equal to TRUE\nsrr_order == as.character(joined_reorder$RUN)\n\n# Set new names\nsrr_rename <- as.character(joined_reorder$SRR_EDGER)\n\nRename counts table\n\n# srr_rename\nnames(counts_all)\ncolnames(counts_all)[2:44] <- srr_rename\nnames(counts_all)\n\n\nQC read counts with what is annotated\nWhat sequences were not annotated? Remove them from the data.\n\n# ID seqID associated \nhead(counts_all$ShortSeqID) # There are more of these here, than was annotated\n\n# What is total number of ShortSeqIDs?\ntic()\nlength(unique(counts_all$ShortSeqID)); toc()\n# 54,080,665\n\nThere are over 54 million hits of read on contigs.\n\n# head(annot_all)\ntic()\nlength(unique(annot_all$ShortSeqID)); toc() #14,737,135 # 14 million with annotations\n\ntic()\nlength(unique(annot_all$SequenceID)); toc()\n# 14840771 - 14737135\n# 103,636 equate to duplicated ORFs\n\nOf these reads, only 14 million had an annotation. This is 27% of the reads that will be used in downstream analysis.\n\n100*(14840771/54080665)\n\n\n\nRemove unannotated.\n\nseqIDs_wannot <- as.character(unique(annot_all$ShortSeqID))\n\n# Save unannotated\nunannot_counts <- counts_all %>% \n  filter(!(ShortSeqID %in% seqIDs_wannot))\n\ncounts_annot <- counts_all %>% \n  filter(ShortSeqID %in% seqIDs_wannot)\n\nNew counts table.\n\ndim(counts_annot)"
  },
  {
    "objectID": "process-eukrhythmic-output.html#edger",
    "href": "process-eukrhythmic-output.html#edger",
    "title": "eukrhythmic compilation",
    "section": "EdgeR",
    "text": "EdgeR\nPrep matrix of counts\n\nhead(all_counts_matrix)\ny <- dim(all_counts_matrix)[2]\ny # should be 43\n# ?DGEList()\n\n# annot_genes <- annot_all %>% \n  # distinct()\n  # column_to_rownames(var = \"ShortSeqID\")\n# dim(annot_all)\n# dim(annot_genes)\n\n\ntic()\ndge_obj_spot_aloha <- DGEList(counts = all_counts_df,\n                              group = c(rep(\"CA_Catalina_5_May\",6),\n          rep(\"CA_PortofLA_5_May\",6),\n          rep(\"CA_SPOT_150_May\",3),\n          rep(\"CA_SPOT_5_May\",12),\n          rep(\"CA_SPOT_890_May\",4),\n          rep(\"NPSG_ALOHA_1000_July\",1),\n          rep(\"NPSG_ALOHA_1000_March\",1),\n          rep(\"NPSG_ALOHA_119_July\",2),\n          rep(\"NPSG_ALOHA_120_March\",2),\n          rep(\"NPSG_ALOHA_150_July\",1),\n          rep(\"NPSG_ALOHA_150_March\",1),\n          rep(\"NPSG_ALOHA_5_July\",2),\n          rep(\"NPSG_ALOHA_5_March\",2)))\ntoc()\n\n\ndge_obj_spot_aloha$samples\n\ntic()\ndata_tmm <- calcNormFactors(dge_obj_spot_aloha, method=\"TMM\") # TMM normalization\ntoc() # 1290.48 sec elapsed\n\nclass(data_tmm)\n# save(data_tmm, file = \"../../../scratch/user/skhu/SPOT-ALOHA/tmm.RData\")\n\n\nCheckpoint to load TMM data\n\nload(file = \"../../../scratch/user/skhu/SPOT-ALOHA/tmm.RData\", verbose = TRUE)\n\ndata_tmm$samples\n\nGet CPM using normalized library size.\n\ndata_tpm_cpm <- cpm(data_tmm, normalized.lib.sizes = TRUE, log = FALSE)\nclass(data_tpm_cpm) ## outputs a matrix array\n\nhead(data_tpm_cpm)[1:4]\n# Transpose\ntmp <- t(data_tpm_cpm)\nhead(tmp)[,1:2]"
  },
  {
    "objectID": "process-eukrhythmic-output.html#subset-for-test-data",
    "href": "process-eukrhythmic-output.html#subset-for-test-data",
    "title": "eukrhythmic compilation",
    "section": "SUBSET for test data",
    "text": "SUBSET for test data\n\n# dim(tmp)\n# # 14,841,331 # 14 million\n# \nsubset_tmp <- tmp[,1:1000000]\n# class(subset_tmp)\n# head(subset_tmp)[,1:5]\n# \n# # Create a mini one too.\n# mini_subset_tmp <- tmp[,1:10]"
  },
  {
    "objectID": "process-eukrhythmic-output.html#add-metadata",
    "href": "process-eukrhythmic-output.html#add-metadata",
    "title": "eukrhythmic compilation",
    "section": "Add metadata",
    "text": "Add metadata\n\n# ?left_join()\n# metat_cpm_wannot <- metat_cpm %>% \n#   left_join(annot_all, )"
  },
  {
    "objectID": "process-eukrhythmic-output.html#make-tx2gene",
    "href": "process-eukrhythmic-output.html#make-tx2gene",
    "title": "eukrhythmic compilation",
    "section": "Make tx2gene",
    "text": "Make tx2gene\n\n# tic()\n# annot_all <- fread(\"../../../scratch/user/skhu/SPOT-ALOHA/02-annotation_table/TaxonomicAndFunctionalAnnotations.csv\",\n#                  verbose = TRUE,\n#                  showProgress = TRUE,\n#                  nThread = num_threads,\n#                  header = TRUE)\n# toc() # 7.046 sec elapsed\n# ?fread()\n\nDon’t need this\n\n# tx2gene_ko <- annot_all %>%\n#   select(TXNAME = ShortSeqID, GENEID = KEGG_ko)\n# ?tximport()\n\nDon’t need this\n\n# txi_gene <- summarizeToGene(txi_makecounts,\n#                 tx2gene = tx2gene_ko,\n#                 varReduce = FALSE,\n#       ignoreTxVersion = FALSE,\n#       ignoreAfterBar = FALSE,\n#       countsFromAbundance = c(\"no\", \"scaledTPM\", \"lengthScaledTPM\")\n)\n\nDon’t need this\n\n# txi <- tximport(\n#   files = txifiles,\n#   type = \"salmon\",\n#   txIn = TRUE, #Incoming are transcript level\n#   txOut = FALSE, # output transcript-level\n#   countsFromAbundance = c(\"scaledTPM\", # scale to library size\n#                           \"lengthScaledTPM\", # scaled using average transcript length over samples and then library size\n#                           \"dtuScaledTPM\"), # scales using median transcript length among isoforms of a gene, and then library size (requires tx2gene file)\n# )"
  },
  {
    "objectID": "process-eukrhythmic-output.html#stop-here",
    "href": "process-eukrhythmic-output.html#stop-here",
    "title": "eukrhythmic compilation",
    "section": "# STOP HERE",
    "text": "# STOP HERE"
  },
  {
    "objectID": "process-eukrhythmic-output.html#section",
    "href": "process-eukrhythmic-output.html#section",
    "title": "eukrhythmic compilation",
    "section": "",
    "text": "txi_makecounts <- makeCountsFromAbundance(count_metat, tpm_metat, length_metat, countsFromAbundance = c(\"scaledTPM\", \"lengthScaledTPM\"))\n\nImport metadata.\n\nmetadata <- fread(\"input-data/complete-sample-list.txt\", \n                 header = TRUE)\n# class(metadata)\n# View(metadata)\n# head(metadata)\n\nMake sure metadata lines up with input files.\n\n# colData : Rows of colData correspond to columns of countData\n\n# example code:\n# sampleTable <- data.frame(condition = factor(rep(c(\"A\", \"B\"), each = 3)))\n# rownames(sampleTable) <- colnames(txi$counts)\n# dds <- DESeqDataSetFromTximport(txi, sampleTable, ~condition)\n# dds is now ready for DESeq() see DESeq2 vignette"
  },
  {
    "objectID": "process-eukrhythmic-output.html#tximport-step",
    "href": "process-eukrhythmic-output.html#tximport-step",
    "title": "eukrhythmic compilation",
    "section": "tximport step",
    "text": "tximport step\nUse count file, transcript length, and TPM information to obtain length scaled TPM results.\n\ntxi_makecounts <- makeCountsFromAbundance(count_metat, tpm_metat, length_metat, countsFromAbundance = c(\"scaledTPM\", \"lengthScaledTPM\"))"
  },
  {
    "objectID": "process-eukrhythmic-output.html#deseq2-analysis",
    "href": "process-eukrhythmic-output.html#deseq2-analysis",
    "title": "eukrhythmic compilation",
    "section": "DESeq2 analysis",
    "text": "DESeq2 analysis\nFilter low counts\n\n# keep <- rowSums(counts(dds)) >= 10\n# dds <- dds[keep,]\n\nSet factor levels?\n\n# dds$condition <- factor(dds$condition, levels = c(\"untreated\",\"treated\"))\n\n\nDifferential expression analysis\nResults tables are generated using the function results, which extracts a results table with log2 fold changes, p values and adjusted p values. With no additional arguments to results, the log2 fold change and Wald test p value will be for the last variable in the design formula, and if this is a factor, the comparison will be the last level of this variable over the reference level (see previous note on factor levels). However, the order of the variables of the design do not matter so long as the user specifies the comparison to build a results table for, using the name or contrast arguments of results.\nDetails about the comparison are printed to the console, directly above the results table. The text, condition treated vs untreated, tells you that the estimates are of the logarithmic fold change log2(treated/untreated).\nImport all data types, only select 100 rows though.\n\n# Count data, compiled from salmon output\ncount_metat <- fread(\"/vortexfs1/omics/alexander/data/Hu-2022-ALOHA-SPOT/Hu_et_al_2022_eukrhythmic/intermediate-files/salmon_reads_file_coordinated_1June.csv\",\n                     verbose = TRUE,\n                     showProgress = TRUE,\n                     nThread = num_threads,\n                     header = TRUE,\n                     nrow = 1000,\n                     sep = \",\",\n                     colClasses = NULL)\n\n# TPM information from salmon\ntpm_metat <- fread(\"/vortexfs1/omics/alexander/data/Hu-2022-ALOHA-SPOT/Hu_et_al_2022_eukrhythmic/intermediate-files/salmon_tpm_file_coordinated_1June.csv\",\n                   verbose = TRUE,\n                   showProgress = TRUE,\n                   nThread = num_threads,\n                   header = TRUE,\n                   nrow = 1000,\n                   sep = \",\",\n                   colClasses = NULL)\n\n# Transcript length\nlength_metat <- fread(\"/vortexfs1/omics/alexander/data/Hu-2022-ALOHA-SPOT/Hu_et_al_2022_eukrhythmic/intermediate-files/salmon_length_file_coordinated_1June.csv\",\n                      verbose = TRUE,\n                      showProgress = TRUE,\n                      nThread = num_threads,\n                      header = TRUE,\n                      nrow = 1000,\n                      sep = \",\", colClasses = NULL)"
  },
  {
    "objectID": "process-eukrhythmic-output.html#process-test-data-in-tximport",
    "href": "process-eukrhythmic-output.html#process-test-data-in-tximport",
    "title": "eukrhythmic compilation",
    "section": "Process test data in tximport",
    "text": "Process test data in tximport\n\nlength_metat$V1 <- NULL\ntpm_metat$V1 <- NULL\ncount_metat$V1 <- NULL\n\nrownames(length_metat) <- length_metat$ShortSeqID\nrownames(tpm_metat) <- tpm_metat$ShortSeqID\nrownames(count_metat) <- count_metat$ShortSeqID\n#\nlength_metat$ShortSeqID <- NULL\ntpm_metat$ShortSeqID <- NULL\ncount_metat$ShortSeqID <- NULL\n#\ntxi_makecounts <- makeCountsFromAbundance(count_metat, tpm_metat, length_metat, countsFromAbundance = c(\"scaledTPM\", \"lengthScaledTPM\"))\n\nmetadata <- fread(\"complete-sample-list.txt\", header = TRUE)\n\ntxi_makecounts is a “matrix” and “array”"
  },
  {
    "objectID": "process-eukrhythmic-output.html#deseq2-test-run",
    "href": "process-eukrhythmic-output.html#deseq2-test-run",
    "title": "eukrhythmic compilation",
    "section": "DESeq2 test run",
    "text": "DESeq2 test run\n\ndds_tpm_sample <- DESeqDataSetFromTximport(txi_makecounts,\n                                           colData = metadata,\n                                           design = ~SAMPLENAME)"
  },
  {
    "objectID": "process-eukrhythmic-output.html#set-up-r-environment",
    "href": "process-eukrhythmic-output.html#set-up-r-environment",
    "title": "eukrhythmic compilation",
    "section": "Set up R environment",
    "text": "Set up R environment\nLibrary required to execute code in R\n\n## Installations\n# if (!require(\"BiocManager\", quietly = TRUE))\n#     install.packages(\"BiocManager\")\n# BiocManager::install(\"DESeq2\")\n# BiocManager::install(\"tximport\")\n\nLoad necessary libraries & get number of available threads for data.table.\n\n# | message: false\n# | warning: false\nlibrary(data.table)\nlibrary(tidyr)\nlibrary(dplyr)\nlibrary(tximport)\nlibrary(readr)\n\nnum_threads &lt;- getDTthreads()\n# Conflicts between tidyverse and data.table can be ignored\n\nOutput files fromrun_tximport.R provide an RData file that can be used for the DESeq input file (tximport_metaT-ALOHA-CA.Rdata)."
  },
  {
    "objectID": "process-eukrhythmic-output.html#import-to-deseq",
    "href": "process-eukrhythmic-output.html#import-to-deseq",
    "title": "eukrhythmic compilation",
    "section": "Import to DESeq",
    "text": "Import to DESeq\nFor this specific project, we needed to run this R script using a large memory node. We recommend testing it on a subset of data to estimate how much memory you will need. We used a >280GB memory node.\nR script containing code below is also available r-tximport.R\nExample on HPC:\n\nmodule load R/4.3\nRscript r-tximport-061523.R\n\n\nr-tximport.R\n\nlibrary(tidyverse)\nlibrary(tximport)\nlibrary(data.table)\nnum_threads <- getDTthreads()\n\n# Identify location of all \"quant.sf\" files that are output from salmon.\nfiles <- Sys.glob(\"/../../../../intermediate-files/04-compare/14-MAD-mapping-filtered/salmon_sample/*quant/quant.sf\")\n\nRead in or create a sample_table R object.\n\nsample_table <- read.csv(\"input-data/sample_table.csv\")\n\nCombine with list of files, make sure order of files remains.\n\nsample_merged <- data.frame(\"Files\"=files) %>% \n  tidyr::separate(Files,sep=\"salmon_sample/\",into=c(\"Stem\",\"Name\")) %>%\n  tidyr::separate(Name,sep=\"_quant\",into=c(\"SName\",\"Extra\")) %>% \n  dplyr::select(SName) %>%\n  dplyr::left_join(sample_table,by=c(\"SName\"=\"SRR\")) %>%\n  tidyr::unite(\"Sample_rep\", Sample, Replicate, sep = \"_\", remove = FALSE)\n\nnames(files) <- sample_merged$Sample_rep\n\nImport and create the tx2gene object for tximport. tx2gene shows which transcripts belong to which genes for the downstream gene-level inference. Make sure the first colume of tx2gene includes meaningful sequence ID names.\n\ntx2gene <- data.frame(\n  fread(\"/../../../../final-files/03-abundance_tables/SeqID_Dict_NoSpaceNames.csv\", verbose = TRUE, showProgress = TRUE, \n        nThread = num_threads, header = TRUE, colClasses = NULL))\n\ntx2gene$V1 <- NULL\n\nRun tximport. Here, we are importing each salmon file (quant.sf) so tximport can read in the transcript-level abundance, estimated counts, and transcript lengths. This is the most memory intensive step.\n\ntxi <- tximport(files, type = \"salmon\", tx2gene = tx2gene)\n\nCreate a sample metadata table that is, again, in the same order.\n\nmetadata <- read_delim(\"input-data/complete-sample-list.txt\", delim = \",\")\n\nsample_merged <- left_join(sample_merged, metadata, by = c(\"SName\" = \"RUN\"))\n\nwrite_delim(sample_merged, file = \"input-data/sample_merged_txi.txt\")\n\nSet rownames and colnames to the same list of samples.\n\nsample_merged <- read_delim(\"input-data/sample_merged_txi.txt\")\nrownames(sample_merged) <- sample_merged$Sample_rep\nrownames(sample_merged) <- colnames(txi$counts)\n\nImport as DESeq object from tximport.\nWe dont have a control. DESeq will automatically find a control in your levels or list for the design. THere is a way for DESeq toignore this need for a control.\n\nlibrary(DESeq2)\n# colData : Rows of colData correspond to columns of countData\n# design ~ x == serves the purpose of considering biological replicates\n\ndds_tpm <- DESeqDataSetFromTximport(txi,\n                                    colData = sample_merged,\n                                    design = ~0 + SAMPLENAME)\n\nsave(dds_tpm, file = \"/vortexfs1/scratch/sarahhu/dds_tpm.RData\")"
  },
  {
    "objectID": "process-eukrhythmic-output.html#options-in-deseq-to-expore",
    "href": "process-eukrhythmic-output.html#options-in-deseq-to-expore",
    "title": "eukrhythmic compilation",
    "section": "Options in DESeq to expore:",
    "text": "Options in DESeq to expore:\nFilter low counts\n\n# keep <- rowSums(counts(dds)) >= 10\n# dds <- dds[keep,]\n\nSet factor levels?\n\n# dds$condition <- factor(dds$condition, levels = c(\"untreated\",\"treated\"))\n\n\nDifferential expression analysis\nResults tables are generated using the function results, which extracts a results table with log2 fold changes, p values and adjusted p values. With no additional arguments to results, the log2 fold change and Wald test p value will be for the last variable in the design formula, and if this is a factor, the comparison will be the last level of this variable over the reference level (see previous note on factor levels). However, the order of the variables of the design do not matter so long as the user specifies the comparison to build a results table for, using the name or contrast arguments of results.\nDetails about the comparison are printed to the console, directly above the results table. The text, condition treated vs untreated, tells you that the estimates are of the logarithmic fold change log2(treated/untreated).\n\n# dds$condition <- factor(dds$condition, levels = c(\"untreated\",\"treated\"))\n\n\n# dds$SAMPLENAME <- factor() # but this is only for a comparison across two?\n\n# For light and NPSG vs CA...\n# LIGHT + REGION\ndds$LIGHT <- relevel(dds$LIGHT, ref = \"Sub-euphotic\")\ndds$PACIFIC_REGION <- relevel(dds$PACIFIC_REGION, ref = \"CA\")\n# head(metadata)\n\n\n# res <- results(dds, name=\"condition_treated_vs_untreated\")\n# res <- results(dds, contrast=c(\"condition\",\"treated\",\"untreated\"))\n\n\n# dds <- DESeq(dds)\n# \n# res <- results(dds)\n# res\n\nOutput from res: rownames is the gene ID baseMean:average expression level across all samples, normalized by sequencing depth lg2foldchange, of treated vs. untreated padj, adjusted p-value, p-value corrected for multiple testing\nThe text, “condition treated vs untreated”, tells you that the estimates are of the logarithmic fold change log2(treated/untreated).\n\n\nQC read counts with what is annotated\nWhat sequences were not annotated? Remove them from the data.\n\n# ID seqID associated \nhead(counts_all$ShortSeqID) # There are more of these here, than was annotated\n\n# What is total number of ShortSeqIDs?\ntic()\nlength(unique(counts_all$ShortSeqID)); toc()\n# 54,080,665\n\nThere are over 54 million hits of read on contigs.\n\n# head(annot_all)\ntic()\nlength(unique(annot_all$ShortSeqID)); toc() #14,737,135 # 14 million with annotations\n\ntic()\nlength(unique(annot_all$SequenceID)); toc()\n# 14840771 - 14737135\n# 103,636 equate to duplicated ORFs\n\nOf these reads, only 14 million had an annotation. This is 27% of the reads that will be used in downstream analysis.\n\n100*(14840771/54080665)\n\n\n\nRemove unannotated.\n\nseqIDs_wannot <- as.character(unique(annot_all$ShortSeqID))\n\n# Save unannotated\nunannot_counts <- counts_all %>% \n  filter(!(ShortSeqID %in% seqIDs_wannot))\n\ncounts_annot <- counts_all %>% \n  filter(ShortSeqID %in% seqIDs_wannot)\n\nNew counts table.\n\ndim(counts_annot)"
  },
  {
    "objectID": "process-eukrhythmic-output.html#compilation-scripts",
    "href": "process-eukrhythmic-output.html#compilation-scripts",
    "title": "eukrhythmic compilation",
    "section": "",
    "text": "collate-results.py: description of code\n~Arianna - how do you want to handle this?~\n\nNotes for Sarah & Arianna: hopefully we can include a description of taking outputs from eukrhythmic and putting them in specific directories, etc. that can go stright into the run_tximport.R below."
  },
  {
    "objectID": "process-eukrhythmic-output.html#by-sample-name",
    "href": "process-eukrhythmic-output.html#by-sample-name",
    "title": "eukrhythmic compilation",
    "section": "By sample name",
    "text": "By sample name\nFor taxonomic bar plot and overall cluster analysis. (March and July are separate at ALOHA)\nSee how to set up subsetting? https://github.com/WHOIGit/super-waffle/blob/main/01_seqpain_deseq.R\n\nds_tpm_samplename &lt;- DESeqDataSetFromTximport(txi,\n                                    colData = sample_merged,\n                                    design = ~0 + SAMPLENAME)\n\noptional\n\nkeep &lt;- rowSums(counts(ds_tpm_samplename)) &gt;= 10\ndds &lt;- ds_tpm_samplename[keep,]\n\ndds includes &gt; 10. Now dim is 6972094, it was originally, 14737135. Keeping about 47% of data."
  },
  {
    "objectID": "process-eukrhythmic-output.html#extract-count-table",
    "href": "process-eukrhythmic-output.html#extract-count-table",
    "title": "eukrhythmic compilation",
    "section": "Extract count table",
    "text": "Extract count table\n\nlibrary(tximport)\n\ncounts_scaled &lt;- makeCountsFromAbundance(\n  as.matrix(txi$counts),\n  as.matrix(txi$abundance),\n  as.matrix(txi$length),\n  countsFromAbundance = \"scaledTPM\"\n)\n\ncounts_df &lt;- as.data.frame(counts_scaled)\n\nRename so replicates have the same name for counts\n\nnames_orig &lt;- colnames(counts_df)\nnames_new &lt;- sub(\"_[^_]+$\", \"\", names_orig)\ncolnames(counts_df) &lt;- names_new\n\nMean across columns that have the same name - which are replicates.\n\nmean_counts_df &lt;- counts_df %&gt;%\n  cbind(as.list(.) %&gt;%\n    Filter(is.numeric, .) %&gt;%\n    split(names(.)) %&gt;%\n    lapply(as.data.frame) %&gt;%\n    lapply(rowMeans) %&gt;%\n    setNames(paste0(\"mean.\", names(.)))) %&gt;% \n  select(starts_with(\"mean\"))\n\n\nsave(mean_counts_df, sample_merged, file = \"Avg_scaled_tpm_08222023.RData\")"
  },
  {
    "objectID": "process-eukrhythmic-output.html#extract-centered-data",
    "href": "process-eukrhythmic-output.html#extract-centered-data",
    "title": "eukrhythmic compilation",
    "section": "Extract centered data",
    "text": "Extract centered data\nSee “Count data transformations” in https://introtogenomics.readthedocs.io/en/latest/2021.11.11.DeseqTutorial.html\nUse variance Stabilizing Transformation (vst) command to estimate dispersion.\n\n# output is a DESeqtransform object\nvsd_all &lt;- vst(ds_tpm_samplename)\n\n# make a transformed count matrix\n# vsd_blind &lt;- vst(ds_tpm_samplename, blind = FALSE)\n\nExample output: &gt; using ‘avgTxLength’ from assays(dds), correcting for library size\nLook at output with assay.\n\nhead(assay(vsd_all), 4)\n\nExtract as a data frame, where values are center normalized - based on avgTxLength.\n\ndf_ctr_norm &lt;- as.data.frame(assay(vsd_all))\n\n\nsave(df_ctr_norm, file = \"normed_center_df_08222023.RData\")"
  },
  {
    "objectID": "process-eukrhythmic-output.html#euphotic-vs.-subeuphotic-overall",
    "href": "process-eukrhythmic-output.html#euphotic-vs.-subeuphotic-overall",
    "title": "eukrhythmic compilation",
    "section": "Euphotic vs. subeuphotic overall",
    "text": "Euphotic vs. subeuphotic overall\n\n# Subset txi\ntxi_npsg &lt;- subsetTxi(txi, npsg_only, genes_tax_fxn_all)\ntmp_sample_merged &lt;- sample_merged %&gt;% \n  filter(Sample_rep %in% as.character(npsg_only$sample))\nrownames(tmp_sample_merged) &lt;- tmp_sample_merged$Sample_rep\nrownames(tmp_sample_merged) &lt;- colnames(txi_npsg$counts)\n\nds_tpm_npsg_light &lt;- DESeqDataSetFromTximport(txi_npsg,\n                                              colData = tmp_sample_merged,\n                                              design = ~0 + LIGHT)\n\nds_tpm_npsg_month &lt;- DESeqDataSetFromTximport(txi_npsg,\n                                              colData = tmp_sample_merged,\n                                              design = ~0 + MONTH)\n\nsave(ds_tpm_npsg_light, ds_tpm_npsg_month, file = \"/vortexfs1/scratch/sarahhu/txi-objs-metaT/npsg-deseq.RData\")\n\n\ntxi_ca &lt;- subsetTxi(txi, ca_only, genes_tax_fxn_all)\n\ntmp_sample_merged &lt;- sample_merged %&gt;% \n  filter(Sample_rep %in% as.character(ca_only$sample))\nrownames(tmp_sample_merged) &lt;- tmp_sample_merged$Sample_rep\nrownames(tmp_sample_merged) &lt;- colnames(txi_ca$counts)\n\nds_tpm_ca_light &lt;- DESeqDataSetFromTximport(txi_ca,\n                                              colData = tmp_sample_merged,\n                                              design = ~0 + LIGHT)\n\nsave(ds_tpm_ca_light, file = \"/vortexfs1/scratch/sarahhu/txi-objs-metaT/ca-deseq.RData\")\n\nsave(txi_npsg, txi_ca, file = \"/vortexfs1/scratch/sarahhu/txi-objs-metaT/station_txi.RData\")\n\nrm(txi_npsg);rm(txi_ca) #Save room\n\n\nEuphotic vs subeuphotic across regions\n\n# Subset txi\ntxi_euph &lt;- subsetTxi(txi, euphotic, genes_tax_fxn_all)\n\ntmp_sample_merged &lt;- sample_merged %&gt;% \n  filter(Sample_rep %in% as.character(euphotic$sample))\nrownames(tmp_sample_merged) &lt;- tmp_sample_merged$Sample_rep\nrownames(tmp_sample_merged) &lt;- colnames(txi_euph$counts)\n\nds_tpm_euphotic &lt;- DESeqDataSetFromTximport(txi_euph,\n                                              colData = tmp_sample_merged,\n                                              design = ~0 + PACIFIC_REGION)\n\n\ntxi_subeuph &lt;- subsetTxi(txi, subeuphotic, genes_tax_fxn_all)\n\ntmp_sample_merged &lt;- sample_merged %&gt;% \n  filter(Sample_rep %in% as.character(subeuphotic$sample))\nrownames(tmp_sample_merged) &lt;- tmp_sample_merged$Sample_rep\nrownames(tmp_sample_merged) &lt;- colnames(txi_subeuph$counts)\n\n\nds_tpm_subeuphotic &lt;- DESeqDataSetFromTximport(txi_subeuph,\n                                              colData = tmp_sample_merged,\n                                              design = ~0 + PACIFIC_REGION)\n\nsave(ds_tpm_subeuphotic, ds_tpm_euphotic, file = \"/vortexfs1/scratch/sarahhu/txi-objs-metaT/euphotic-subeuphotic-deseq.RData\")\n\nsave(txi_euph, txi_subeuph, file = \"/vortexfs1/scratch/sarahhu/txi-objs-metaT/light_txi.RData\")"
  },
  {
    "objectID": "process-eukrhythmic-output.html#aloha-vs.-ca-samples",
    "href": "process-eukrhythmic-output.html#aloha-vs.-ca-samples",
    "title": "eukrhythmic compilation",
    "section": "ALOHA vs. CA samples",
    "text": "ALOHA vs. CA samples\n\nALOHA euphotic vs CA euphotic\n\n\nALOHA subeuphotic vs. CA sub-euphotic"
  },
  {
    "objectID": "metat-analysis.html#taxonomic-composition-distribution",
    "href": "metat-analysis.html#taxonomic-composition-distribution",
    "title": "Analysis of metatranscriptome data",
    "section": "Taxonomic composition & distribution",
    "text": "Taxonomic composition & distribution\nEvaluate taxonomic diversity and composition across all sites.\n\n# | echo: true\n# | eval: false\nlength(unique(taxfxn$SequenceID))\n# 14840771\n\nlength(unique(rownames(mean_counts_df)))\n# 14737135\n\n\n# | echo: true\n# | eval: false\nannotated_mean &lt;- dplyr::left_join(mean_counts_df %&gt;%\n                   mutate(SequenceID = rownames(mean_counts_df)),\n                                 taxfxn,\n                                 by = \"SequenceID\")\n# 14737135-14737693\n## 558 were duplicated\n\nRemove the duplicated annotations and make a base taxonomic dataframe for downstream work.\n\n# | echo: true\n# | eval: false\ntax_plot &lt;- annotated_mean %&gt;% \n  select(Domain:Species, starts_with(\"mean\"), SequenceID) %&gt;% \n  distinct()\n# dim(tax_plot) #14737624\\\n\n\n# | echo: true\n# | eval: false\nload(\"input-data/tax_plot_08222023.RData\", verbose = TRUE)\n\n\n# | echo: true\n# | eval: false\ntax_only &lt;- tax_plot %&gt;% \n  select(-SequenceID) %&gt;% \n  pivot_longer(cols = starts_with(\"mean\"), names_to = \"SAMPLE\", values_to = \"scaledTPM\") %&gt;% \n  group_by(SAMPLE, Domain, Supergroup, Phylum, Class, Order, Family, Genus, Species) %&gt;% \n    summarise(SUM_scaledTPM = sum(scaledTPM)) \n\n\nload(\"input-data/tax_only_08242023.RData\", verbose = TRUE)\n\nLoading objects:\n  tax_only\n\n\n\nPlot domain level\nCreating plot to see total number and relative abundance of non-eukaryotic hits in the data.\n\n(tax_only %&gt;%\n  mutate(DOMAIN = str_squish(Domain),\n         SAMPLE = str_remove(SAMPLE, \"mean.\")) %&gt;% \n  group_by(SAMPLE, DOMAIN) %&gt;% \n  summarise(SUM = sum(SUM_scaledTPM)) %&gt;% \n  ggplot(aes(x = SAMPLE, y = SUM, fill = DOMAIN)) +\n    geom_bar(stat = \"identity\", position = \"stack\", color = \"black\")+\n    theme_linedraw() +\n    theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))) /\n(tax_only %&gt;%\n  mutate(DOMAIN = str_squish(Domain),\n         SAMPLE = str_remove(SAMPLE, \"mean.\")) %&gt;% \n  group_by(SAMPLE, DOMAIN) %&gt;% \n  summarise(SUM = sum(SUM_scaledTPM)) %&gt;% \n  ggplot(aes(x = SAMPLE, y = SUM, fill = DOMAIN)) +\n    geom_bar(stat = \"identity\", position = \"fill\", color = \"black\")+\n    theme_linedraw() +\n    theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)))\n\n`summarise()` has grouped output by 'SAMPLE'. You can override using the\n`.groups` argument.\n`summarise()` has grouped output by 'SAMPLE'. You can override using the\n`.groups` argument.\n\n\n\n\n\nStats on what % of the data are eukaryotic vs. not.\n\nSUM_TOTAL_TPM &lt;- sum(tax_only$SUM_scaledTPM)\ntax_only %&gt;%\n  mutate(DOMAIN = str_squish(Domain),\n         SAMPLE = str_remove(SAMPLE, \"mean.\")) %&gt;% \n  filter(SUM_scaledTPM &gt; 0) %&gt;%  # Remove zeroes\n  group_by(DOMAIN) %&gt;% \n    summarise(Sum_of_TPM = sum(SUM_scaledTPM),\n              Perc_of_total = 100*(Sum_of_TPM/SUM_TOTAL_TPM),\n              .groups = \"rowwise\")\n\n# A tibble: 4 × 3\n# Rowwise:  DOMAIN\n  DOMAIN       Sum_of_TPM Perc_of_total\n  &lt;chr&gt;             &lt;dbl&gt;         &lt;dbl&gt;\n1 Archaea         305556.        0.159 \n2 Bacteria       5438767.        2.84  \n3 Eukaryota    185858173.       96.9   \n4 Unclassified    174159.        0.0908\n\n            # Count = count(DOMAIN))\n\n\n\nPlot to supergroup\n\n# head(tax_only)\ntax_only %&gt;%\n  mutate(DOMAIN = str_squish(Domain),\n         SUPERGROUP = str_squish(Supergroup),\n         PHYLUM = str_squish(Phylum),\n         SAMPLE = str_remove(SAMPLE, \"mean.\")) %&gt;% \n  filter(DOMAIN == \"Eukaryota\") %&gt;% \n  group_by(SAMPLE, Supergroup) %&gt;% \n  summarise(SUM = sum(SUM_scaledTPM)) %&gt;% \n  ggplot(aes(x = SAMPLE, y = SUM, fill = Supergroup)) +\n    geom_bar(stat = \"identity\", position = \"fill\", color = \"black\")+\n    theme_linedraw() +\n    theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))\n\n`summarise()` has grouped output by 'SAMPLE'. You can override using the\n`.groups` argument.\n\n\n\n\n\nTally composition of the supergroup.\n\ncolnames(tax_only)\n\n [1] \"SAMPLE\"        \"Domain\"        \"Supergroup\"    \"Phylum\"       \n [5] \"Class\"         \"Order\"         \"Family\"        \"Genus\"        \n [9] \"Species\"       \"SUM_scaledTPM\"\n\n# unique(tax_only$Phylum)\ntax_names &lt;- tax_only %&gt;%\n  mutate(DOMAIN = str_squish(Domain),\n         SUPERGROUP = str_squish(Supergroup),\n         PHYLUM = str_squish(Phylum),\n         SAMPLE = str_remove(SAMPLE, \"mean.\")) %&gt;% \n  filter(DOMAIN == \"Eukaryota\") %&gt;% \n  select(DOMAIN, SUPERGROUP, Class:Species) %&gt;% \n  distinct()\n\nAdding missing grouping variables: `SAMPLE`, `Domain`, `Supergroup`, `Phylum`\n\nunique(tax_names$Phylum)\n\n [1] \" Apicomplexa\"      \" Ciliophora\"       \" Dinoflagellata\"  \n [4] \" Perkinsea\"        \"Unclassified\"      \" Conosa\"          \n [7] \" Discosea\"         \" Lobosa\"           \" Chlorophyta\"     \n[10] \" Glaucophyta\"      \" Rhodophyta\"       \" Discoba\"         \n[13] \" Cryptophyta\"      \" Hacrobia_X\"       \" Haptophyta\"      \n[16] \" Choanoflagellida\" \" Fungi\"            \" Cercozoa\"        \n[19] \" Foraminifera\"     \" Ochrophyta\"       \" Opalozoa\"        \n[22] \" Sagenista\"        \" Stramenopiles_X\" \n\nunique(tax_names$Supergroup)\n\n[1] \" Alveolata\"      \" Amoebozoa\"      \" Archaeplastida\" \" Excavata\"      \n[5] \" Hacrobia\"       \" Opisthokonta\"   \" Rhizaria\"       \" Stramenopiles\" \n[9] \"Unclassified\"   \n\n\nNow, reformat taxonomic information to visualize.\n\nunique(tax_only$SAMPLE)\n\n [1] \"mean.Catalina\"     \"mean.July_1000m\"   \"mean.July_150m\"   \n [4] \"mean.July_5m\"      \"mean.July_DCM\"     \"mean.March_1000m\" \n [7] \"mean.March_150m\"   \"mean.March_5m\"     \"mean.March_DCM\"   \n[10] \"mean.PortofLA\"     \"mean.SPOT_150m\"    \"mean.SPOT_890m\"   \n[13] \"mean.SPOT_surface\"\n\n# colnames(tax_only)\n# head(sample_metadata)\ntax_formatted &lt;- data.frame(tax_only) %&gt;%\n  # Remove preceding spaces in taxonomic names\n  mutate(across(c(Domain, Supergroup, Phylum, Class, Order, Family, Genus, Species), ~ as.character(str_squish(.)))) %&gt;% \n  filter(Domain == \"Eukaryota\" & SUM_scaledTPM &gt; 0) %&gt;% \n  mutate(SAMPLE_MATCH = str_remove(SAMPLE, \"mean.\")) %&gt;%\n  left_join(sample_metadata, by = \"SAMPLE_MATCH\") %&gt;% \n  # Taxonomic group curation\n  mutate(SUPERGROUP = case_when(\n    Supergroup == \"Alveolata\" ~ paste(Supergroup, Phylum, sep = \"-\"),\n    (Class == \"Bacillariophyta\" & Supergroup == \"Stramenopiles\") ~ paste(Supergroup, \"Diatom\", sep = \"-\"),\n    (Class != \"Bacillariophyta\" & Supergroup == \"Stramenopiles\") ~ paste(Supergroup, \"Other\", sep = \"-\"),\n    Supergroup == \"Archaeplastida\" ~ \"Chlorophyte\",\n    TRUE ~ Supergroup\n  ))\n\nWarning in left_join(., sample_metadata, by = \"SAMPLE_MATCH\"): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 1 of `x` matches multiple rows in `y`.\nℹ Row 13 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n# head(tax_formatted)\n\nAssign levels for taxonomic groups.\n\ntax_order_color&lt;-c(\"#612741\",\"#b74a70\",\"#b7757c\",\"#eecfbf\",\"#92462f\",\"#bb603c\",\"#dfa837\",\"#ccc050\",\"#33431e\",\"#93b778\",\"#61ac86\",\"#657abb\",\"#1c1949\",\"#8a8d84\")\nsupergroup_order &lt;- (as.character(unique(tax_formatted$SUPERGROUP)))\nnames(tax_order_color) &lt;- (supergroup_order)\n\n\nFigure 1\n\ntax_formatted %&gt;% \n  mutate(SUPERGROUP = factor(tax_formatted$SUPERGROUP, levels = supergroup_order)) %&gt;% \n  group_by(SAMPLE_ID_PARSED, PACIFIC_REGION, LIGHT, DEPTH, SUPERGROUP) %&gt;% \n  summarise(SUM = sum(SUM_scaledTPM)) %&gt;% \n  ggplot(aes(x = SAMPLE_ID_PARSED, y = SUM, fill = SUPERGROUP)) +\n    geom_bar(stat = \"identity\", position = \"fill\", color = \"black\")+\n    facet_grid(rows = vars(PACIFIC_REGION), scales = \"free_y\", space = \"free\") +\n    scale_fill_manual(values = tax_order_color) +\n    theme_classic() +\n    coord_flip() +\n    theme(axis.text.x = element_text(vjust = 1, hjust = 1)) +\n    labs(x = \"\", y = \"TPM Relative Abundance\")\n\n`summarise()` has grouped output by 'SAMPLE_ID_PARSED', 'PACIFIC_REGION',\n'LIGHT', 'DEPTH'. You can override using the `.groups` argument.\n\n\n\n\n\n\n\nAdditional taxonomic resolution\n\nhead(tax_formatted)\n\n       SAMPLE.x    Domain Supergroup      Phylum         Class        Order\n1 mean.Catalina Eukaryota  Alveolata Apicomplexa Colpodellidea Colpodellida\n2 mean.Catalina Eukaryota  Alveolata Apicomplexa Colpodellidea Colpodellida\n3 mean.Catalina Eukaryota  Alveolata Apicomplexa Colpodellidea Colpodellida\n4 mean.Catalina Eukaryota  Alveolata Apicomplexa Colpodellidea Colpodellida\n5 mean.Catalina Eukaryota  Alveolata Apicomplexa Colpodellidea Colpodellida\n6 mean.Catalina Eukaryota  Alveolata Apicomplexa Colpodellidea Colpodellida\n        Family    Genus        Species SUM_scaledTPM SAMPLE_MATCH  X\n1 Chromeraceae Chromera Chromera velia      224.8899     Catalina 13\n2 Chromeraceae Chromera Chromera velia      224.8899     Catalina 14\n3 Chromeraceae Chromera Chromera velia      224.8899     Catalina 15\n4 Chromeraceae Chromera Chromera velia      224.8899     Catalina 16\n5 Chromeraceae Chromera Chromera velia      224.8899     Catalina 17\n6 Chromeraceae Chromera Chromera velia      224.8899     Catalina 18\n          RUN         SAMN    SAMPLE.y   Sample Replicate       BASES\n1 SRR11178183 SAMN14206057 Catalina_19 Catalina        19  8956532750\n2 SRR11178182 SAMN14206058 Catalina_20 Catalina        20  9890647250\n3 SRR11178173 SAMN14206059 Catalina_21 Catalina        21  9213733750\n4 SRR11178172 SAMN14206060 Catalina_22 Catalina        22  5346436500\n5 SRR11178171 SAMN14206061 Catalina_23 Catalina        23  7289444750\n6 SRR11178170 SAMN14206062 Catalina_24 Catalina        24 11865681500\n   BIOPROJECT    BIOSAMPLE       DATE EXPERIMENT          LAT_LON\n1 PRJNA608423 SAMN14206057 2015-05-21 SRX7798845 33.44 N 118.47 W\n2 PRJNA608423 SAMN14206058 2015-05-21 SRX7798846 33.44 N 118.47 W\n3 PRJNA608423 SAMN14206059 2015-05-21 SRX7798855 33.44 N 118.47 W\n4 PRJNA608423 SAMN14206060 2015-05-21 SRX7798856 33.44 N 118.47 W\n5 PRJNA608423 SAMN14206061 2015-05-21 SRX7798857 33.44 N 118.47 W\n6 PRJNA608423 SAMN14206062 2015-05-21 SRX7798858 33.44 N 118.47 W\n               LIBRARY        SAMPLENAME DEPTH SAMPLE_ID_PARSED DEPTH_CATEGORY\n1 Catalina_19_S22_L004 CA_Catalina_5_May     5 Catalina surface        surface\n2 Catalina_20_S23_L004 CA_Catalina_5_May     5 Catalina surface        surface\n3 Catalina_21_S24_L004 CA_Catalina_5_May     5 Catalina surface        surface\n4 Catalina_22_S25_L004 CA_Catalina_5_May     5 Catalina surface        surface\n5 Catalina_23_S26_L004 CA_Catalina_5_May     5 Catalina surface        surface\n6 Catalina_24_S27_L004 CA_Catalina_5_May     5 Catalina surface        surface\n    REGION PACIFIC_REGION MONTH    LIGHT            SUPERGROUP\n1 Catalina             CA   May Euphotic Alveolata-Apicomplexa\n2 Catalina             CA   May Euphotic Alveolata-Apicomplexa\n3 Catalina             CA   May Euphotic Alveolata-Apicomplexa\n4 Catalina             CA   May Euphotic Alveolata-Apicomplexa\n5 Catalina             CA   May Euphotic Alveolata-Apicomplexa\n6 Catalina             CA   May Euphotic Alveolata-Apicomplexa\n\nunique(tax_formatted$SUPERGROUP)\n\n [1] \"Alveolata-Apicomplexa\"    \"Alveolata-Ciliophora\"    \n [3] \"Alveolata-Dinoflagellata\" \"Alveolata-Perkinsea\"     \n [5] \"Alveolata-Unclassified\"   \"Amoebozoa\"               \n [7] \"Chlorophyte\"              \"Excavata\"                \n [9] \"Hacrobia\"                 \"Opisthokonta\"            \n[11] \"Rhizaria\"                 \"Stramenopiles-Diatom\"    \n[13] \"Stramenopiles-Other\"      \"Unclassified\"            \n\ntax_interest &lt;- c(\"Alveolata-Ciliophora\", \"Alveolata-Dinoflagellata\", \"Chlorophyte\", \"Hacrobia\", \"Rhizaria\",\"Stramenopiles-Diatom\")\npink_qual &lt;- c(\"#fff7f3\", \"#fcc5c0\", \"#fa9fb5\",\"#f768a1\",\"#dd3497\", \"#ae017e\", \"#7a0177\")\n\n\ntax_formatted %&gt;% \n  mutate(SUPERGROUP = factor(tax_formatted$SUPERGROUP, levels = supergroup_order)) %&gt;% \n  filter(SUPERGROUP %in% tax_interest) %&gt;% \n  group_by(SAMPLE_ID_PARSED, PACIFIC_REGION, LIGHT, DEPTH, SUPERGROUP, Class, Order) %&gt;% \n  summarise(SUM = sum(SUM_scaledTPM)) %&gt;% \n  ggplot(aes(x = SAMPLE_ID_PARSED, y = Order)) +\n    geom_tile(stat = \"identity\", color = \"white\", aes(fill = log(SUM))) +\n    facet_grid(cols = vars(PACIFIC_REGION), rows = vars(SUPERGROUP), scales = \"free\", space = \"free\") +\n      scale_fill_stepsn(\n      # limits = c(-5,5),\n      # breaks = c(0.0, 3.5, 7.0, 10.5),\n      show.limits = TRUE,\n      colors = pink_qual) +\n    theme_classic() +\n    # coord_flip() +\n    theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),\n          legend.position = \"top\") +\n    labs(x = \"\", y = \"Order\")\n\n`summarise()` has grouped output by 'SAMPLE_ID_PARSED', 'PACIFIC_REGION',\n'LIGHT', 'DEPTH', 'SUPERGROUP', 'Class'. You can override using the `.groups`\nargument.\n\n\n\n\n\n\n\nTable 1\nGet stats on what transcripts were annotated to various levels, etc.\nThis represents a toy dataset to troubleshoot code.\n\nload(\"input-data/toy_1000.Rdata\", verbose = TRUE)\n\n# Change to original names, so code below can be written\nannotated_mean &lt;- annotated_mean_10000\ndf_ctr_norm &lt;- ctr_norm_10000\nhead(annotated_mean)\n\n\nHow many transcripts are annotated?\n\n\ndata.frame(annotated_mean %&gt;% \n             count(output = KEGG_ko != \"-\", \n                   name = \"KEGGs\") %&gt;%\n             left_join(annotated_mean %&gt;% \n                     count(output = PFAMs != \"-\", \n                           name = \"PFAMs\")) %&gt;% \n             left_join(annotated_mean %&gt;% \n                     count(output = GOs != \"-\", \n                           name = \"GOs\")) %&gt;% \n             left_join(annotated_mean %&gt;% \n                     count(output = (GOs != \"-\" & PFAMs != \"-\" & KEGG_ko != \"-\"), \n                           name = \"All\"))) %&gt;% \n  filter(output == TRUE) %&gt;% select(-output) %&gt;% \n  pivot_longer(cols = everything(), values_to = \"Number annotated\") %&gt;% \n  mutate(Percent_annotated = 100*(`Number annotated`/length(annotated_mean$SequenceID)))\n\n\n\n\nDB\nNumber of seqs annotated\nPercent annotated\n\n\n\n\n\nKEGGs\n9970784\n67.7\n\n\n\nPFAMs\n13595566\n92.3\n\n\n\nGOs\n5442486\n36.9\n\n\n\nAll\n4963542\n33.7\n\n\n\n\n\nsummary_annotated &lt;- annotated_mean %&gt;%\n  mutate(SUM = rowSums(across(where(is.numeric)))) %&gt;%\n  select(SUM, GOs, PFAMs, KEGG_ko, Domain, Supergroup)\n\n# write.csv(summary_annotated, file = \"summary_of_annotated_totalTPM.csv\")\n# sum(summary_annotated$SUM) # TPM amount that is annotated\n\n\nHow many are annotated and have taxonomic IDs?\n\n\nnoneuk &lt;- c(\"Unclassified\", \"Bacteria\", \"Archaea\")\nas.data.frame(annotated_mean %&gt;% \n             count(output = !(Domain %in% noneuk), \n                   name = \"IDed as Eukaryote\") %&gt;% \n    left_join(annotated_mean %&gt;% \n                     count(output = !(Domain %in% noneuk) & Supergroup != \"Unclassified\", \n                           name = \"Supergroup level\")) %&gt;% \n             left_join(annotated_mean %&gt;% \n                     count(output = !(Domain %in% noneuk) & Class != \"Unclassified\", \n                           name = \"Class level\")) %&gt;% \n             left_join(annotated_mean %&gt;% \n                     count(output = !(Domain %in% noneuk) & Order != \"Unclassified\", \n                           name = \"Order level\")) %&gt;%\n            left_join(annotated_mean %&gt;% \n                     count(output = !(Domain %in% noneuk) & Family != \"Unclassified\", \n                           name = \"Family level\")) %&gt;%\n            left_join(annotated_mean %&gt;% \n                     count(output = !(Domain %in% noneuk) & Genus != \"Unclassified\", \n                           name = \"Genus level\")) %&gt;%\n              left_join(annotated_mean %&gt;% \n                     count(output = !(Domain %in% noneuk) & Species != \"Unclassified\", \n                           name = \"Species level\"))) %&gt;%  \n  filter(output == TRUE) %&gt;% select(-output) %&gt;% \n  pivot_longer(cols = everything(), values_to = \"Number annotated\") %&gt;% \n  mutate(Percent_annotated = 100*(`Number annotated`/length(annotated_mean$SequenceID)))\n\n\nNeed to run the above on the HPC."
  },
  {
    "objectID": "metat-analysis.html#euphotic-and-subeuphotic-only",
    "href": "metat-analysis.html#euphotic-and-subeuphotic-only",
    "title": "Analysis of metatranscriptome data",
    "section": "Euphotic and subeuphotic only",
    "text": "Euphotic and subeuphotic only\nsubeuphotic:in the subeuphotic, upreg in npsg or CA euphotic: in the euphotic only, upreg in NPSG or CA\n\nload(\"/vortexfs1/scratch/sarahhu/txi-objs-metaT/euphotic-subeuphotic-deseq.RData\")\n\n\n# Euphotic\ngroupsize &lt;- 2\nkeep &lt;- rowSums(counts(ds_tpm_euphotic) &gt;= 50) &gt;= groupsize\nds_tpm_light_filtered &lt;- ds_tpm_euphotic[keep,]\n\ndds_obj_filtered$PACIFIC_REGION &lt;- factor(dds_obj_filtered$PACIFIC_REGION, levels = c(\"CA\", \"NPSG\"))\n\n# this step takes time\ndds_light &lt;- DESeq2::DESeq(ds_tpm_light_filtered) \n# report results\nres_euphotic_reg &lt;- results(dds_light)\n\n\n# Subeuphotic\ngroupsize &lt;- 2\nkeep &lt;- rowSums(counts(ds_tpm_subeuphotic) &gt;= 50) &gt;= groupsize\nds_tpm_light_filtered &lt;- ds_tpm_subeuphotic[keep,]\n\ndds_obj_filtered$PACIFIC_REGION &lt;- factor(dds_obj_filtered$PACIFIC_REGION, levels = c(\"CA\", \"NPSG\"))\n\n# this step takes time\ndds_light &lt;- DESeq2::DESeq(ds_tpm_light_filtered) \n# report results\nres_subeuphotic_reg &lt;- results(dds_light)\n\n\nsave(res_subeuphotic_reg, res_euphotic_reg, file = \"DE_results_region_light.RData\")\n\n\nAug 25 ** this is all running on poseidon!\n\n\nBring locally.\n\n# load(\"input-data/DE_results_light.RData\", verbose = TRUE)\n\nGet stats on these outputs.\n\n# summary(res_light)\n# summary(res_pacific)\n# hist(res_pacific$log2FoldChange)\n\n\n# plotMA(res_light)\n# plotMA(res_lightpac)\n# plotMA(res_light_05)"
  },
  {
    "objectID": "process-eukrhythmic-output.html#subseting-txi",
    "href": "process-eukrhythmic-output.html#subseting-txi",
    "title": "eukrhythmic compilation",
    "section": "Subseting txi",
    "text": "Subseting txi\n\nSamples\nUse the metadata data frame to create sample lists for the comparisons we want to do.\n\nmetadata &lt;- read.csv(\"input-data/sample-list-revised.txt\")\n# head(metadata)\n# unique(metadata$REGION)\n\nAs is, we can do LIGHT and PACIFIC_REGION - these are binary.\n\nds_tpm_light &lt;- DESeqDataSetFromTximport(txi,\n                                              colData = sample_merged,\n                                              design = ~0 + LIGHT)\n\nds_tpm_pac &lt;- DESeqDataSetFromTximport(txi,\n                                              colData = sample_merged,\n                                              design = ~0 + PACIFIC_REGION)\n\nds_tpm_lightpac &lt;- DESeqDataSetFromTximport(txi,\n                                              colData = sample_merged,\n                                              design = ~0 + PACIFIC_REGION + LIGHT)\n\nsave(ds_tpm_light, ds_tpm_pac, ds_tpm_lightpac, file = \"light-pacregion-deseq.RData\")\n\nCompare and contrast within regions.\n\nnpsg_only &lt;- metadata %&gt;% \n  filter(PACIFIC_REGION == \"NPSG\") %&gt;% \n  select(sample = SAMPLE)\n# Compare euphotic and subeuphotic\n# Use this to compare across months too\n\nca_only &lt;- metadata %&gt;% \n  filter(PACIFIC_REGION != \"NPSG\") %&gt;% \n  select(sample = SAMPLE)\n# Compare euphotic and subeuphotic\n\nca_coast &lt;- metadata %&gt;% \n  filter(PACIFIC_REGION != \"NPSG\" & REGION != \"SPOT\") %&gt;% \n  select(sample = SAMPLE)\n# compare POLA vs. Catalina\n\nstations_only &lt;- metadata %&gt;% \n  filter(REGION == \"SPOT\" | REGION == \"ALOHA\") %&gt;% \n  select(sample = SAMPLE)\n# compare SPOT vs. ALOHA as is\n\neuphotic &lt;- metadata %&gt;% \n  filter(LIGHT == \"Euphotic\")%&gt;% \n  select(sample = SAMPLE)\n# Compare NPSG to CA euphotic zone\n\nsubeuphotic &lt;- metadata %&gt;% \n  filter(LIGHT != \"Euphotic\")%&gt;% \n  select(sample = SAMPLE)\n# Compare NPSG to CA subeuphotic zone\n\n\n\nGenes\nNeed to make a list of the SequenceID from the taxonomy and functional annotations.\n\ntaxfxn &lt;- read.csv(\"TaxonomicAndFunctionalAnnotations.csv\")\n\nR objects that are character lists will be most useful.\n\n# Get list of annotations where a GO, PFAM, and KEGG ID were assigned.\ngenes_fxn_all &lt;- as.character(\n  filter(taxfxn, GOs != \"-\" & PFAMs != \"-\" & KEGG_ko != \"-\") %&gt;% \n    select(SequenceID) %&gt;% \n    .[[\"SequenceID\"]]) #this line outputs the selected vector from the pipe\n\n# Removing unclassified and unannotated sequences\ngenes_tax_fxn_all &lt;- as.character(\n  filter(taxfxn, GOs != \"-\" & PFAMs != \"-\" & KEGG_ko != \"-\"\n         & Domain == \"Eukaryota\" & Supergroup != \"Unclassified\") %&gt;% \n    select(SequenceID) %&gt;% \n    .[[\"SequenceID\"]])\n\nFrom KEGG database reformatting, extract this Robject, key_geneid\n\n# head(key_geneid)\nkegg_keep &lt;- as.character(key_geneid %&gt;% \n  filter(Category01 != \"\" & !(is.na(Category01))) %&gt;% \n  select(KEGG) %&gt;% \n  .[[\"KEGG\"]])\n \nlength(kegg_keep)\n\ngenes_kegg_curated &lt;- as.character(taxfxn %&gt;%\n    mutate(KEGG_mod = str_remove_all(KEGG_ko, \"ko:\")) %&gt;% \n    filter(KEGG_mod %in% kegg_keep) %&gt;% \n    select(SequenceID) %&gt;% \n    .[[\"SequenceID\"]])\n\nSave objects for subsetting.\n\nsave(genes_fxn_all, genes_tax_fxn_all, key_geneid,\n     npsg_only, ca_only, ca_coast, stations_only, euphotic, subeuphotic,\n     file = \"sample-gene-lists_TXISUBSET.RData\")\n\n\n\nFunction\n\n# Subset txi directly\nsubsetTxi &lt;- function(txi, samples, include_genes=rownames(txi$counts))\n  {\n  genes &lt;- rownames(txi$counts)[rownames(txi$counts) %in% include_genes]\n  txi$abundance &lt;- txi$abundance[genes, samples$sample]\n  txi$counts &lt;- txi$counts[genes, samples$sample]\n  txi$length &lt;- txi$length[genes, samples$sample]\n  return(txi)\n  }\n\n# Example usage \n# tmp &lt;- sample(taxfxn$SequenceID,10,replace = FALSE)\n# pola &lt;- data.frame(sample = c(\"PortofLA_1\", \"PortofLA_2\"))\n# txi_pola &lt;- subsetTxi(txi, pola, tmp)"
  },
  {
    "objectID": "process-eukrhythmic-output.html#subset-to-genes-of-interest-only",
    "href": "process-eukrhythmic-output.html#subset-to-genes-of-interest-only",
    "title": "eukrhythmic compilation",
    "section": "Subset to genes of interest only",
    "text": "Subset to genes of interest only\n\ntaxfxn &lt;- read.csv(\"TaxonomicAndFunctionalAnnotations.csv\")\n\n\nlibrary(tximport)\nlibrary(tidyverse)\n\n\nall_samples &lt;- metadata %&gt;% \n  select(sample = SAMPLE)\n\ntxi_curated &lt;- subsetTxi(txi, all_samples, genes_kegg_curated)\n\n\ncounts_scaled_curated &lt;- makeCountsFromAbundance(\n  as.matrix(txi_curated$counts),\n  as.matrix(txi_curated$abundance),\n  as.matrix(txi_curated$length),\n  countsFromAbundance = \"scaledTPM\"\n)\n\ncounts_df_curated &lt;- as.data.frame(counts_scaled_curated)\n\nnames_orig &lt;- colnames(counts_df_curated)\nnames_new &lt;- sub(\"_[^_]+$\", \"\", names_orig)\ncolnames(counts_df_curated) &lt;- names_new\n\nmean_counts_df_curated &lt;- counts_df_curated %&gt;%\n  cbind(as.list(.) %&gt;%\n    Filter(is.numeric, .) %&gt;%\n    split(names(.)) %&gt;%\n    lapply(as.data.frame) %&gt;%\n    lapply(rowMeans) %&gt;%\n    setNames(paste0(\"mean.\", names(.)))) %&gt;% \n  select(starts_with(\"mean\"))\n\n\ncounts_curated &lt;- mean_counts_df_curated %&gt;% \n  rownames_to_column(var = \"SequenceID\") %&gt;% \n  left_join(taxfxn)\n\nsave(counts_curated, sample_merged, file = \"Avg_scaled_tpm_curated_08252023.RData\")\n\n\ntmp_sample_merged &lt;- sample_merged %&gt;% \n  filter(Sample_rep %in% as.character(all_samples$sample))\n\nrownames(tmp_sample_merged) &lt;- tmp_sample_merged$Sample_rep\nrownames(tmp_sample_merged) &lt;- colnames(txi_curated$counts)\n\nds_tpm_curated &lt;- DESeqDataSetFromTximport(txi_curated,\n                                    colData = tmp_sample_merged,\n                                    design = ~0 + SAMPLENAME)\n\nvsd_all &lt;- vst(ds_tpm_curated)\n\ndf_ctr_norm_curated &lt;- as.data.frame(assay(vsd_all))\n\nctr_norm_curated &lt;- df_ctr_norm_curated %&gt;% \n  rownames_to_column(var = \"SequenceID\") %&gt;% \n  left_join(taxfxn)\n\n\nsave(ctr_norm_curated, ds_tpm_curated, file = \"normed_center_df_curated_08252023.RData\")"
  },
  {
    "objectID": "metat-analysis.html#import-kegg-ids",
    "href": "metat-analysis.html#import-kegg-ids",
    "title": "Analysis of metatranscriptome data",
    "section": "Import KEGG IDs",
    "text": "Import KEGG IDs\nThese have been curated.\n\nkegg &lt;- read.csv(\"../KEGG_DB/combined_kegg.csv\")\n# head(kegg$KO_number)\ncurated_kegg &lt;- read.csv(\"../KEGG_DB/reformat-kegg-pfam-skh.csv\")\n\nkey_geneid &lt;- curated_kegg %&gt;% \n  select(-X) %&gt;% \n  right_join(kegg %&gt;% select(KEGG = KO_number, everything(), -X)) %&gt;% \n  distinct() %&gt;% \n  select(starts_with(\"KeggOrthology_\"), Category01, Category02, FullName, GeneID, Gene_identification, KEGG, PFAM, Descriptions, REF = REFs)\n\nJoining with `by = join_by(KEGG)`\n\n\nWarning in right_join(., kegg %&gt;% select(KEGG = KO_number, everything(), : Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 1 of `x` matches multiple rows in `y`.\nℹ Row 38 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\nSubset key_geneid dataframe to select what we want from it.\n\n# head(key_geneid)\n# unique(key_geneid$KeggOrthology_B)\n\nkegg_ortho_based &lt;- key_geneid %&gt;% \n  select(KeggOrthology_B, KEGG, GeneID, Gene_identification) %&gt;% \n  filter(!is.na(KeggOrthology_B)) %&gt;% \n  distinct()\n\n# dim(key_geneid)\n# dim(kegg_ortho_based)\n\n\nkegg_curated &lt;- key_geneid %&gt;% \n  select(Category01, Category02, KEGG, GeneID, Gene_identification) %&gt;% \n  filter(!is.na(Category01)) %&gt;% \n  distinct()\n# dim(kegg_curated)\n# unique(kegg_curated$Category01)\n\nCreate ordered list for genes related to N and P metabolism.\n\n# head(curated_kegg)\ngeneid_order_nuts &lt;- as.character(curated_kegg %&gt;% \n  filter(Category01 == \"N and P metabolism\") %&gt;% \n  rownames_to_column(var = \"ORDER\") %&gt;% \n  select(ORDER, GeneID) %&gt;% \n    rbind(data.frame(ORDER = 0, GeneID = \"Mean\")) %&gt;% \n  distinct() %&gt;% arrange(as.numeric(ORDER)) %&gt;% \n  select(GeneID) %&gt;% \n    .[[\"GeneID\"]])\ngeneid_order_nuts\n\n [1] \"Mean\"                  \"NRT, narK, nrtP, nasA\" \"amt, AMT, MEP\"        \n [4] \"AAPJ\"                  \"NR\"                    \"nirA\"                 \n [7] \"HCP\"                   \"NPD\"                   \"CYNS\"                 \n[10] \"glnA, GLUL\"            \"GLT1\"                  \"GLT(ferredoxin)\"      \n[13] \"GLTD\"                  \"gdhA\"                  \"gdh2\"                 \n[16] \"CPS1\"                  \"OTC, argF, argI\"       \"argG, ASS1\"           \n[19] \"argH, ASL\"             \"rocF, arg\"             \"URE\"                  \n[22] \"ureG\"                  \"ureD, ureH\"            \"UT\"                   \n[25] \"DUR3\"                  \"PHO87_91\"              \"PTA\"                  \n[28] \"NPT\"                   \"ARSA\"                  \"5-nucleotidase\"       \n[31] \"phoD\"                  \"GDP\"                   \"NTD\"                  \n[34] \"VTC\"                   \"arsC\"                 \n\ngeneid_order_hets &lt;- as.character(curated_kegg %&gt;% \n  filter(Category01 == \"Phagotrophy\") %&gt;% \n  rownames_to_column(var = \"ORDER\") %&gt;% \n  select(ORDER, Category02) %&gt;% \n    rbind(data.frame(ORDER = 0, Category02 = \"Mean\")) %&gt;% \n  arrange(as.numeric(ORDER)) %&gt;%  \n  select(Category02) %&gt;% distinct() %&gt;%\n    .[[\"Category02\"]]) \ngeneid_order_hets\n\n [1] \"Mean\"                            \"Actin polymerization\"           \n [3] \"Chitinase\"                       \"Endocytosis\"                    \n [5] \"Fatty acid biosynthesis\"         \"Fatty acid breakdown\"           \n [7] \"Lysosome binding and processing\" \"Motility and prey recognition\"  \n [9] \"Phagosome maturation\"            \"SNARE complex\"                  \n[11] \"V-type ATPase\""
  },
  {
    "objectID": "metat-analysis.html#targeted",
    "href": "metat-analysis.html#targeted",
    "title": "Analysis of metatranscriptome data",
    "section": "Targeted",
    "text": "Targeted\nFirst we will focus on transcripts among phytoplankton that were annotated under the N and P metabolism category.\n\nunique(counts_curated_annot$Category01)\n\n[1] \"Gluconeogenesis-glycolysis\" \"Energy Acquisition\"        \n[3] \"Phagotrophy\"                \"Nutrient processing\"       \n[5] \"Glyoxylate cycle\"           \"N and P metabolism\"        \n[7] \"Carbon fixation\"            \"Photosynthesis\"            \n[9] \"Entner-Doudoroff pathway\"  \n\n\nPlanning to subset genes from the N and P metabolism category. Modify input table for downstream visualization.\n\n# min(as.numeric(counts_curated_annot))\nn_p_TPM_0 &lt;- counts_curated_annot %&gt;% \n  filter(Category01 == \"N and P metabolism\" & Domain == \"Eukaryota\") %&gt;% \n  select(starts_with(\"mean.\"), Supergroup:Species, Category02, GeneID, Gene_identification, PFAMs) %&gt;% \n  pivot_longer(cols = starts_with(\"mean.\"), names_to = \"SAMPLE_tmp\", values_to = \"TPM\") %&gt;% \n  mutate(SAMPLE = str_remove(SAMPLE_tmp, \"mean.\"))\n\n# head(n_p_TPM_0)\nmin_TPM &lt;- min((n_p_TPM_0 %&gt;% filter(TPM&gt;0))$TPM)\n# log(min_TPM)\n\nn_p_TPM_1 &lt;- n_p_TPM_0 %&gt;%\n  mutate(TAXA = case_when(\n    Phylum == \"Dinoflagellata\" ~ \"Dinoflagellate\",\n    Phylum == \"Ciliophora\" ~ \"Ciliate\",\n    Phylum == \"Haptophyta\" ~ \"Haptophyte\",\n    Phylum == \"Chlorophyta\" ~ \"Chlorophyte\",\n    Class == \"Bacillariophyta\" ~ \"Diatom\",\n    Supergroup == \"Rhizaria\" ~ \"Rhizaria\",\n    TRUE ~ \"Else\")) %&gt;% \n  select(TAXA, SAMPLE, Category02, GeneID, Gene_identification, PFAMs, TPM) %&gt;% \n  filter(TAXA != \"Else\") %&gt;% \n  mutate(TPM_mod = case_when(\n    TPM == 0 ~ min_TPM,\n    TRUE ~ TPM))\n\n# Changed 0 for TPM to be the minimum\n\n# length(unique(n_p_TPM_1$GeneID)) # 24 total genes\n\nn_p_TPM_meanSAMPLE &lt;- n_p_TPM_1 %&gt;% \n  group_by(TAXA, Category02, GeneID, Gene_identification, PFAMs) %&gt;% \n  summarise(MEAN_TPM = mean(TPM_mod)) %&gt;% \n  add_column(SAMPLE = \"Mean\")\n\n`summarise()` has grouped output by 'TAXA', 'Category02', 'GeneID',\n'Gene_identification'. You can override using the `.groups` argument.\n\nn_p_TPM_meanGeneID &lt;- n_p_TPM_1 %&gt;% \n  group_by(TAXA, Category02, SAMPLE, Gene_identification, PFAMs) %&gt;% \n  summarise(MEAN_TPM = mean(TPM_mod)) %&gt;% \n  add_column(GeneID = \"Mean\")\n\n`summarise()` has grouped output by 'TAXA', 'Category02', 'SAMPLE',\n'Gene_identification'. You can override using the `.groups` argument.\n\nn_p_TPM_df &lt;- n_p_TPM_1 %&gt;% \n  group_by(TAXA, Category02, SAMPLE, GeneID, Gene_identification, PFAMs) %&gt;% \n  summarise(MEAN_TPM = mean(TPM_mod)) %&gt;% \n  rbind(n_p_TPM_meanSAMPLE) %&gt;% \n  rbind(n_p_TPM_meanGeneID) %&gt;% \n  mutate(FACET_SAMPLE = case_when(\n    SAMPLE == \"Mean\" ~ \"AVG\",\n    TRUE ~ \"SAMPLE\"\n  ),\n  FACET_GENE = case_when(\n    GeneID == \"Mean\" ~ \"AVG\",\n    TRUE ~ \"GENE\"\n  )) \n\n`summarise()` has grouped output by 'TAXA', 'Category02', 'SAMPLE', 'GeneID',\n'Gene_identification'. You can override using the `.groups` argument.\n\nhead(n_p_TPM_df)\n\n# A tibble: 6 × 9\n# Groups:   TAXA, Category02, SAMPLE, GeneID, Gene_identification [4]\n  TAXA  Category02 SAMPLE GeneID Gene_identification PFAMs MEAN_TPM FACET_SAMPLE\n  &lt;chr&gt; &lt;chr&gt;      &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt;               &lt;chr&gt;    &lt;dbl&gt; &lt;chr&gt;       \n1 Chlo… GS/GOGAT   Catal… GLT(f… E1.4.7.1; glutamat… GATa…  4.64    SAMPLE      \n2 Chlo… GS/GOGAT   Catal… GLT1   GLT1; glutamate sy… Fer4…  1.97    SAMPLE      \n3 Chlo… GS/GOGAT   Catal… GLT1   GLT1; glutamate sy… Fer4…  1.68    SAMPLE      \n4 Chlo… GS/GOGAT   Catal… GLT1   GLT1; glutamate sy… GATa…  0.00543 SAMPLE      \n5 Chlo… GS/GOGAT   Catal… GLTD   gltD; glutamate sy… Fer4…  0.582   SAMPLE      \n6 Chlo… GS/GOGAT   Catal… gdh2   GDH2; glutamate de… Bac_…  0.567   SAMPLE      \n# ℹ 1 more variable: FACET_GENE &lt;chr&gt;\n\nunique(n_p_TPM_df$TAXA)\n\n[1] \"Chlorophyte\"    \"Ciliate\"        \"Diatom\"         \"Dinoflagellate\"\n[5] \"Haptophyte\"     \"Rhizaria\"      \n\nunique(n_p_TPM_df$SAMPLE)\n\n [1] \"Catalina\"     \"July_1000m\"   \"July_150m\"    \"July_5m\"      \"July_DCM\"    \n [6] \"March_1000m\"  \"March_150m\"   \"March_5m\"     \"March_DCM\"    \"PortofLA\"    \n[11] \"SPOT_150m\"    \"SPOT_890m\"    \"SPOT_surface\" \"Mean\"        \n\nsample_order &lt;- c(\"Catalina\", \"PortofLA\", \"SPOT_surface\", \"SPOT_150m\", \"SPOT_890m\",\n  \"July_5m\", \"March_5m\", \"July_DCM\",\"March_DCM\", \"July_150m\", \"March_150m\", \"July_1000m\", \"March_1000m\", \"Mean\")\nsample_label &lt;- c(\"Catalina\", \"Port of LA\", \"SPOT surface\", \"SPOT 150m\", \"SPOT 890m\",\n  \"ALOHA surface (July)\", \"ALOHA surface (March)\", \"ALOHA DCM (July)\",\"ALOHA DCM (March)\", \"ALOHA 150m (July)\", \"ALOHA 150m (March)\", \"ALOHA 1000m (July)\", \"ALOHA 1000m (March)\", \"Mean\")\nyl_red &lt;- c(\"#ffffcc\", \"#fed976\", \"#feb24c\", \"#fc4e2a\", \"#e31a1c\", \"#b10026\")\nreds &lt;- c(\"#f7f7f7\",\"#fee5d9\", \"#fcae91\", \"#fb6a4a\", \"#a50f15\")\nn_p_TPM_df$SAMPLE_ORDER &lt;- factor(n_p_TPM_df$SAMPLE, levels = rev(sample_order), labels = rev(sample_label))\nn_p_TPM_df$GeneID_ORDER &lt;- factor(n_p_TPM_df$GeneID, levels = geneid_order_nuts)\n\nphyto &lt;- c(\"Diatom\", \"Chlorophyte\", \"Haptophyte\", \"Dinoflagellate\")\n\n\nn_p_TPM_df %&gt;%\n  filter(TAXA %in% phyto) %&gt;% \n   ggplot(aes(x = SAMPLE_ORDER, y = GeneID_ORDER, fill = log(MEAN_TPM))) +\n    geom_tile(stat = \"identity\", color = \"black\") +\n  scale_fill_stepsn(\n      # limits = c(-5,5),\n      # breaks = c(0.0, 3.5, 7.0, 10.5),\n      show.limits = TRUE,\n      # colors = reds) +\n      colors = yl_red) +\n    coord_flip() +\n    theme_classic() +\n    facet_grid(cols = vars(FACET_GENE), rows = vars(TAXA, rev(FACET_SAMPLE)), \n               space = \"free\", scales = \"free\", switch = \"y\") +\n    # scale_y_discrete(position = \"right\") +\n    scale_x_discrete(position = \"top\") +\n    labs(x = \"\", y = \"\") +\n    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, color = \"black\"),\n          axis.text.y = element_text(color = \"black\", vjust = 0.5, hjust = 1),\n          strip.background = element_blank(),\n          axis.line = element_blank(),\n          panel.border = element_blank(),\n          axis.ticks = element_blank(),\n          panel.grid = element_blank(),\n          strip.placement = \"outside\",\n          strip.text.x = element_blank())\n\n\n\n\n\nn_p_TPM_df %&gt;% \n  filter(TAXA == \"Chlorophyte\") %&gt;% \n   ggplot(aes(x = SAMPLE_ORDER, y = GeneID, fill = log(MEAN_TPM))) +\n    geom_tile(stat = \"identity\", color = \"black\") +\n  scale_fill_stepsn(\n      # limits = c(-5,5),\n      # breaks = c(0.0, 3.5, 7.0, 10.5),\n      show.limits = TRUE,\n      colors = reds) +\n    coord_flip() +\n    theme_classic() +\n    facet_grid(cols = vars(FACET_GENE), rows = vars(rev(FACET_SAMPLE)), space = \"free\", scales = \"free\") +\n    # scale_y_discrete(position = \"right\") +\n    scale_x_discrete(position = \"top\") +\n    labs(x = \"\", y = \"\") +\n    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, color = \"black\"),\n          axis.text.y = element_text(color = \"black\", vjust = 0.5, hjust = 1),\n          strip.background = element_blank(),\n          axis.line = element_blank(),\n          panel.border = element_blank(),\n          axis.ticks = element_blank(),\n          panel.grid = element_blank(),\n          strip.text = element_blank())\n\n\n\n\n\nn_p_TPM_df %&gt;% \n  filter(TAXA == \"Haptophyte\") %&gt;% \n   ggplot(aes(x = SAMPLE_ORDER, y = GeneID, fill = log(MEAN_TPM))) +\n    geom_tile(stat = \"identity\", color = \"black\") +\n  scale_fill_stepsn(\n      # limits = c(-5,5),\n      # breaks = c(0.0, 3.5, 7.0, 10.5),\n      show.limits = TRUE,\n      colors = reds) +\n    coord_flip() +\n    theme_classic() +\n    facet_grid(cols = vars(FACET_GENE), rows = vars(rev(FACET_SAMPLE)), space = \"free\", scales = \"free\") +\n    # scale_y_discrete(position = \"right\") +\n    scale_x_discrete(position = \"top\") +\n    labs(x = \"\", y = \"\") +\n    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, color = \"black\"),\n          axis.text.y = element_text(color = \"black\", vjust = 0.5, hjust = 1),\n          strip.background = element_blank(),\n          axis.line = element_blank(),\n          panel.border = element_blank(),\n          axis.ticks = element_blank(),\n          panel.grid = element_blank(),\n          strip.text = element_blank())\n\n\n\n\n\nn_p_TPM_df %&gt;% \n  filter(TAXA == \"Dinoflagellate\") %&gt;% \n   ggplot(aes(x = SAMPLE_ORDER, y = GeneID, fill = log(MEAN_TPM))) +\n    geom_tile(stat = \"identity\", color = \"black\") +\n  scale_fill_stepsn(\n      # limits = c(-5,5),\n      # breaks = c(0.0, 3.5, 7.0, 10.5),\n      show.limits = TRUE,\n      colors = reds) +\n    coord_flip() +\n    theme_classic() +\n    facet_grid(cols = vars(FACET_GENE), rows = vars(rev(FACET_SAMPLE)), space = \"free\", scales = \"free\") +\n    # scale_y_discrete(position = \"right\") +\n    scale_x_discrete(position = \"top\") +\n    labs(x = \"\", y = \"\") +\n    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, color = \"black\"),\n          axis.text.y = element_text(color = \"black\", vjust = 0.5, hjust = 1),\n          strip.background = element_blank(),\n          axis.line = element_blank(),\n          panel.border = element_blank(),\n          axis.ticks = element_blank(),\n          panel.grid = element_blank(),\n          strip.text = element_blank())\n\n\n\n\n\nn_p_TPM_df %&gt;% \n  filter(TAXA == \"Diatom\") %&gt;% \n   ggplot(aes(x = SAMPLE_ORDER, y = GeneID, fill = log(MEAN_TPM))) +\n    geom_tile(stat = \"identity\", color = \"black\") +\n  scale_fill_stepsn(\n      # limits = c(-5,5),\n      # breaks = c(0.0, 3.5, 7.0, 10.5),\n      show.limits = TRUE,\n      colors = reds) +\n    coord_flip() +\n    theme_classic() +\n    facet_grid(cols = vars(FACET_GENE), rows = vars(rev(FACET_SAMPLE)), space = \"free\", scales = \"free\") +\n    # scale_y_discrete(position = \"right\") +\n    scale_x_discrete(position = \"top\") +\n    labs(x = \"\", y = \"\") +\n    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, color = \"black\"),\n          axis.text.y = element_text(color = \"black\", vjust = 0.5, hjust = 1),\n          strip.background = element_blank(),\n          axis.line = element_blank(),\n          panel.border = element_blank(),\n          axis.ticks = element_blank(),\n          panel.grid = element_blank(),\n          strip.text = element_blank())\n\n\n\n\n\nWhat kinds of things can we say about specific genes?"
  },
  {
    "objectID": "metat-analysis.html#untargeted",
    "href": "metat-analysis.html#untargeted",
    "title": "Analysis of metatranscriptome data",
    "section": "Untargeted",
    "text": "Untargeted\nComplete code: /scripts/get_euphotic_DE_bytaxa.R\nUse output files below for further analysis below.\n\nStats on DE transcripts\n\nde_all &lt;- read.csv(\"input-data/bytaxa_euphoticzone_DE.csv\")\nde_all\n\nExample code for compiling DE transcripts by individual taxa (from script):\n\nload(\"euphotic_by_taxa.RData\", verbose = TRUE)\n\n\nres_hapto &lt;- results(de_hapto, alpha=0.05)\n\nplot_hapto &lt;- data.frame(res_hapto) %&gt;% \n  mutate(REGULATION = case_when(\n    log2FoldChange &gt; 0 ~ \"upregulated in CA\",\n    log2FoldChange &lt; 0 ~ \"upregulated in NPSG\"\n  ),\n  SIGNIFICANT = case_when(\n    pvalue &lt;= 0.05 ~ \"Significantly\",\n    TRUE ~ \"Not significantly\"\n  )) %&gt;% \n  ggplot(aes(x = baseMean, y = log2FoldChange, color = SIGNIFICANT)) +\n  geom_point(stat = \"identity\") +\n  scale_x_log10() +\n  theme_classic() +\n  scale_color_manual(values = c(\"#878787\", \"#d73027\")) +\n  labs(title = mcols(res_hapto)$description[2])\n\nhapto_transcripts &lt;- data.frame(res_hapto) %&gt;% \n  mutate(REGULATION = case_when(\n    log2FoldChange &gt; 0 ~ \"upregulated in CA\",\n    log2FoldChange &lt; 0 ~ \"upregulated in NPSG\"\n  ),\n  SIGNIFICANT = case_when(\n    pvalue &lt;= 0.05 ~ \"Significantly\",\n    TRUE ~ \"Not significantly\"\n  )) %&gt;% \n  filter(SIGNIFICANT == \"Significantly\") %&gt;% \n  rownames_to_column(var = \"SequenceID\") %&gt;% \n  mutate(TAXA = \"Haptophyte\")\n\nwrite.csv(hapto_transcripts, file = \"hapto_sig_de_euphotic.csv\")\n\nSee script: euphotic_region_bytax.R.\n\n# List of DE transcripts - what is upregulated vs downregulated by taxa\nde_all &lt;- read.csv(\"bytaxa_euphoticzone_DE.csv\")\n#\nde_chloro &lt;- read.csv(\"chloro_sig_de_euphotic.csv\")\nde_dino &lt;- read.csv(\"dinos_sig_de_euphotic.csv\")\nde_diatom &lt;- read.csv(\"diatom_sig_de_euphotic.csv\")\nde_hapto &lt;- read.csv(\"hapto_sig_de_euphotic.csv\")\n\nSequence IDs are all unique, because they correspond to taxa. Therefore, we need to include gene-level IDs so we can compare what is DE across CA vs. NPSG.\n\n# Import KEGG information\ntaxfxn &lt;- read.csv(\"TaxonomicAndFunctionalAnnotations.csv\")\n\nalltax &lt;- de_chloro %&gt;% \n  rbind(de_diatom) %&gt;% \n  rbind(de_dino) %&gt;% \n  rbind(de_hapto) %&gt;% \n  select(SequenceID, log2FoldChange, pvalue, REGULATION, TAXA) %&gt;%\n  left_join(taxfxn)\n\nThis alltax Robj is helpful for coming back to getting more taxonomic resolution.\nWhat is shared versus unique?\n\nalltax_compareDE &lt;- alltax %&gt;% \n  unite(GENEID_ko_pfam, PFAMs, KEGG_ko, sep = \";\") %&gt;% \n  select(REGULATION, TAXA, log2FoldChange, GENEID_ko_pfam) %&gt;% \n  group_by(REGULATION, GENEID_ko_pfam, TAXA) %&gt;%\n  summarise(n = dplyr::n(), .groups = \"drop\") %&gt;%\n  filter(n &gt; 1L) %&gt;% \n  pivot_wider(names_from = TAXA, values_from = n)\n\nsave(alltax_compareDE, alltax, file = \"taxa-untarget-q1.RData\")\n\n\n\nLocal - untargeted mining\n\nload(\"input-data/taxa-untarget-q1.RData\")\n\n\nlibrary(ggupset)\n\nalltax %&gt;% \n  unite(GENEID_ko_pfam, PFAMs, KEGG_ko, sep = \";\") %&gt;% \n  select(REGULATION, TAXA, log2FoldChange, GENEID_ko_pfam) %&gt;% \n  group_by(REGULATION, GENEID_ko_pfam, TAXA) %&gt;%\n  summarise(n = dplyr::n(), .groups = \"drop\") %&gt;%\n  filter(n &gt; 1L) %&gt;% \n  group_by(GENEID_ko_pfam, REGULATION) %&gt;% \n    summarise(TAXA = list(TAXA)) %&gt;% \n  ggplot(aes(x = TAXA)) +\n    geom_bar(aes(fill = REGULATION)) +\n    scale_fill_manual(values = c(\"#74add1\", \"#fdae61\")) +\n    scale_x_upset(order_by = \"freq\") +\n  theme_classic() +\n    theme(axis.text.x = element_text(vjust = 1, hjust = 1)) +\n    labs(x = \"\", y = \"TPM Relative Abundance\")\n\n`summarise()` has grouped output by 'GENEID_ko_pfam'. You can override using\nthe `.groups` argument.\n\n\n\n\n\nBased on this plot, it looks like these taxa primarily have their own strategies in the coastal California environment versus the NPSG environment.\n\nhead(alltax)\n\n                                                                                      SequenceID\n1   megahit_ALOHA_July_5m_k51_100623_flag=1_multi=8.4034_len=574_ALOHA_July_5m.filtered.fasta.p1\n2 megahit_ALOHA_July_5m_k51_1008920_flag=0_multi=17.7732_len=342_ALOHA_July_5m.filtered.fasta.p1\n3 megahit_ALOHA_July_5m_k51_1052293_flag=1_multi=40.0969_len=505_ALOHA_July_5m.filtered.fasta.p1\n4  megahit_ALOHA_July_5m_k51_108347_flag=0_multi=37.3628_len=820_ALOHA_July_5m.filtered.fasta.p1\n5 megahit_ALOHA_July_5m_k51_112715_flag=1_multi=108.5316_len=557_ALOHA_July_5m.filtered.fasta.p1\n6 megahit_ALOHA_July_5m_k51_1130367_flag=1_multi=22.0000_len=906_ALOHA_July_5m.filtered.fasta.p2\n  log2FoldChange       pvalue        REGULATION        TAXA     X rownames\n1       5.463782 2.766358e-02 upregulated in CA Chlorophyte   690      689\n2       3.609570 2.497255e-02 upregulated in CA Chlorophyte  1005     1004\n3       7.575613 7.550389e-03 upregulated in CA Chlorophyte  5811     5810\n4       5.558651 3.243688e-03 upregulated in CA Chlorophyte  9239     9238\n5      25.186544 6.509685e-15 upregulated in CA Chlorophyte 14151    14150\n6       2.703206 4.347091e-03 upregulated in CA Chlorophyte 14507    14506\n    ShortSeqID    Domain     Supergroup      Phylum                Class\n1 Seq_48897575 Eukaryota Archaeplastida Chlorophyta        Chlorophyceae\n2 Seq_13728792 Eukaryota Archaeplastida Chlorophyta         Unclassified\n3 Seq_13623672 Eukaryota Archaeplastida Chlorophyta  Chlorodendrophyceae\n4 Seq_45857102 Eukaryota Archaeplastida Chlorophyta      Pyramimonadales\n5  Seq_5315521 Eukaryota Archaeplastida Chlorophyta      Pyramimonadales\n6 Seq_16589800 Eukaryota Archaeplastida Chlorophyta Nephroselmidophyceae\n              Order              Family        Genus      Species\n1 Chlamydomonadales Chlamydomonadales_X Unclassified Unclassified\n2      Unclassified        Unclassified Unclassified Unclassified\n3   Chlorodendrales    Chlorodendraceae  Tetraselmis Unclassified\n4 Pyramimonadales_X        Unclassified Unclassified Unclassified\n5 Pyramimonadales_X  Pyramimonadales_XX Unclassified Unclassified\n6      Unclassified        Unclassified Unclassified Unclassified\ns\nnnn4                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        -\n5 GO:0000028,GO:0000054,GO:0000056,GO:0002181,GO:0003674,GO:0003735,GO:0005198,GO:0005575,GO:0005622,GO:0005623,GO:0005737,GO:0005829,GO:0005840,GO:0006403,GO:0006405,GO:0006407,GO:0006412,GO:0006518,GO:0006611,GO:0006807,GO:0006810,GO:0006886,GO:0006913,GO:0006996,GO:0008104,GO:0008150,GO:0008152,GO:0009058,GO:0009059,GO:0009987,GO:0010467,GO:0015031,GO:0015833,GO:0015931,GO:0015935,GO:0016043,GO:0019538,GO:0022607,GO:0022613,GO:0022618,GO:0022626,GO:0022627,GO:0031503,GO:0032991,GO:0033036,GO:0033750,GO:0034613,GO:0034622,GO:0034641,GO:0034645,GO:0042254,GO:0042255,GO:0042274,GO:0042886,GO:0043043,GO:0043170,GO:0043226,GO:0043228,GO:0043229,GO:0043232,GO:0043603,GO:0043604,GO:0043933,GO:0044085,GO:0044237,GO:0044238,GO:0044249,GO:0044260,GO:0044267,GO:0044271,GO:0044391,GO:0044422,GO:0044424,GO:0044444,GO:0044445,GO:0044446,GO:0044464,GO:0045184,GO:0046907,GO:0050657,GO:0050658,GO:0051029,GO:0051168,GO:0051169,GO:0051179,GO:0051234,GO:0051236,GO:0051640,GO:0051641,GO:0051649,GO:0051656,GO:0065003,GO:0070727,GO:0070925,GO:0071166,GO:0071426,GO:0071428,GO:0071702,GO:0071704,GO:0071705,GO:0071826,GO:0071840,GO:0097064,GO:1901564,GO:1901566,GO:1901576,GO:1990904\nn                                                        PFAMs\n1 AAA_5,AAA_6,AAA_7,AAA_8,AAA_9,DHC_N1,DHC_N2,Dynein_heavy,MT\n2                                               Ribosomal_60s\n3                                               Ribosomal_L14\n4                                                         NMO\n5                                               Ribosomal_S19\n6                          GGDEF,HATPase_c,HisKA,cNMP_binding\n              KEGG_ko\n1           ko:K10408\n2           ko:K02942\n3           ko:K02894\n4                   -\n5           ko:K02958\n6 ko:K01420,ko:K10914\n\nhead(alltax_compareDE)\n\n# A tibble: 6 × 6\n  REGULATION        GENEID_ko_pfam Dinoflagellate Chlorophyte Diatom Haptophyte\n  &lt;chr&gt;             &lt;chr&gt;                   &lt;int&gt;       &lt;int&gt;  &lt;int&gt;      &lt;int&gt;\n1 upregulated in CA -;ko:K00241                 3          NA     NA         NA\n2 upregulated in CA -;ko:K00542                 2          NA     NA         NA\n3 upregulated in CA -;ko:K01137                 4          NA     NA         NA\n4 upregulated in CA -;ko:K01805                 7          NA     NA         NA\n5 upregulated in CA -;ko:K07374                 2          NA     NA         NA\n6 upregulated in CA -;ko:K08906                NA           5     NA         NA\n\n\n\nWhat transcripts are shared across all taxa vs. unique?\n\ntax_indiv &lt;- alltax_compareDE %&gt;%\n  mutate(CATEGORY = case_when(\n                     (is.na(Chlorophyte) & is.na(Diatom) & is.na(Haptophyte)) ~ \"Dinoflagellate only\",\n                   (is.na(Dinoflagellate) & is.na(Diatom) & is.na(Haptophyte)) ~ \"Chlorophyte only\",\n                   (is.na(Dinoflagellate) & is.na(Chlorophyte) & is.na(Haptophyte)) ~ \"Diatom only\",\n                   (is.na(Dinoflagellate) & is.na(Chlorophyte) & is.na(Diatom)) ~ \"Haptophyte only\",\n                   TRUE ~ NA)) %&gt;% \n  filter(!is.na(CATEGORY))\n\nshared_euphotic &lt;- alltax_compareDE %&gt;% \n  drop_na() %&gt;% \n  add_column(CATEGORY = \"Shared across all taxa\") %&gt;% \n  rbind(tax_indiv) %&gt;% \n  separate(GENEID_ko_pfam, into = c(\"PFAMs\", \"KEGG_ko\"), sep = \";\") %&gt;% \n  mutate(KEGG = str_remove(KEGG_ko, \"ko:\")) %&gt;%\n  left_join(key_geneid) %&gt;% \n  add_column(COUNT = 1)\n\nJoining with `by = join_by(KEGG)`\n\n\nWarning in left_join(., key_geneid): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 1 of `x` matches multiple rows in `y`.\nℹ Row 3188 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n# head(shared_euphotic)\n# colnames(alltax_compareDE)\n\n\nunique(shared_euphotic$KeggOrthology_A)\n\n[1] \"Environmental Information Processing\"\n[2] \"Cellular Processes\"                  \n[3] \"Genetic Information Processing\"      \n[4] NA                                    \n[5] \"Metabolism\"                          \n\nunique(shared_euphotic$Category01)\n\n[1] NA                           \"Phagotrophy\"               \n[3] \"Energy Acquisition\"         \"N and P metabolism\"        \n[5] \"Nutrient processing\"        \"Carbon fixation\"           \n[7] \"Gluconeogenesis-glycolysis\" \"Glyoxylate cycle\"          \n[9] \"Photosynthesis\"            \n\npaths_ORDER &lt;- c(\"Photosynthesis\", \"Energy Acquisition\", \"Carbon fixation\", \"Nutrient processing\", \"Gluconeogenesis-glycolysis\", \"N and P metabolism\", \"Glyoxylate cycle\", \"Phagotrophy\", \n                 \"Environmental Information Processing\", \"Cellular Processes\",\n                 \"Genetic Information Processing\", \"Metabolism\",\n                 \"Other\")\n\npaths_COLOR &lt;-c (\"#f7fcb9\", \"#fdae6b\", \"#fc9272\", \"#7fcdbb\", \"#d9f0a3\", \"#78c679\", \"#bfd3e6\", \"#fde0dd\",\n                 \"#fd8d3c\", \"#225ea8\", \n                 \"#cb181d\", \"#41ab5d\",\n                 \"#969696\")\n\n\nshared_euphotic %&gt;% \n  mutate(Category01 = str_replace_na(Category01, \"Other\")) %&gt;%\n  group_by(CATEGORY, REGULATION, Category01) %&gt;% \n    summarise(Category01_SUM = sum(COUNT)) %&gt;% \n  add_column(CATEGORY_TYPE = \"KEGG_cat01\") %&gt;% \n  select(CATEGORY, REGULATION, CATEGORY_TYPE, TYPE_NAME = Category01, SUM = Category01_SUM) %&gt;%\n  #\n  rbind(\n    #\n    shared_euphotic %&gt;% \n  mutate(KeggOrthology_A = str_replace_na(KeggOrthology_A, \"Other\")) %&gt;%\n  group_by(CATEGORY, REGULATION, KeggOrthology_A) %&gt;% \n    summarise(KeggOrthology_A_SUM = sum(COUNT)) %&gt;% \n  add_column(CATEGORY_TYPE = \"KEGG_ORTHO_A\") %&gt;% \n  select(CATEGORY, REGULATION, CATEGORY_TYPE, TYPE_NAME = KeggOrthology_A, SUM = KeggOrthology_A_SUM)\n  #\n  ) %&gt;% \n  mutate(CATEGORY_TYPE_ORDER = factor(TYPE_NAME, levels = paths_ORDER)) %&gt;% \n  ggplot(aes(x = CATEGORY_TYPE, fill = CATEGORY_TYPE_ORDER, y = SUM)) +\n    geom_bar(stat = \"identity\", position = \"fill\", color = \"black\", stroke = 0.4) + facet_grid(cols = vars(CATEGORY, REGULATION)) +\n  theme_classic() +\n  coord_flip() +\n  theme(axis.text.x = element_text(angle = 0, h = 1, vjust = 1),\n        strip.text = element_text(angle = 0),\n        legend.position = \"bottom\") +\n  scale_fill_manual(values = paths_COLOR)\n\n`summarise()` has grouped output by 'CATEGORY', 'REGULATION'. You can override\nusing the `.groups` argument.\n`summarise()` has grouped output by 'CATEGORY', 'REGULATION'. You can override\nusing the `.groups` argument.\n\n\nWarning in geom_bar(stat = \"identity\", position = \"fill\", color = \"black\", :\nIgnoring unknown parameters: `stroke`\n\n\n\n\n\nTake home messages: Most of the transcripts are upregulated in California. More dynamic environment compared to the NPSG surface. For transcripts that were shared across all taxa, they were on the overall low end. Among KEGG categories, a lot were assocaited with genetic information processing. For those that were curated for this study, many were related to phagotrophy. Emphasizing just how different the strategies are among all of these taxa to succeed in the euphotic zone.\nNEXT STEPS: &gt; Questions to follow up on: 1. For the dinoflagellates - what are some of the top phagotrophy genes only in CA? and the energy acquisition genes? 2. For haptophyte and diatom only, why the gluconeogenesis-glycolysis genes? 3. to round out the above, what about the chlorophytes? 4. For the shared - only upregulated in CA, and primarily phagotrophy - what are these? AND under the “Genetic Information Processing” KEGG category.\nNote, that for these figures above, we are looking at the TOTAL NUMBER of significantly upregulated transcripts depending on taxonomic group and sample. We are not including the log FC."
  },
  {
    "objectID": "metat-analysis.html#targeted-1",
    "href": "metat-analysis.html#targeted-1",
    "title": "Analysis of metatranscriptome data",
    "section": "Targeted",
    "text": "Targeted\nShifting gears to focus on phagotrophy-related transcripts. There are a lot of them, and there is another category that separates different phagotrophy pathways.\n\ngenes that were present in at least 2 samples for the taxonomic group? - Normalize to individual taxa.\n\nFirst, isolate a list of KEGG IDs that are found in at least 2 samples.\n\n# head(counts_curated_annot)\ntmp &lt;- counts_curated_annot %&gt;% \n  filter(Category01 == \"Phagotrophy\" & Domain == \"Eukaryota\") %&gt;% \n  select(starts_with(\"mean.\"), KEGG)\nhead(tmp)\n\n  mean.Catalina mean.July_1000m mean.July_150m mean.July_5m mean.July_DCM\n1      0.000000               0              0    27.954439             0\n2      1.296684               0              0    84.190243             0\n3      0.000000               0              0     9.060444             0\n4      0.000000               0              0     9.060444             0\n5      0.915887               0              0    32.037620             0\n6      0.915887               0              0    32.037620             0\n  mean.March_1000m mean.March_150m mean.March_5m mean.March_DCM mean.PortofLA\n1                0               0             0              0             0\n2                0               0             0              0             0\n3                0               0             0              0             0\n4                0               0             0              0             0\n5                0               0             0              0             0\n6                0               0             0              0             0\n  mean.SPOT_150m mean.SPOT_890m mean.SPOT_surface   KEGG\n1              0              0         0.0000000 K00645\n2              0              0         2.3958786 K05692\n3              0              0         0.1008968 K08057\n4              0              0         0.1008968 K08057\n5              0              0         0.0000000 K01365\n6              0              0         0.0000000 K01365\n\ndim(tmp)\n\n[1] 821183     14\n\ntmp2 &lt;- tmp[apply(tmp != 0, 1, sum) &gt;=2,]\ndim(tmp)[1] - dim(tmp2)[1]\n\n[1] 18953\n\n# (dim(tmp2)[1]) / (dim(tmp)[1])\n\nkegg_keep_hets &lt;- as.character(unique(tmp2$KEGG))\n\nRemoved about 18k transcripts, keeping 98% of the data.\n\nhet_TPM_scale &lt;- counts_curated_annot %&gt;%\n  # Filter by category and domain\n  filter(Category01 == \"Phagotrophy\" & Domain == \"Eukaryota\") %&gt;%\n  # Filter by frequency in samples\n  filter(KEGG %in% kegg_keep_hets) %&gt;% \n  select(starts_with(\"mean.\"), Supergroup:Species, Category02, GeneID, KEGG, Gene_identification, PFAMs) %&gt;%\n  mutate(TAXA = case_when(\n    Phylum == \"Dinoflagellata\" ~ \"Dinoflagellate\",\n    Phylum == \"Ciliophora\" ~ \"Ciliate\",\n    Phylum == \"Haptophyta\" ~ \"Haptophyte\",\n    Phylum == \"Chlorophyta\" ~ \"Chlorophyte\",\n    Class == \"Bacillariophyta\" ~ \"Diatom\",\n    Supergroup == \"Rhizaria\" ~ \"Rhizaria\",\n    TRUE ~ \"Else\")) %&gt;%\n  filter(TAXA != \"Else\") %&gt;% \n  pivot_longer(cols = starts_with(\"mean.\"), names_to = \"SAMPLE_tmp\", values_to = \"TPM\") %&gt;% \n  mutate(LOG_TPM = log(TPM))  %&gt;% \n  mutate(SAMPLE = str_remove(SAMPLE_tmp, \"mean.\")) %&gt;% \n  mutate(SAMPLE_ORDER = factor(SAMPLE, levels = sample_order, labels = sample_label))\n\n# head(het_TPM_scale)\n# unique(het_TPM_scale$SAMPLE)\n\n\nsample_order &lt;- c(\"Catalina\", \"PortofLA\", \"SPOT_surface\", \"SPOT_150m\", \"SPOT_890m\",\n  \"July_5m\", \"March_5m\", \"July_DCM\",\"March_DCM\", \"July_150m\", \"March_150m\", \"July_1000m\", \"March_1000m\", \"Mean\")\nsample_label &lt;- c(\"Catalina\", \"Port of LA\", \"SPOT surface\", \"SPOT 150m\", \"SPOT 890m\",\n  \"ALOHA surface (July)\", \"ALOHA surface (March)\", \"ALOHA DCM (July)\",\"ALOHA DCM (March)\", \"ALOHA 150m (July)\", \"ALOHA 150m (March)\", \"ALOHA 1000m (July)\", \"ALOHA 1000m (March)\", \"Mean\")\nyl_red &lt;- c(\"#ffffcc\", \"#fed976\", \"#feb24c\", \"#fc4e2a\", \"#e31a1c\", \"#b10026\")\nreds &lt;- c(\"#f7f7f7\",\"#fee5d9\", \"#fcae91\", \"#fb6a4a\", \"#a50f15\")\nn_p_TPM_df$SAMPLE_ORDER &lt;- factor(n_p_TPM_df$SAMPLE, levels = rev(sample_order), labels = rev(sample_label))\nn_p_TPM_df$GeneID_ORDER &lt;- factor(n_p_TPM_df$GeneID, levels = geneid_order_nuts)\n\nphyto &lt;- c(\"Diatom\", \"Chlorophyte\", \"Haptophyte\", \"Dinoflagellate\")\n\nHere, we’ve narrowed things down to key phagotrophy-related genes.\n\n# hist(het_TPM_scale$LOG_TPM)\n\n\n# library(ggdist)\n\n\nhead(het_TPM_scale)\n\n# A tibble: 6 × 18\n  Supergroup Phylum     Class Order Family Genus Species Category02 GeneID KEGG \n  &lt;chr&gt;      &lt;chr&gt;      &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;   &lt;chr&gt;      &lt;chr&gt;  &lt;chr&gt;\n1 Alveolata  Dinoflage… Dino… Sues… Suess… Uncl… Unclas… Fatty aci… fabD   K006…\n2 Alveolata  Dinoflage… Dino… Sues… Suess… Uncl… Unclas… Fatty aci… fabD   K006…\n3 Alveolata  Dinoflage… Dino… Sues… Suess… Uncl… Unclas… Fatty aci… fabD   K006…\n4 Alveolata  Dinoflage… Dino… Sues… Suess… Uncl… Unclas… Fatty aci… fabD   K006…\n5 Alveolata  Dinoflage… Dino… Sues… Suess… Uncl… Unclas… Fatty aci… fabD   K006…\n6 Alveolata  Dinoflage… Dino… Sues… Suess… Uncl… Unclas… Fatty aci… fabD   K006…\n# ℹ 8 more variables: Gene_identification &lt;chr&gt;, PFAMs &lt;chr&gt;, TAXA &lt;chr&gt;,\n#   SAMPLE_tmp &lt;chr&gt;, TPM &lt;dbl&gt;, LOG_TPM &lt;dbl&gt;, SAMPLE &lt;chr&gt;,\n#   SAMPLE_ORDER &lt;fct&gt;\n\n\nTry a birds eye view look at how different the phagotrophy signature may be between taxa.\n\nhet_TPM_scale %&gt;% \n  filter(TPM &gt; 0) %&gt;% \n  ggplot(aes(x = GeneID, y = SAMPLE_ORDER)) +\n    geom_tile(aes(fill = LOG_TPM)) +\n    coord_flip() +\n    facet_grid(cols = vars(TAXA), rows = vars(Category02), scales = \"free\", space = \"free\") +\n  theme_classic() +\n  theme(strip.placement = \"outside\",\n        axis.text.x = element_text(angle = 90))\n\n\n\n\n\nhet_TPM_scale %&gt;% \n  filter(TPM &gt; 0) %&gt;% \n  ggplot(aes(x = GeneID, y = SAMPLE_ORDER)) +\n    geom_tile(aes(fill = LOG_TPM), color = \"white\") +\n    # scale_fill_binned(type = \"gradient\") +\n  scale_fill_steps(\n    low = \"#ece2f0\",\n    high = \"#016c59\",\n    space = \"Lab\",\n    na.value = \"grey50\",\n    guide = \"coloursteps\",\n    aesthetics = \"fill\"\n  ) +\n    coord_flip() +\n    facet_grid(cols = vars(TAXA), rows = vars(Category02), scales = \"free\", space = \"free\") +\n  theme_classic() +\n  theme(strip.placement = \"outside\",\n        strip.text.x = element_text(angle = 0, vjust = 0.5, hjust = 0),\n        strip.text.y = element_text(angle = 0, vjust = 0.5, hjust = 0),\n        axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))"
  },
  {
    "objectID": "metat-analysis.html#untargeted-1",
    "href": "metat-analysis.html#untargeted-1",
    "title": "Analysis of metatranscriptome data",
    "section": "Untargeted",
    "text": "Untargeted\nTo approach question 2 with an untargeted approach, used run_bydepth_deseq_taxa.R script to generate R objects of each comparison.\nTo compare euphotic versus subeuphotic, decided to with all samples, CA only samples and then only NPSG samples. See code: ca-light.R, all-light.R, and npsg-light.R.\nRun this script, which selects the differentially expressed genes and includes the functional annotation information: euphotic_v_subeuphotic.R.\n\n# Import KEGG information\ntaxfxn &lt;- read.csv(\"TaxonomicAndFunctionalAnnotations.csv\")\nhead(taxfxn)\n\n# Sequence IDs are all unique, because they correspond to taxa. Therefore, we need to include gene-level IDs so we can compare what is DE across the euphotic vs. subeuphotic regions.\nCA_only &lt;- read.csv(\"bytaxa_CA-LIGHT_DE.csv\")\nNPSG_only &lt;- read.csv(\"bytaxa_NPSG-LIGHT_DE.csv\")\nall_only &lt;- read.csv(\"bytaxa_ALL-LIGHT_DE.csv\")\n\n#\nhead(CA_only)\n# For this there are three tables. \nCA_tax_bydepth &lt;- CA_only %&gt;% \n  select(SequenceID, log2FoldChange, pvalue, REGULATION, TAXA) %&gt;%\n  left_join(taxfxn)\n\n# head(CA_tax_bydepth)\n\nNPSG_tax_bydepth &lt;- NPSG_only %&gt;% \n  select(SequenceID, log2FoldChange, pvalue, REGULATION, TAXA) %&gt;%\n  left_join(taxfxn)\n\nALL_tax_bydepth &lt;- all_only %&gt;% \n  select(SequenceID, log2FoldChange, pvalue, REGULATION, TAXA) %&gt;%\n  left_join(taxfxn)\n\n##\n\nalltax_compareDE &lt;- ALL_tax_bydepth %&gt;% \n  unite(GENEID_ko_pfam, PFAMs, KEGG_ko, sep = \";\") %&gt;% \n  select(REGULATION, TAXA, log2FoldChange, GENEID_ko_pfam) %&gt;% \n  group_by(REGULATION, GENEID_ko_pfam, TAXA) %&gt;%\n  summarise(n = dplyr::n(), .groups = \"drop\") %&gt;%\n  filter(n &gt; 1L) %&gt;% \n  pivot_wider(names_from = TAXA, values_from = n)\n\nNPSGtax_compareDE &lt;- NPSG_tax_bydepth %&gt;% \n  unite(GENEID_ko_pfam, PFAMs, KEGG_ko, sep = \";\") %&gt;% \n  select(REGULATION, TAXA, log2FoldChange, GENEID_ko_pfam) %&gt;% \n  group_by(REGULATION, GENEID_ko_pfam, TAXA) %&gt;%\n  summarise(n = dplyr::n(), .groups = \"drop\") %&gt;%\n  filter(n &gt; 1L) %&gt;% \n  pivot_wider(names_from = TAXA, values_from = n)\n\nCAtax_compareDE &lt;- CA_tax_bydepth %&gt;% \n  unite(GENEID_ko_pfam, PFAMs, KEGG_ko, sep = \";\") %&gt;% \n  select(REGULATION, TAXA, log2FoldChange, GENEID_ko_pfam) %&gt;% \n  group_by(REGULATION, GENEID_ko_pfam, TAXA) %&gt;%\n  summarise(n = dplyr::n(), .groups = \"drop\") %&gt;%\n  filter(n &gt; 1L) %&gt;% \n  pivot_wider(names_from = TAXA, values_from = n)\n\nsave(alltax_compareDE, CAtax_compareDE, NPSGtax_compareDE, ALL_tax_bydepth, NPSG_tax_bydepth, CA_tax_bydepth, file = \"taxa-untarget_bydepth-q2.RData\")\n\nLocally, now can work with results.\n\nLocal -untargeted\n\nload(\"input-data/taxa-untarget_bydepth-q2.RData\", verbose = TRUE)\n\nLoading objects:\n  alltax_compareDE\n  CAtax_compareDE\n  NPSGtax_compareDE\n  ALL_tax_bydepth\n  NPSG_tax_bydepth\n  CA_tax_bydepth\n\n\n\n\nShared vs unique\n\nlibrary(ggupset)\n\nALL_tax_bydepth %&gt;% \n  unite(GENEID_ko_pfam, PFAMs, KEGG_ko, sep = \";\") %&gt;% \n  select(REGULATION, TAXA, log2FoldChange, GENEID_ko_pfam) %&gt;% \n  group_by(REGULATION, GENEID_ko_pfam, TAXA) %&gt;%\n  summarise(n = dplyr::n(), .groups = \"drop\") %&gt;%\n  filter(n &gt; 1L) %&gt;% \n  group_by(GENEID_ko_pfam, REGULATION) %&gt;% \n    summarise(TAXA = list(TAXA)) %&gt;% \n  ggplot(aes(x = TAXA)) +\n    geom_bar(aes(fill = REGULATION)) +\n    scale_fill_manual(values = c(\"#74add1\", \"#fdae61\")) +\n    scale_x_upset(order_by = \"freq\") +\n  theme_classic() +\n    theme(axis.text.x = element_text(vjust = 1, hjust = 1)) +\n    labs(x = \"\", y = \"TPM Relative Abundance\",\n         title = \"All euphotic vs subeuphotic comparison\")\n\n\n\nNPSG_tax_bydepth %&gt;% \n  unite(GENEID_ko_pfam, PFAMs, KEGG_ko, sep = \";\") %&gt;% \n  select(REGULATION, TAXA, log2FoldChange, GENEID_ko_pfam) %&gt;% \n  group_by(REGULATION, GENEID_ko_pfam, TAXA) %&gt;%\n  summarise(n = dplyr::n(), .groups = \"drop\") %&gt;%\n  filter(n &gt; 1L) %&gt;% \n  group_by(GENEID_ko_pfam, REGULATION) %&gt;% \n    summarise(TAXA = list(TAXA)) %&gt;% \n  ggplot(aes(x = TAXA)) +\n    geom_bar(aes(fill = REGULATION)) +\n    scale_fill_manual(values = c(\"#74add1\", \"#fdae61\")) +\n    scale_x_upset(order_by = \"freq\") +\n  theme_classic() +\n    theme(axis.text.x = element_text(vjust = 1, hjust = 1)) +\n    labs(x = \"\", y = \"TPM Relative Abundance\",\n         title = \"NPSG comparison\")\n\n\n\nCA_tax_bydepth %&gt;% \n  unite(GENEID_ko_pfam, PFAMs, KEGG_ko, sep = \";\") %&gt;% \n  select(REGULATION, TAXA, log2FoldChange, GENEID_ko_pfam) %&gt;% \n  group_by(REGULATION, GENEID_ko_pfam, TAXA) %&gt;%\n  summarise(n = dplyr::n(), .groups = \"drop\") %&gt;%\n  filter(n &gt; 1L) %&gt;% \n  group_by(GENEID_ko_pfam, REGULATION) %&gt;% \n    summarise(TAXA = list(TAXA)) %&gt;% \n  ggplot(aes(x = TAXA)) +\n    geom_bar(aes(fill = REGULATION)) +\n    scale_fill_manual(values = c(\"#74add1\", \"#fdae61\")) +\n    scale_x_upset(order_by = \"freq\") +\n  theme_classic() +\n    theme(axis.text.x = element_text(vjust = 1, hjust = 1)) +\n    labs(x = \"\", y = \"TPM Relative Abundance\",\n         title = \"Coastal California comparison\")\n\n\n\n\n\nWhat transcripts are shared across all taxa vs. unique?\n\ntax_indiv &lt;- alltax_compareDE %&gt;%\n  mutate(CATEGORY = case_when(\n                     (is.na(Ciliate) & is.na(Rhizaria) & is.na(Haptophyte)) ~ \"Dinoflagellate only\",\n                   (is.na(Dinoflagellate) & is.na(Rhizaria) & is.na(Haptophyte)) ~ \"Ciliate only\",\n                   (is.na(Dinoflagellate) & is.na(Ciliate) & is.na(Rhizaria)) ~ \"Haptophyte only\",\n                   (is.na(Dinoflagellate) & is.na(Ciliate) & is.na(Haptophyte)) ~ \"Rhizaria only\",\n                   TRUE ~ NA)) %&gt;% \n  filter(!is.na(CATEGORY))\n\nshared_euphotic &lt;- alltax_compareDE %&gt;% \n  drop_na() %&gt;% \n  add_column(CATEGORY = \"Shared across all taxa\") %&gt;% \n  rbind(tax_indiv) %&gt;% \n  separate(GENEID_ko_pfam, into = c(\"PFAMs\", \"KEGG_ko\"), sep = \";\") %&gt;% \n  mutate(KEGG = str_remove(KEGG_ko, \"ko:\")) %&gt;%\n  left_join(key_geneid) %&gt;% \n  add_column(COUNT = 1)\n\nJoining with `by = join_by(KEGG)`\n\n\nWarning in left_join(., key_geneid): Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 1 of `x` matches multiple rows in `y`.\nℹ Row 16589 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\nhead(shared_euphotic)\n\n# A tibble: 6 × 23\n  REGULATION   PFAMs KEGG_ko Dinoflagellate Ciliate Haptophyte Rhizaria CATEGORY\n  &lt;chr&gt;        &lt;chr&gt; &lt;chr&gt;            &lt;int&gt;   &lt;int&gt;      &lt;int&gt;    &lt;int&gt; &lt;chr&gt;   \n1 upregulated… Actin ko:K05…            100      23        220       12 Shared …\n2 upregulated… Actin ko:K05…            100      23        220       12 Shared …\n3 upregulated… Actin ko:K05…            100      23        220       12 Shared …\n4 upregulated… Actin ko:K05…            100      23        220       12 Shared …\n5 upregulated… Actin ko:K05…            100      23        220       12 Shared …\n6 upregulated… Actin ko:K05…            100      23        220       12 Shared …\n# ℹ 15 more variables: KEGG &lt;chr&gt;, KeggOrthology_A &lt;chr&gt;,\n#   KeggOrthology_B &lt;chr&gt;, KeggOrthology_C &lt;chr&gt;,\n#   KeggOrthology_Gene_description &lt;chr&gt;, KeggOrthology_EC &lt;chr&gt;,\n#   Category01 &lt;chr&gt;, Category02 &lt;chr&gt;, FullName &lt;chr&gt;, GeneID &lt;chr&gt;,\n#   Gene_identification &lt;chr&gt;, PFAM &lt;chr&gt;, Descriptions &lt;chr&gt;, REF &lt;chr&gt;,\n#   COUNT &lt;dbl&gt;\n\n# colnames(alltax_compareDE)\n\n\nunique(shared_euphotic$KeggOrthology_A)\n\n[1] \"Environmental Information Processing\"\n[2] \"Cellular Processes\"                  \n[3] NA                                    \n[4] \"Genetic Information Processing\"      \n[5] \"Metabolism\"                          \n\nunique(shared_euphotic$Category01)\n\n [1] \"Phagotrophy\"                NA                          \n [3] \"Energy Acquisition\"         \"N and P metabolism\"        \n [5] \"Glyoxylate cycle\"           \"Nutrient processing\"       \n [7] \"\"                           \"Carbon fixation\"           \n [9] \"Gluconeogenesis-glycolysis\" \"Photosynthesis\"            \n\npaths_ORDER &lt;- c(\"Photosynthesis\", \"Energy Acquisition\", \"Carbon fixation\", \"Nutrient processing\", \"Gluconeogenesis-glycolysis\", \"N and P metabolism\", \"Glyoxylate cycle\", \"Phagotrophy\", \n                 \"Environmental Information Processing\", \"Cellular Processes\",\n                 \"Genetic Information Processing\", \"Metabolism\",\n                 \"Other\")\n\npaths_COLOR &lt;-c (\"#f7fcb9\", \"#fdae6b\", \"#fc9272\", \"#7fcdbb\", \"#d9f0a3\", \"#78c679\", \"#bfd3e6\", \"#fde0dd\",\n                 \"#fd8d3c\", \"#225ea8\", \n                 \"#cb181d\", \"#41ab5d\",\n                 \"#969696\")\n\n\nshared_euphotic %&gt;% \n  mutate(Category01 = str_replace_na(Category01, \"Other\")) %&gt;%\n  group_by(CATEGORY, REGULATION, Category01) %&gt;% \n    summarise(Category01_SUM = sum(COUNT)) %&gt;% \n  add_column(CATEGORY_TYPE = \"KEGG_cat01\") %&gt;% \n  select(CATEGORY, REGULATION, CATEGORY_TYPE, TYPE_NAME = Category01, SUM = Category01_SUM) %&gt;%\n  #\n  rbind(\n    #\n    shared_euphotic %&gt;% \n  mutate(KeggOrthology_A = str_replace_na(KeggOrthology_A, \"Other\")) %&gt;%\n  group_by(CATEGORY, REGULATION, KeggOrthology_A) %&gt;% \n    summarise(KeggOrthology_A_SUM = sum(COUNT)) %&gt;% \n  add_column(CATEGORY_TYPE = \"KEGG_ORTHO_A\") %&gt;% \n  select(CATEGORY, REGULATION, CATEGORY_TYPE, TYPE_NAME = KeggOrthology_A, SUM = KeggOrthology_A_SUM)\n  #\n  ) %&gt;% \n  mutate(CATEGORY_TYPE_ORDER = factor(TYPE_NAME, levels = paths_ORDER)) %&gt;% \n  ggplot(aes(x = CATEGORY_TYPE, fill = CATEGORY_TYPE_ORDER, y = SUM)) +\n    geom_bar(stat = \"identity\", position = \"fill\", color = \"black\", stroke = 0.4) + facet_grid(cols = vars(CATEGORY, REGULATION)) +\n  theme_classic() +\n  coord_flip() +\n  theme(axis.text.x = element_text(angle = 0, h = 1, vjust = 1),\n        strip.text = element_text(angle = 0),\n        legend.position = \"bottom\") +\n  scale_fill_manual(values = paths_COLOR)\n\n`summarise()` has grouped output by 'CATEGORY', 'REGULATION'. You can override\nusing the `.groups` argument.\n`summarise()` has grouped output by 'CATEGORY', 'REGULATION'. You can override\nusing the `.groups` argument.\n\n\nWarning in geom_bar(stat = \"identity\", position = \"fill\", color = \"black\", :\nIgnoring unknown parameters: `stroke`\n\n\n\n\n\n\nhead(shared_euphotic)\n\n# A tibble: 6 × 23\n  REGULATION   PFAMs KEGG_ko Dinoflagellate Ciliate Haptophyte Rhizaria CATEGORY\n  &lt;chr&gt;        &lt;chr&gt; &lt;chr&gt;            &lt;int&gt;   &lt;int&gt;      &lt;int&gt;    &lt;int&gt; &lt;chr&gt;   \n1 upregulated… Actin ko:K05…            100      23        220       12 Shared …\n2 upregulated… Actin ko:K05…            100      23        220       12 Shared …\n3 upregulated… Actin ko:K05…            100      23        220       12 Shared …\n4 upregulated… Actin ko:K05…            100      23        220       12 Shared …\n5 upregulated… Actin ko:K05…            100      23        220       12 Shared …\n6 upregulated… Actin ko:K05…            100      23        220       12 Shared …\n# ℹ 15 more variables: KEGG &lt;chr&gt;, KeggOrthology_A &lt;chr&gt;,\n#   KeggOrthology_B &lt;chr&gt;, KeggOrthology_C &lt;chr&gt;,\n#   KeggOrthology_Gene_description &lt;chr&gt;, KeggOrthology_EC &lt;chr&gt;,\n#   Category01 &lt;chr&gt;, Category02 &lt;chr&gt;, FullName &lt;chr&gt;, GeneID &lt;chr&gt;,\n#   Gene_identification &lt;chr&gt;, PFAM &lt;chr&gt;, Descriptions &lt;chr&gt;, REF &lt;chr&gt;,\n#   COUNT &lt;dbl&gt;\n\ncolnames(shared_euphotic)\n\n [1] \"REGULATION\"                     \"PFAMs\"                         \n [3] \"KEGG_ko\"                        \"Dinoflagellate\"                \n [5] \"Ciliate\"                        \"Haptophyte\"                    \n [7] \"Rhizaria\"                       \"CATEGORY\"                      \n [9] \"KEGG\"                           \"KeggOrthology_A\"               \n[11] \"KeggOrthology_B\"                \"KeggOrthology_C\"               \n[13] \"KeggOrthology_Gene_description\" \"KeggOrthology_EC\"              \n[15] \"Category01\"                     \"Category02\"                    \n[17] \"FullName\"                       \"GeneID\"                        \n[19] \"Gene_identification\"            \"PFAM\"                          \n[21] \"Descriptions\"                   \"REF\"                           \n[23] \"COUNT\"                         \n\nshared_euphotic %&gt;% \n  filter(Category01 == \"Phagotrophy\") %&gt;% \n  ggplot(aes(x = Gene_identification, y = CATEGORY)) +\n    geom_tile(aes(fill = COUNT)) +\n  theme_classic() +\n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))\n\n\n\nwrite.csv((shared_euphotic %&gt;% \n  filter(Category01 == \"Phagotrophy\")), \"output-data/phagotrophy-shared_v_unique-gene.csv\")"
  },
  {
    "objectID": "process-eukrhythmic-output.html#create-subset-parameters",
    "href": "process-eukrhythmic-output.html#create-subset-parameters",
    "title": "eukrhythmic compilation",
    "section": "Create subset parameters",
    "text": "Create subset parameters\n\nSubset samples as parameters\nUse the metadata data frame to create sample lists for the comparisons we want to do.\n\nmetadata &lt;- read.csv(\"input-data/sample-list-revised.txt\")\n\nFor the whole community work, we want to compare CA vs NPSG and euphotic vs. subeuphotic.\n\nall_samples &lt;- metadata %&gt;% \n  select(sample = SAMPLE)\n\nnpsg_only &lt;- metadata %&gt;% \n  filter(PACIFIC_REGION == \"NPSG\") %&gt;% \n  select(sample = SAMPLE)\n# Compare euphotic and subeuphotic\n# Use this to compare across months too\n\nca_only &lt;- metadata %&gt;% \n  filter(PACIFIC_REGION != \"NPSG\") %&gt;% \n  select(sample = SAMPLE)\n# Compare euphotic and subeuphotic\n\neuphotic &lt;- metadata %&gt;% \n  filter(LIGHT == \"Euphotic\")%&gt;% \n  select(sample = SAMPLE)\n# Compare NPSG to CA euphotic zone\n\nsubeuphotic &lt;- metadata %&gt;% \n  filter(LIGHT != \"Euphotic\")%&gt;% \n  select(sample = SAMPLE)\n# Compare NPSG to CA subeuphotic zone\n\n\n\nSubset genes & taxa as parameters\nNeed to make a list of the SequenceID from the taxonomy and functional annotations.\n\ntaxfxn &lt;- read.csv(\"TaxonomicAndFunctionalAnnotations.csv\")\n\n\nGenes\nDetermine character lists from gene list as subsets for our later queries.\n\n# Get list of annotations where a GO, PFAM, and KEGG ID were assigned.\ngenes_fxn_all &lt;- as.character(\n  filter(taxfxn, GOs != \"-\" & PFAMs != \"-\" & KEGG_ko != \"-\") %&gt;% \n    select(SequenceID) %&gt;% \n    .[[\"SequenceID\"]]) #this line outputs the selected vector from the pipe\n\n# Removing unclassified and unannotated sequences\ngenes_tax_fxn_all &lt;- as.character(\n  filter(taxfxn, GOs != \"-\" & PFAMs != \"-\" & KEGG_ko != \"-\"\n         & Domain == \"Eukaryota\" & Supergroup != \"Unclassified\") %&gt;% \n    select(SequenceID) %&gt;% \n    .[[\"SequenceID\"]])\n\nFrom KEGG database reformatting make key_geneid. Isolate genes that are curated.\n\nkegg &lt;- read.csv(\"../KEGG_DB/combined_kegg.csv\")\nhead(kegg$KO_number)\ncurated_kegg &lt;- read.csv(\"../KEGG_DB/reformat-kegg-pfam-skh.csv\")\n\nkey_geneid &lt;- curated_kegg %&gt;%\n  select(-X) %&gt;%\n  right_join(kegg %&gt;% select(KEGG = KO_number, everything(), -X)) %&gt;%\n  distinct() %&gt;%\n  select(starts_with(\"KeggOrthology_\"), Category01, Category02, FullName, GeneID, Gene_identification, KEGG, PFAM, Descriptions, REF = REFs)\n\n# write.csv(key_geneid, file = \"keygene_id.csv\")\n\n\nkegg_keep &lt;- as.character(key_geneid %&gt;% \n  filter(Category01 != \"\" & !(is.na(Category01))) %&gt;% \n  select(KEGG) %&gt;% \n  .[[\"KEGG\"]])\n# length(kegg_keep)\n\ngenes_kegg_curated &lt;- as.character(taxfxn %&gt;%\n    mutate(KEGG_mod = str_remove_all(KEGG_ko, \"ko:\")) %&gt;% \n    filter(KEGG_mod %in% kegg_keep) %&gt;% \n    select(SequenceID) %&gt;% \n    .[[\"SequenceID\"]])\n\n\n\nTaxa\nIsolate transcript IDs (SequenceID) of individual taxa. For each taxa subset, we are also only selecting transcript IDs with PFAM or KEGG IDs.\nFor queries, we want to isolate:\n\neuks_only &lt;- as.character(\n  filter(taxfxn, Domain == \"Eukaryota\" & (PFAMs != \"-\" | KEGG_ko != \"-\")) %&gt;% \n    select(SequenceID) %&gt;% \n    .[[\"SequenceID\"]])\n\ndiatom &lt;- as.character(\n  filter(taxfxn, Class == \"Bacillariophyta\" & (PFAMs != \"-\" | KEGG_ko != \"-\")) %&gt;% \n    select(SequenceID) %&gt;% \n    .[[\"SequenceID\"]]) \n\n#Dinoflagellata pPhylum\ndinos &lt;- as.character(\n  filter(taxfxn, Phylum == \"Dinoflagellata\" & (PFAMs != \"-\" | KEGG_ko != \"-\")) %&gt;% \n    select(SequenceID) %&gt;% \n    .[[\"SequenceID\"]]) \n\n#Haptophyta in phylum\nhapto &lt;- as.character(\n  filter(taxfxn, Phylum == \"Haptophyta\" & (PFAMs != \"-\" | KEGG_ko != \"-\")) %&gt;% \n    select(SequenceID) %&gt;% \n    .[[\"SequenceID\"]])\n\n# Chlorophyta\nchloro &lt;- as.character(\n  filter(taxfxn, Phylum == \"Chlorophyta\" & (PFAMs != \"-\" | KEGG_ko != \"-\")) %&gt;% \n    select(SequenceID) %&gt;% \n    .[[\"SequenceID\"]])\n\n#Ciliophora\nciliate &lt;- as.character(\n  filter(taxfxn, Phylum == \"Ciliophora\" & (PFAMs != \"-\" | KEGG_ko != \"-\")) %&gt;% \n    select(SequenceID) %&gt;% \n    .[[\"SequenceID\"]])\n\n# Rhizaria at supergroup\nrhizaria &lt;- as.character(\n  filter(taxfxn, Supergroup == \"Rhizaria\" & (PFAMs != \"-\" | KEGG_ko != \"-\")) %&gt;% \n    select(SequenceID) %&gt;% \n    .[[\"SequenceID\"]])\n\nSave objects for subseting.\n\nsave(\n  # These are data frames\n  all_samples, npsg_only, ca_only, euphotic, subeuphotic,\n  # these are lists (character lists)\n     genes_fxn_all, genes_tax_fxn_all, key_geneid, genes_kegg_curated, \n     euks_only, diatom, dinos, hapto, chloro, ciliate, rhizaria,\n     file = \"sample-gene-lists-forTXI.RData\")\n\n\n\n\nTxi function\nCode for this function is from: https://rdrr.io/github/hcnh174/hlsgr/man/subsetTxi.html Code: https://rdrr.io/github/hcnh174/hlsgr/src/R/rnaseq.R\n\n# Subset txi directly\nsubsetTxi &lt;- function(txi, samples, include_genes=rownames(txi$counts))\n  {\n  genes &lt;- rownames(txi$counts)[rownames(txi$counts) %in% include_genes]\n  txi$abundance &lt;- txi$abundance[genes, samples$sample]\n  txi$counts &lt;- txi$counts[genes, samples$sample]\n  txi$length &lt;- txi$length[genes, samples$sample]\n  return(txi)\n  }\n\n# Example usage \n# tmp &lt;- sample(taxfxn$SequenceID,10,replace = FALSE)\n# pola &lt;- data.frame(sample = c(\"PortofLA_1\", \"PortofLA_2\"))\n# txi_pola &lt;- subsetTxi(txi, pola, tmp)"
  },
  {
    "objectID": "process-eukrhythmic-output.html#all-samples",
    "href": "process-eukrhythmic-output.html#all-samples",
    "title": "eukrhythmic compilation",
    "section": "All samples",
    "text": "All samples\nSee script scripts/run_txi_wholecomm.R.\n\n# Subset eukaryotes only, and keep all samples.\ntxi_euk_annot &lt;- subsetTxi(txi, all_samples, euks_only)\n\nds_tpm_light &lt;- DESeqDataSetFromTximport(txi_euk_annot,\n                                              colData = sample_merged,\n                                              design = ~0 + LIGHT)\n\nds_tpm_pac &lt;- DESeqDataSetFromTximport(txi_euk_annot,\n                                              colData = sample_merged,\n                                              design = ~0 + PACIFIC_REGION)\n\nds_tpm_lightpac &lt;- DESeqDataSetFromTximport(txi_euk_annot,\n                                              colData = sample_merged,\n                                              design = ~0 + PACIFIC_REGION + LIGHT)\n\nsave(ds_tpm_light, ds_tpm_pac, ds_tpm_lightpac, file = \"light-pacregion-deseq.RData\")"
  },
  {
    "objectID": "process-eukrhythmic-output.html#by-region",
    "href": "process-eukrhythmic-output.html#by-region",
    "title": "eukrhythmic compilation",
    "section": "By region",
    "text": "By region\nSee script scripts/run_txi_region.r.\n\n# Subset txi\ntxi_npsg &lt;- subsetTxi(txi, npsg_only, euks_only)\n\n# Reset sample_merged\n## Subset\ntmp_sample_merged &lt;- sample_merged %&gt;% \n  filter(Sample_rep %in% as.character(npsg_only$sample))\n## Set names\nrownames(tmp_sample_merged) &lt;- tmp_sample_merged$Sample_rep\nrownames(tmp_sample_merged) &lt;- colnames(txi_npsg$counts)\n\n# Compare Euphotic vs. sub-euphotic samples in the NPSG\nds_tpm_npsg_light &lt;- DESeqDataSetFromTximport(txi_npsg,\n                                              colData = tmp_sample_merged,\n                                              design = ~0 + LIGHT)\n\n# Compare July vs. March in the NPSG\nds_tpm_npsg_month &lt;- DESeqDataSetFromTximport(txi_npsg,\n                                              colData = tmp_sample_merged,\n                                              design = ~0 + MONTH)\n\nsave(ds_tpm_npsg_light, ds_tpm_npsg_month, file = \"/vortexfs1/scratch/sarahhu/txi-objs-metaT/npsg-deseq.RData\")\n\n\ntxi_ca &lt;- subsetTxi(txi, ca_only, euks_only)\n\ntmp_sample_merged &lt;- sample_merged %&gt;% \n  filter(Sample_rep %in% as.character(ca_only$sample))\nrownames(tmp_sample_merged) &lt;- tmp_sample_merged$Sample_rep\nrownames(tmp_sample_merged) &lt;- colnames(txi_ca$counts)\n\n# Compare euphotic vs. subeuphotic in coastal California\n## Includes Port of LA and Catalina\nds_tpm_ca_light &lt;- DESeqDataSetFromTximport(txi_ca,\n                                              colData = tmp_sample_merged,\n                                              design = ~0 + LIGHT)\n\nsave(ds_tpm_ca_light, file = \"/vortexfs1/scratch/sarahhu/txi-objs-metaT/ca-deseq.RData\")\n\n##\nrm(txi_npsg);rm(txi_ca) #Save room"
  },
  {
    "objectID": "process-eukrhythmic-output.html#by-light-availability",
    "href": "process-eukrhythmic-output.html#by-light-availability",
    "title": "eukrhythmic compilation",
    "section": "By light availability",
    "text": "By light availability\nSee script scripts/run_txi_light.r.\n\n# Subset txi\ntxi_euph &lt;- subsetTxi(txi, euphotic, euks_only)\n\ntmp_sample_merged &lt;- sample_merged %&gt;% \n  filter(Sample_rep %in% as.character(euphotic$sample))\nrownames(tmp_sample_merged) &lt;- tmp_sample_merged$Sample_rep\nrownames(tmp_sample_merged) &lt;- colnames(txi_euph$counts)\n\n# Compare CA versus NPSG within euphotic samples\nds_tpm_euphotic &lt;- DESeqDataSetFromTximport(txi_euph,\n                                              colData = tmp_sample_merged,\n                                              design = ~0 + PACIFIC_REGION)\n\n\n\ntxi_subeuph &lt;- subsetTxi(txi, subeuphotic, euks_only)\n\ntmp_sample_merged &lt;- sample_merged %&gt;% \n  filter(Sample_rep %in% as.character(subeuphotic$sample))\nrownames(tmp_sample_merged) &lt;- tmp_sample_merged$Sample_rep\nrownames(tmp_sample_merged) &lt;- colnames(txi_subeuph$counts)\n\n# Compare CA versus NPSG at subeuphotic depths\nds_tpm_subeuphotic &lt;- DESeqDataSetFromTximport(txi_subeuph,\n                                              colData = tmp_sample_merged,\n                                              design = ~0 + PACIFIC_REGION)\n\nsave(ds_tpm_subeuphotic, ds_tpm_euphotic, file = \"/vortexfs1/scratch/sarahhu/txi-objs-metaT/euphotic-subeuphotic-deseq.RData\")\n\n# save(txi_euph, txi_subeuph, file = \"/vortexfs1/scratch/sarahhu/txi-objs-metaT/light_txi.RData\")"
  },
  {
    "objectID": "process-eukrhythmic-output.html#question-1",
    "href": "process-eukrhythmic-output.html#question-1",
    "title": "eukrhythmic compilation",
    "section": "Question 1",
    "text": "Question 1\nFor the first of our two core questions, we want to know what genes are significantly differentially expressed among the euphotic zone samples for the dominant protistan phytoplankton. We are specifically focusing on diatoms, chlorophytes, archaeplastidia (chlorophya), dinoflagellates, and haptophytes for this.\n\nHow does nutrient utilization among euphotic zone phytoplankton vary between coastal California and the NPSG?\n\n/scripts/run_euphotic_deseq_taxa.R\n\n# Function to subset txi by individual taxa and perform DESeq\n\ndeseq_region_bytax &lt;- function(sample_set, gene_set){\n  # First incorporate the txi subset fxn\n  subsetTxi &lt;- function(txi, samples, include_genes=rownames(txi$counts))\n  {\n    genes &lt;- rownames(txi$counts)[rownames(txi$counts) %in% include_genes]\n    txi$abundance &lt;- txi$abundance[genes, samples$sample]\n    txi$counts &lt;- txi$counts[genes, samples$sample]\n    txi$length &lt;- txi$length[genes, samples$sample]\n    return(txi)\n  }\n  # Run subset and sample merge re-set\n  txi_output &lt;- subsetTxi(txi, sample_set, gene_set)\n  # This script will keep replacing tmp_sample_merged\n  tmp_sample_merged &lt;- sample_merged %&gt;% \n    filter(Sample_rep %in% as.character(sample_set$sample))\n  rownames(tmp_sample_merged) &lt;- tmp_sample_merged$Sample_rep\n  rownames(tmp_sample_merged) &lt;- colnames(txi_output$counts)\n  #\n  # Import as DESeq object - use PACIFIC_REGION in the design\n  # DESeq\n  ds_tpm_output &lt;- DESeqDataSetFromTximport(txi_output,\n                                            colData = tmp_sample_merged,\n                                            design = ~0 + PACIFIC_REGION)\n  # return(ds_tpm_output)\n  # Further process DESeq\n  groupsize &lt;- 2 # Transcript to consider, must be in at least 3 samples\n  keep &lt;- rowSums(counts(ds_tpm_output) &gt;= 10) &gt;= groupsize # And have &gt;= to 10 counts\n  ds_tpm_output_filtered &lt;- ds_tpm_output[keep,]\n  ###\n  # Filtering stats:\n  cat(\"\\nStarted with \", dim(ds_tpm_output)[1], \"observations. Filtering by 2 samples and 10 counts resulted in,\", dim(ds_tpm_output_filtered)[1], \", which is\", (100*(dim(ds_tpm_output_filtered)[1]/dim(ds_tpm_output)[1])), \"% of the data.\\n\\n\")\n  ###\n  #\n  ## Positive log fold change == up regulared in CA, compared to NPSG\n  ds_tpm_output_filtered$PACIFIC_REGION &lt;- factor(ds_tpm_output_filtered$PACIFIC_REGION, levels = c(\"NPSG\", \"CA\"))\n  de_tax_output &lt;- DESeq2::DESeq(ds_tpm_output_filtered)\n  resultsNames(de_tax_output)\n  summary(de_tax_output)\n  return(de_tax_output)\n  cat(\"\\n\\nCompleted.\\n\\n\")\n}\n\n\n## Apply to each taxa\n\n# From the euphotic samples, what are DE genes among haptophytes between CA and NPSG?\ncat(\"\\n\\nDiatoms start.\\n\\n\")\nde_diatom &lt;- deseq_region_bytax(euphotic, diatom)\n\ncat(\"\\n\\Haptophytes start.\\n\\n\")\n# From the euphotic samples, what are DE genes among haptophytes between CA and NPSG?\nde_hapto &lt;- deseq_region_bytax(euphotic, hapto)\n\n\ncat(\"\\n\\Dinoflagellates start.\\n\\n\")\n# From the euphotic samples, what are DE genes among Dinoflagellates between CA and NPSG?\nde_dinos &lt;- deseq_region_bytax(euphotic, dinos)\n\ncat(\"\\n\\Chlorophytes start.\\n\\n\")\n# From the euphotic samples, what are DE genes among chlorophytes between CA and NPSG?\nde_chloro &lt;- deseq_region_bytax(euphotic, chloro)\n\nsave(de_diatom, de_hapto, de_dinos, de_chloro, file = \"/scratch/group/hu-lab/pacocean-metaT/Robjs/euphotic_by_taxa.RData\")"
  },
  {
    "objectID": "process-eukrhythmic-output.html#question-2",
    "href": "process-eukrhythmic-output.html#question-2",
    "title": "eukrhythmic compilation",
    "section": "Question 2",
    "text": "Question 2\nWe can repeat the above approach, but select different taxa.\n\nDo we see a similar euphotic vs. sub-euphotic shift in the metabolic potential of taxa observed at coastal California and the NPSG?\n\nUse scripts/run_bydepth_deseq_taxa.R."
  },
  {
    "objectID": "metat-analysis.html#untargeted---de-transcripts",
    "href": "metat-analysis.html#untargeted---de-transcripts",
    "title": "Analysis of metatranscriptome data",
    "section": "Untargeted - DE transcripts",
    "text": "Untargeted - DE transcripts"
  }
]
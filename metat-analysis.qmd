---
title: "Analysis of metatranscriptome data"
format:
  html:
    code-overflow: wrap
editor: visual
---

# Premise

We have taken outputs from *eukrhythmic* and performed transcript-level normalization so we can do downstream analysis. There are two core questions for this metatranscriptome study that can be subset into untargeted and targeted approaches. Questions stem from previous studies at both the NPSG and sites off of coastal California.

+------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
|            | **(1) How does nutrient utilization among euphotic zone phytoplankton vary between coastal California and the NPSG?**                                     | **(2) Do we see a similar euphotic vs. sub-euphotic shift in the metabolic potential of taxa observed at coastal California and the NPSG?**                                 |
+------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Untargeted | 1.  Subset whole dataset to taxa of interest (haptophytes, dinos, diatoms, archaeplastida), and to transcripts that were annotated.                       | 1.  Subset whole dataset to taxa of interest, dinos, ciliates, rhizaria, haptophytes.                                                                                       |
|            |                                                                                                                                                           |                                                                                                                                                                             |
|            | 2.  Run in DEseq2 to determine differentially expressed genes between: SPOT surface vs. all other samples in the euphotic zone.                           | 2.  Run in DESeq2. Compare all euphotic to all subeuphotic. Then NPSG euphotic to subeuphotic. Then SPOT euphotic to subeuphotic.                                           |
|            |                                                                                                                                                           |                                                                                                                                                                             |
|            | 3.  Tally what appears similar and different across sample comparisons                                                                                    | 3.  Tally what appears similar and different across sample comparisons                                                                                                      |
|            |                                                                                                                                                           |                                                                                                                                                                             |
|            | 4.  Then tally what appears different between taxa..                                                                                                      | 4.  Then tally what appears different between taxa.                                                                                                                         |
+------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Targeted   | SUBSET only those 4 groups from above. Run the count normalization, then isolate the key genes of interest. What is happening with critical N&P pathways? | SUBSET only those 4 groups from above. Run the count normalization, then isolate the all the key genes of interest. Paying particular attention to phagotrophy-based genes. |
+------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

# Set up working R environment

```{r, message=FALSE}
library(tidyverse)
library(data.table)
library(compositions)
library(patchwork)
library(ggupset)
# library(treemapify)
```

## Name & color schema

```{r}
sample_order <- c("ALOHA_5m", "ALOHA_DCM", "ALOHA_150m", "ALOHA_1000m", "Catalina", "PortofLA", "SPOT_surface", "SPOT_150m", "SPOT_890m")
color_sample_order <- c("#acfe9f","#a2e453","#26a314","#316728", "#f1c965","#ef617b", "#61d4ef", "#1449a3", "#bc65f1")
names(color_sample_order) <- (sample_order)

sample_order_month_RENAME <- c("ALOHA 5m", "ALOHA DCM", "ALOHA 150m", "ALOHA 1000m", "ALOHA 5m", "ALOHA DCM", "ALOHA 150m", "ALOHA 1000m", "Catalina", "Port of LA", "SPOT surface", "SPOT 150m", "SPOT 890m")

sample_order_month <- c("July_5m", "July_DCM", "July_150m", "July_1000m", "March_5m", "March_DCM", "March_150m", "March_1000m", "Catalina", "PortofLA", "SPOT_surface", "SPOT_150m", "SPOT_890m")
color_sample_order_month <- c("#acfe9f","#a2e453","#26a314","#316728","#acfe9f","#a2e453","#26a314","#316728", "#f1c965","#ef617b", "#61d4ef", "#1449a3", "#bc65f1")
names(color_sample_order_month) <- (sample_order_month)
shape_sample_order_month <- c(24,24,24,24,25,25,25,25,21,21,21,21,21)
```

```{r}
tax_order_color<-c("#612741","#b74a70","#b7757c","#eecfbf","#92462f","#bb603c","#dfa837","#ccc050","#33431e","#93b778","#61ac86","#657abb","#1c1949","#8a8d84")
supergroup_order <- c("Alveolata-Apicomplexa", "Alveolata-Ciliophora","Alveolata-Dinoflagellata","Alveolata-Perkinsea", "Alveolata-Unclassified","Amoebozoa","Chlorophyte","Excavata", "Hacrobia","Opisthokonta","Rhizaria", "Stramenopiles-Diatom","Stramenopiles-Other","Unclassified")
names(tax_order_color) <- (supergroup_order)
```

# Whole community analysis

Below, we will import the averaged (across replicates) and scaled transcript per million (TPM) values so we can look at the overall protistan community structure.

Start by importing all TPM results. Below R objects sourced by first isolating only the eukaryotic transcripts, averaging across replicates, and placing into long format.

```{r, echo=TRUE, eval=FALSE}
# | echo: true
# | eval: false
# load(file = "/scratch/group/hu-lab/pacocean-metaT/TPM-count-tables.RData", verbose = TRUE)
load(file = "input-data/TOY_TPM-count-tables.RData", verbose = TRUE)
# load(file = "input-data/TPM-count-tables.RData")
# load(file = "input-data/annot_files.RData")
```

Import metadata as well.

```{r}
# metadata_tmp <- read.delim("input-data/complete-sample-list.txt", header = TRUE, sep = ",")
# sample_metadata <- read.csv("input-data/sample_table.csv") %>%
  # unite(SAMPLE, Sample, Replicate, sep = "_", remove = FALSE) %>% 
  # select(RUN = SRR, everything()) %>% 
  # right_join(metadata_tmp)

# write.csv(sample_metadata, file = "input-data/sample-metadata.csv")
sample_metadata_1 <- read.csv("input-data/sample-metadata.csv")
sample_metadata <- sample_metadata_1 %>% 
  mutate(SAMPLE_MATCH = sub("_[^_]+$", "", SAMPLE))
sample_metadata
```

Import annotated TPMs

```{r}
# load("/scratch/group/hu-lab/pacocean-metaT/mean_counts_annotated.RData", verbose)
```

## Whole community analysis z-score

```{r}
load("input-data/zscore_TPM10.RData", verbose = TRUE)
# load("/scratch/group/hu-lab/pacocean-metaT/zscore_whole_and_bytax.RData", verbose = TRUE)
```

```{r}
glimpse(counts_zscore_TPM10)
```

Import z-score data frame for overview plot.

```{r}
sample_zscore_order <- c("NPSG ALOHA surface", "NPSG ALOHA DCM", "NPSG ALOHA 150 m", "NPSG ALOHA 1000 m", "CA Catalina surface", "CA PortsdfofLA surface", "CA SPOT surface", "CA SPOT 150 m", "CA SPOT 890 m")
```


```{r, fig.width=15, fig.height=6}
counts_zscore_TPM10 %>% 
  select(SequenceID, SAMPLENAME, z_score_transcript, PACIFIC_REGION) %>% 
  distinct() %>% 
  mutate(SAMPLENAME_ORDER = factor(SAMPLENAME, levels = sample_zscore_order)) %>% 
ggplot(aes(x = SequenceID, y = SAMPLENAME_ORDER, fill = z_score_transcript)) +
  geom_tile() +  theme(axis.text.x = element_blank(),
                       axis.ticks = element_blank(),
                       axis.text.y = element_text(color = "black")) +
   scale_fill_stepsn(colors = c("#084594", "#4292c6","#c6dbef",
                               "#eff3ff", "#fef0d9", "#fdbb84", "#fc8d59", "#ef6548", "#d7301f"),
                      # breaks = c(-1, -0.75, -0.5, -0.25 ,0, 1, 3, 5, 7, 10),
                      # limits = c(-1, 11),
                     na.value = "grey50",
                      guide = guide_coloursteps(even.steps = TRUE,
                                                show.limits = TRUE)) +
  labs(x = "Transcript signature", y = "") +
  facet_grid(cols = vars("PACIFIC_REGION"))
```

Import z-score scale by taxonomic groups to see how z-scores vary by group.

```{r, fig.width=15, fig.height=20}
# ggplot(bytax_counts_zscore, aes(x = SequenceID, y = SAMPLENAME, fill = z_score_transcript)) +
#   geom_tile() +  theme(axis.text.x = element_blank(),
#                        axis.ticks = element_blank(),
#                        axis.text.y = element_text(color = "black")) +
#    scale_fill_stepsn(colors = c("#084594", "#4292c6","#c6dbef",
#                                "#eff3ff", "#fef0d9", "#fdbb84", "#fc8d59", "#ef6548", "#d7301f"),
#                       # breaks = c(-1, -0.75, -0.5, -0.25 ,0, 1, 3, 5, 7, 10),
#                       # limits = c(-1, 11),
#                       guide = guide_coloursteps(even.steps = TRUE,
#                                                 show.limits = TRUE)) +
#   facet_grid(rows = vars(SUPERGROUP)) +
#   labs(x = "Transcript signature", y = "")
```

# Taxonomic composition & distribution

Import pre-processed taxonomic information from `process-eukrhythmic-output` script and start here.

```{r}
load("input-data/tax_only_08242023.RData", verbose = TRUE)
```

### Plot domain level

Creating plot to see total number and relative abundance of non-eukaryotic hits in the data.

```{r, fig.height=8, fig.width=5}
(tax_only %>%
  mutate(DOMAIN = str_squish(Domain),
         SAMPLE = str_remove(SAMPLE, "mean.")) %>% 
  group_by(SAMPLE, DOMAIN) %>% 
  summarise(SUM = sum(SUM_scaledTPM)) %>% 
  ggplot(aes(x = SAMPLE, y = SUM, fill = DOMAIN)) +
    geom_bar(stat = "identity", position = "stack", color = "black")+
    theme_linedraw() +
    theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))) /
(tax_only %>%
  mutate(DOMAIN = str_squish(Domain),
         SAMPLE = str_remove(SAMPLE, "mean.")) %>% 
  group_by(SAMPLE, DOMAIN) %>% 
  summarise(SUM = sum(SUM_scaledTPM)) %>% 
  ggplot(aes(x = SAMPLE, y = SUM, fill = DOMAIN)) +
    geom_bar(stat = "identity", position = "fill", color = "black")+
    theme_linedraw() +
    theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1)))
```

Stats on what % of the data are eukaryotic vs. not.

```{r}
SUM_TOTAL_TPM <- sum(tax_only$SUM_scaledTPM)
tax_only %>%
  mutate(DOMAIN = str_squish(Domain),
         SAMPLE = str_remove(SAMPLE, "mean.")) %>% 
  filter(SUM_scaledTPM > 0) %>%  # Remove zeroes
  group_by(DOMAIN) %>% 
    summarise(Sum_of_TPM = sum(SUM_scaledTPM),
              Perc_of_total = 100*(Sum_of_TPM/SUM_TOTAL_TPM),
              .groups = "rowwise")
            # Count = count(DOMAIN))
```

### Plot to supergroup

```{r}
# head(tax_only)
tax_only %>%
  mutate(DOMAIN = str_squish(Domain),
         SUPERGROUP = str_squish(Supergroup),
         PHYLUM = str_squish(Phylum),
         SAMPLE = str_remove(SAMPLE, "mean.")) %>% 
  filter(DOMAIN == "Eukaryota") %>% 
  group_by(SAMPLE, Supergroup) %>% 
  summarise(SUM = sum(SUM_scaledTPM)) %>% 
  ggplot(aes(x = SAMPLE, y = SUM, fill = Supergroup)) +
    geom_bar(stat = "identity", position = "fill", color = "black")+
    theme_linedraw() +
    theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))
```

Tally composition of the supergroup.

```{r}
colnames(tax_only)
# unique(tax_only$Phylum)
tax_names <- tax_only %>%
  mutate(DOMAIN = str_squish(Domain),
         SUPERGROUP = str_squish(Supergroup),
         PHYLUM = str_squish(Phylum),
         SAMPLE = str_remove(SAMPLE, "mean.")) %>% 
  filter(DOMAIN == "Eukaryota") %>% 
  select(DOMAIN, SUPERGROUP, Class:Species) %>% 
  distinct()
unique(tax_names$Phylum)
unique(tax_names$Supergroup)
```

Now, reformat taxonomic information to visualize.

```{r}
tax_formatted <- data.frame(tax_only) %>%
  # Remove preceding spaces in taxonomic names
  mutate(across(c(Domain, Supergroup, Phylum, Class, Order, Family, Genus, Species), ~ as.character(str_squish(.)))) %>% 
  filter(Domain == "Eukaryota" & SUM_scaledTPM > 0) %>% 
  mutate(SAMPLE_MATCH = str_remove(SAMPLE, "mean.")) %>%
  left_join(sample_metadata, by = "SAMPLE_MATCH") %>% 
  # Taxonomic group curation
  mutate(SUPERGROUP = case_when(
    Supergroup == "Alveolata" ~ paste(Supergroup, Phylum, sep = "-"),
    (Class == "Bacillariophyta" & Supergroup == "Stramenopiles") ~ paste(Supergroup, "Diatom", sep = "-"),
    (Class != "Bacillariophyta" & Supergroup == "Stramenopiles") ~ paste(Supergroup, "Other", sep = "-"),
    Supergroup == "Archaeplastida" ~ "Chlorophyte",
    TRUE ~ Supergroup
  )) %>% 
   # Reformat sample ID names
  mutate(SAMPLE_NAMES = factor(SAMPLE_MATCH, levels = rev(sample_order_month), label = rev(sample_order_month_RENAME)))

# head(tax_formatted)
unique(tax_formatted$SAMPLE_NAMES)
```

Assign levels for taxonomic groups.

```{r}
tax_order_color<-c("#612741","#b74a70","#b7757c","#eecfbf","#92462f","#bb603c","#dfa837","#ccc050","#33431e","#93b778","#61ac86","#657abb","#1c1949","#8a8d84")
# supergroup_order <- (as.character(unique(tax_formatted$SUPERGROUP)))
supergroup_order <- c("Alveolata-Apicomplexa", "Alveolata-Ciliophora","Alveolata-Dinoflagellata","Alveolata-Perkinsea", "Alveolata-Unclassified","Amoebozoa","Chlorophyte","Excavata", "Hacrobia","Opisthokonta","Rhizaria", "Stramenopiles-Diatom","Stramenopiles-Other","Unclassified")
names(tax_order_color) <- (supergroup_order)
```

#### Figure 1

```{r, fig.height=4, fig.width=7}
# head(tax_formatted)
tax_formatted %>% 
  mutate(SUPERGROUP = factor(tax_formatted$SUPERGROUP, levels = supergroup_order)) %>% 
  group_by(SAMPLE_NAMES, PACIFIC_REGION, LIGHT, SUPERGROUP) %>% 
  summarise(SUM = sum(SUM_scaledTPM)) %>% 
  ggplot(aes(x = SAMPLE_NAMES, y = SUM, fill = SUPERGROUP)) +
    geom_bar(stat = "identity", position = "fill", color = "black")+
    facet_grid(rows = vars(PACIFIC_REGION), scales = "free_y", space = "free") +
    scale_fill_manual(values = tax_order_color) +
    theme_classic() +
    coord_flip() +
    theme(axis.text.x = element_text(vjust = 1, hjust = 1),
          legend.title = element_blank(),
          axis.text = element_text(color = "black", size = 10)) +
    labs(x = "", y = "TPM Relative Abundance")
```

#### Additional taxonomic resolution

```{r}
head(tax_formatted)
unique(tax_formatted$SUPERGROUP)
tax_interest <- c("Alveolata-Ciliophora", "Alveolata-Dinoflagellata", "Chlorophyte", "Hacrobia", "Rhizaria","Stramenopiles-Diatom")
pink_qual <- c("#fff7f3", "#fcc5c0", "#fa9fb5","#f768a1","#dd3497", "#ae017e", "#7a0177")
```

```{r fig.height=12, fig.width=5}
tax_formatted %>% 
  mutate(SUPERGROUP = factor(tax_formatted$SUPERGROUP, levels = supergroup_order)) %>% 
  filter(SUPERGROUP %in% tax_interest) %>% 
  group_by(SAMPLE_ID_PARSED, PACIFIC_REGION, LIGHT, DEPTH, SUPERGROUP, Class, Order) %>% 
  summarise(SUM = sum(SUM_scaledTPM)) %>% 
  ggplot(aes(x = SAMPLE_ID_PARSED, y = Order)) +
    geom_tile(stat = "identity", color = "white", aes(fill = log(SUM))) +
    facet_grid(cols = vars(PACIFIC_REGION), rows = vars(SUPERGROUP), scales = "free", space = "free") +
      scale_fill_stepsn(
      # limits = c(-5,5),
      # breaks = c(0.0, 3.5, 7.0, 10.5),
      show.limits = TRUE,
      colors = pink_qual) +
    theme_classic() +
    # coord_flip() +
    theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
          legend.position = "top") +
    labs(x = "", y = "Order")
```

#### Table S3

Get stats on what transcripts were annotated to various levels, etc.

This represents a toy dataset to troubleshoot code.

```{r, echo=TRUE, eval=FALSE}
load("input-data/toy_1000.Rdata", verbose = TRUE)

# Change to original names, so code below can be written
annotated_mean <- annotated_mean_10000
df_ctr_norm <- ctr_norm_10000
head(annotated_mean)
```

> How many transcripts are annotated?

```{r, echo=TRUE, eval=FALSE}
data.frame(annotated_mean %>% 
             count(output = KEGG_ko != "-", 
                   name = "KEGGs") %>%
             left_join(annotated_mean %>% 
                     count(output = PFAMs != "-", 
                           name = "PFAMs")) %>% 
             left_join(annotated_mean %>% 
                     count(output = GOs != "-", 
                           name = "GOs")) %>% 
             left_join(annotated_mean %>% 
                     count(output = (GOs != "-" & PFAMs != "-" & KEGG_ko != "-"), 
                           name = "All"))) %>% 
  filter(output == TRUE) %>% select(-output) %>% 
  pivot_longer(cols = everything(), values_to = "Number annotated") %>% 
  mutate(Percent_annotated = 100*(`Number annotated`/length(annotated_mean$SequenceID)))
```

| DB    | Number of seqs annotated | Percent annotated |     |
|-------|--------------------------|-------------------|-----|
| KEGGs | 9970784                  | 67.7              |     |
| PFAMs | 13595566                 | 92.3              |     |
| GOs   | 5442486                  | 36.9              |     |
| All   | 4963542                  | 33.7              |     |

```{r, echo=TRUE, eval=FALSE}
summary_annotated <- annotated_mean %>%
  mutate(SUM = rowSums(across(where(is.numeric)))) %>%
  select(SUM, GOs, PFAMs, KEGG_ko, Domain, Supergroup)

# write.csv(summary_annotated, file = "summary_of_annotated_totalTPM.csv")
# sum(summary_annotated$SUM) # TPM amount that is annotated
```

> How many are annotated and have taxonomic IDs?

```{r, echo=TRUE, eval=FALSE}
noneuk <- c("Unclassified", "Bacteria", "Archaea")
as.data.frame(annotated_mean %>% 
             count(output = !(Domain %in% noneuk), 
                   name = "IDed as Eukaryote") %>% 
    left_join(annotated_mean %>% 
                     count(output = !(Domain %in% noneuk) & Supergroup != "Unclassified", 
                           name = "Supergroup level")) %>% 
             left_join(annotated_mean %>% 
                     count(output = !(Domain %in% noneuk) & Class != "Unclassified", 
                           name = "Class level")) %>% 
             left_join(annotated_mean %>% 
                     count(output = !(Domain %in% noneuk) & Order != "Unclassified", 
                           name = "Order level")) %>%
            left_join(annotated_mean %>% 
                     count(output = !(Domain %in% noneuk) & Family != "Unclassified", 
                           name = "Family level")) %>%
            left_join(annotated_mean %>% 
                     count(output = !(Domain %in% noneuk) & Genus != "Unclassified", 
                           name = "Genus level")) %>%
              left_join(annotated_mean %>% 
                     count(output = !(Domain %in% noneuk) & Species != "Unclassified", 
                           name = "Species level"))) %>%  
  filter(output == TRUE) %>% select(-output) %>% 
  pivot_longer(cols = everything(), values_to = "Number annotated") %>% 
  mutate(Percent_annotated = 100*(`Number annotated`/length(annotated_mean$SequenceID)))
```

# Ordination analysis

Import center scaled data.

```{r}
# | echo: true
# | eval: false
load("/scratch/group/hu-lab/pacocean-metaT/vst_formatted_forlocaluse.RData", verbose = TRUE)
# vst_format_subset, vst_format_all
load("/scratch/group/hu-lab/pacocean-metaT/TOY_vst_formatted_forlocalus ")
```

```{r}
# head(vst_format_subset)
range(vst_format_subset$MEAN_VALUE)
```

```{r}
load("/scratch/group/hu-lab/pacocean-metaT/TOY_vst_formatted_forloca  ")
```

## PCoA with whole community functional profile

Ahead of time, normalized community composition data was center scaled. Below, we can import this dataset and perform principle component analysis.

Import normalized center data. Below, principle component calculations were done on HPC.

> TRY WITH VST DATA?

```{r, echo=TRUE, eval=FALSE}
# | echo: true
# | eval: false
# load("input-data/normed_center_df_08222023.RData", verbose = TRUE)
```

```{r, echo=TRUE, eval=FALSE}
# | echo: true
# | eval: false
pca_lr <- prcomp(as.data.frame(t(df_ctr_norm)))
variance_lr <- (pca_lr$sdev^2)/sum(pca_lr$sdev^2)
```

Import PCA objects from running R on the HPC.

```{r}
load("input-data/pca_objects.RData", verbose = TRUE)
```

Determine how appropriate the PCoA is in 2 vs 3 dimensions.

```{r}
barplot(variance_lr, main = "Log-Ratio PCA Screeplot", xlab = "PC Axis", ylab = "% Variance", cex.names = 1.5, cex.axis = 1.5, cex.lab = 1.5, cex.main = 1.5)
```

```{r, fig.height=7, fig.width=7}
pc1 <- round(variance_lr[1] * 100, 2)
pc2 <- round(variance_lr[2] * 100, 2)
# head(sample_metadata)
# svg("Rplot_metat_pca_wholecommunity.svg", width = 7, height = 7)
pca_df %>% 
  left_join(sample_metadata, by = c("SAMPLE_MATCH" = "SAMPLE")) %>%
  mutate(SAMPLE_MATCH_ORDER = factor(Sample, levels = sample_order_month)) %>% 
  mutate(REGION_ORDER = case_when(REGION == "ALOHA" ~ paste("ALOHA", MONTH), TRUE ~ REGION)) %>% 
  ggplot(aes(x = PC1, y = PC2)) +
    # geom_jitter(stroke = 1, size = 4, aes(shape = REGION_ORDER, fill = DEPTH_CATEGORY, color = LIGHT)) +
    geom_jitter(stroke = 1, size = 4, aes(shape = SAMPLE_MATCH_ORDER, fill = SAMPLE_MATCH_ORDER), color = "black") +
    scale_shape_manual(values = shape_sample_order_month) +
    # scale_shape_manual(values = c(24, 25, 23, 22, 21)) +
    # scale_fill_manual(values = c("#6a51a3", "#f768a1", "#8c96c6", "#fd8d3c", "#238b45")) +
    scale_fill_manual(values = color_sample_order_month) +
    # scale_color_manual(values = c("#cccccc", "#252525")) +
    theme_linedraw() + coord_fixed(ratio = 1) +
    # guides(fill = guide_legend(override.aes = list(shape = c(22)))) +
    geom_hline(yintercept = 0) + geom_vline(xintercept = 0) +
    theme(legend.title = element_blank(),
          axis.text = element_text(color = "black", face = "bold", size = 13)) +
    labs(x =  paste(pc1, "%"), y = paste(pc2, "%"))
```

## Hierarchical clustering

Making toy data set first, to test code. Need to input the processed center normalized data for below.

> TRY WITH VST DATA?

```{r}
# install.packages("factoextra")
library(factoextra)
# head(df_ctr_norm)
tmp_500 <- df_ctr_norm %>% sample_n(500) 
head(df_ctr_norm)
```

```{r}
# df_ctr_norm_dist <- dist(df_ctr_norm, method = "euclidean")
df_ctr_norm_dist <- dist(t(tmp_500), method = "euclidean")
# head(df_ctr_norm_dist)
hc_norm_dist <- hclust(df_ctr_norm_dist, method = "average")
# plot(hc_norm_dist)
```

```{r}
library(ggdendro)
dendro_plot_df <- ggdendro::dendro_data(as.dendrogram(hc_norm_dist), type = "rectangle")
# head(dendro_plot_df)
# label_dendro_order <- as.character(dendro_plot_df$labels$label)
```

```{r, fig.height=15, fig.width=9}
dendro_plot_output <- ggplot(segment(dendro_plot_df)) + 
  geom_segment(aes(x = x, y = y, xend = xend, yend = yend)) + 
  coord_flip() + 
  scale_y_reverse(expand = c(0.2, 0.5), breaks = c(0, 0.2, 0.4, 0.6, 0.8)) + 
  geom_text(aes(x = x, y = y, label = label, angle = 0, hjust = 0), data = label(dendro_plot_df)) + 
  theme_dendro() + 
  # labs(y = "Dissimilarity", title = "Jaccard distance") + 
  theme(axis.text.x = element_text(color = "black", size = 14), 
        axis.line.x = element_line(color = "#252525"), 
        axis.ticks.x = element_line(), axis.title.x = element_text(color = "black", size = 14),
        plot.margin = margin(1,4,1,1, "cm"))
dendro_plot_output
```

> Save label order from above. Then put in the kmeans output.

# K-means clustering

> Try with the VST data!

Explanation of kmeans clustering.

```{r}
# save(mean_ctr_df, file = "input-data/mean_ctr_df.RData")
# glimpse(mean_ctr_df)
```

See script `run-kmeans_01.R`

```{r}
# | echo: true
# | eval: false
# Load library
library(tidyverse)
library(broom)
# Load data
load("/scratch/group/hu-lab/pacocean-metaT/Robjs/mean_ctr_df.RData", verbose = TRUE)

# Modify input dataframe
kmeans_input_pac <- mean_ctr_df %>% 
  select(SequenceID, starts_with("mean.")) %>% 
  distinct() #%>%
  # sample_n(20000) # subsample for non-remote option

# colnames(kmeans_input_pac)
head(kmeans_input_pac)
```

We do not know the optimal number of clusters, so we have to look at the total within-cluster sum of squares versus the number of k. We want the total within cluster sum of squares `tot.withinss` to be smaller. So we want to pick the number of clusters that represents that, without getting too many clusters out.

Total within cluster sum of squares `tot.withinss`: the distance from all observations to the global centroid. Smaller values suggest that the observations within the cluster are closer together (or more similar).

```{r, fig.height=4, fig.width=6}
# | echo: true
# | eval: false

kclusts <-
  tibble(k = 5:35) %>%
  mutate(
    kclust = map(k, ~ kmeans(select(kmeans_input_pac, -SequenceID), .x)),
    glanced = map(kclust, glance)
  )

output_kclusts <- kclusts %>%
  unnest(cols = c(glanced))

write_delim(output_kclusts, file = "output_kclusts.txt")
```

Run the below code locally.

```{r}
output_kclusts <- read_delim("input-data/output_kclusts.txt")

output_kclusts %>% 
  ggplot(aes(x = k, y = tot.withinss)) +
    geom_line(alpha = 0.5, size = 1.2, color = "darkgreen") +
    geom_point(size = 2, color = "darkgreen") +
  theme_linedraw() +
  geom_vline(xintercept = 25, color = "orange")
```

Based on the output above, clusters between 20-25 should be okay. I plan to use 25, where the orange line is showing the main "elbow" of the figure.

Run k-means clustering with our chosen number of clusters, See script `run-kmeans_02.R`

```{r}
# | echo: true
# | eval: false
pac25_clust <- kmeans(select(kmeans_input_pac, -SequenceID), centers = 25)

summary(pac25_clust)


broom::tidy(pac25_clust)
# ?augment()

augment_pacocean <- augment(pac25_clust, kmeans_input_pac)
df_kmeans_pacoce <- (data.frame(augment_pacocean))

save(df_kmeans_pacoce, file = "kmeansoutput-pacificocean-metaT.RData")
```

## Examine taxa and function profiles with clusters

```{r}
# | echo: true
# | eval: false
# taxfxn <- read.csv("TaxonomicAndFunctionalAnnotations.csv")
load("input-data/kmeansoutput-pacificocean-metaT.RData", verbose = TRUE)
glimpse(df_kmeans_pacoce)
# length(df_kmeans_pacoce$SequenceID)
# length(unique(df_kmeans_pacoce$SequenceID))
```

```{r}
load(file = "input-data/Avg_scaled_tpm_curated_08252023.RData", verbose = T)
glimpse(counts_curated)
```

```{r}
TPM_wcluster <- counts_curated %>% 
  select(-X, -rownames, -ShortSeqID) %>% 
  left_join(df_kmeans_pacoce %>% select(SequenceID, CLUSTER = `.cluster`)) %>% 
  pivot_longer(cols = starts_with("mean."), names_to = "SAMPLE_TMP", values_to = "TPM", values_drop_na = TRUE) %>% 
  mutate(SAMPLE_TMP = str_remove(SAMPLE_TMP, "mean.")) %>% 
  mutate(SAMPLE = str_replace(SAMPLE_TMP, "July", "ALOHA"),
         SAMPLE = str_replace(SAMPLE, "March", "ALOHA")) %>% 
  filter(TPM > 0) %>% 
  # Taxonomic group curation
  mutate(SUPERGROUP = case_when(
    Supergroup == "Alveolata" ~ paste(Supergroup, Phylum, sep = "-"),
    (Class == "Bacillariophyta" & Supergroup == "Stramenopiles") ~ paste(Supergroup, "Diatom", sep = "-"),
    (Class != "Bacillariophyta" & Supergroup == "Stramenopiles") ~ paste(Supergroup, "Other", sep = "-"),
    Supergroup == "Archaeplastida" ~ "Chlorophyte",
    TRUE ~ Supergroup
  )) %>% 
  mutate(SUPERGROUP_ORDER = factor(SUPERGROUP, levels = supergroup_order))
```

### Compare compositions of k-means clusters

Supplementary figure.

```{r, fig.width=14, fig.height=9}
((TPM_wcluster %>% 
  group_by(SAMPLE, CLUSTER) %>% 
  summarise(TRANSCRIPT_COUNT = n(),
            TPM_SUM = sum(TPM)) %>% 
  mutate(SAMPLE_ORDER = factor(SAMPLE, levels = sample_order)) %>% 
  ggplot(aes(x = CLUSTER, y = TPM_SUM, fill = SAMPLE_ORDER)) +
  geom_bar(stat = "identity", color = "black") +
  scale_fill_manual(values = color_sample_order) +
  scale_y_continuous(expand = c(0,0)) +
  theme_minimal() +
  theme(axis.text = element_text(color = "black"),
        legend.title = element_blank()) +
  labs(y = "TPM", x = "")) /
  (TPM_wcluster %>% ungroup() %>% 
  group_by(SUPERGROUP_ORDER, CLUSTER, .groups = "rowwise") %>% 
  summarise(TRANSCRIPT_COUNT = n(),
            TPM_SUM = sum(TPM)) %>% 
  ggplot(aes(x = CLUSTER, y = TPM_SUM, fill = SUPERGROUP_ORDER)) +
  geom_bar(stat = "identity", color = "black") +
  scale_fill_manual(values = tax_order_color) +
  scale_y_reverse(expand = c(0,0)) +
  theme_minimal() +
  theme(axis.text = element_text(color = "black"),
        legend.title = element_blank(),
        axis.text.x = element_blank()) +
  labs(y = "TPM", x = ""))) | 
  # Repeat with total number
  ((TPM_wcluster %>% 
  group_by(SAMPLE, CLUSTER) %>% 
  summarise(TRANSCRIPT_COUNT = n(),
            TPM_SUM = sum(TPM)) %>% 
  mutate(SAMPLE_ORDER = factor(SAMPLE, levels = sample_order)) %>% 
  ggplot(aes(x = CLUSTER, y = TRANSCRIPT_COUNT, fill = SAMPLE_ORDER)) +
  geom_bar(stat = "identity", color = "black") +
  scale_fill_manual(values = color_sample_order) +
  scale_y_continuous(expand = c(0,0)) +
  theme_minimal() +
  theme(axis.text = element_text(color = "black"),
        legend.position = "none",
        legend.title = element_blank()) +
  labs(y = "Transcript count", x = "")) /
  (TPM_wcluster %>% ungroup() %>% 
  group_by(SUPERGROUP_ORDER, CLUSTER, .groups = "rowwise") %>% 
  summarise(TRANSCRIPT_COUNT = n(),
            TPM_SUM = sum(TPM)) %>% 
  ggplot(aes(x = CLUSTER, y = TRANSCRIPT_COUNT, fill = SUPERGROUP_ORDER)) +
  geom_bar(stat = "identity", color = "black") +
  scale_fill_manual(values = tax_order_color) +
  scale_y_reverse(expand = c(0,0)) +
  theme_minimal() +
  theme(axis.text = element_text(color = "black"),
        legend.title = element_blank(),
        legend.position = "none",
        axis.text.x = element_blank()) +
  labs(y = "Transcript count", x = ""))) +
  patchwork::plot_layout(ncol = 1)
```

Use the below plot to put this next to the hclust output.

```{r, fig.height=8, fig.width=15}
TPM_wcluster %>% 
  group_by(SAMPLE, CLUSTER) %>% 
  summarise(TRANSCRIPT_COUNT = n(),
            TPM_SUM = sum(TPM)) %>% 
  mutate(SAMPLE_ORDER = factor(SAMPLE, levels = sample_order)) %>% 
  # ggplot(aes(x = SAMPLE, y = TPM_SUM, fill = CLUSTER)) +
  ggplot(aes(x = SAMPLE, y = TRANSCRIPT_COUNT, fill = CLUSTER)) +
  geom_bar(stat = "identity", color = "black", position = "fill") +
  # scale_fill_manual(values = color_sample_order) +
  scale_y_continuous(expand = c(0,0)) +
  coord_flip() +
  theme_minimal() +
  theme(axis.text = element_text(color = "black"),
        legend.title = element_blank()) +
  labs(y = "TPM", x = "")
```

# Import KEGG IDs

These have been curated.

```{r}
kegg <- read.csv("../KEGG_DB/combined_kegg.csv")
# head(kegg$KO_number)
curated_kegg <- read.csv("../KEGG_DB/reformat-kegg-pfam-skh.csv")

key_geneid <- curated_kegg %>% 
  select(-X) %>% 
  right_join(kegg %>% select(KEGG = KO_number, everything(), -X)) %>% 
  distinct() %>% 
  select(starts_with("KeggOrthology_"), Category01, Category02, FullName, GeneID, Gene_identification, KEGG, PFAM, Descriptions, REF = REFs)
```

Subset key_geneid dataframe to select what we want from it.

```{r}
# head(key_geneid)
# unique(key_geneid$KeggOrthology_B)

kegg_ortho_based <- key_geneid %>% 
  select(KeggOrthology_B, KEGG, GeneID, Gene_identification) %>% 
  filter(!is.na(KeggOrthology_B)) %>% 
  distinct()

# dim(key_geneid)
# dim(kegg_ortho_based)


kegg_curated <- key_geneid %>% 
  select(Category01, Category02, KEGG, GeneID, Gene_identification) %>% 
  filter(!is.na(Category01)) %>% 
  distinct()
# dim(kegg_curated)
# unique(kegg_curated$Category01)
```

Create ordered list for genes related to N and P metabolism.

```{r}
# head(curated_kegg)
geneid_order_nuts <- as.character(curated_kegg %>% 
  filter(Category01 == "N and P metabolism") %>% 
  rownames_to_column(var = "ORDER") %>% 
  select(ORDER, GeneID) %>% 
    rbind(data.frame(ORDER = 0, GeneID = "Mean")) %>% 
  distinct() %>% arrange(as.numeric(ORDER)) %>% 
  select(GeneID) %>% 
    .[["GeneID"]])
geneid_order_nuts

geneid_order_hets <- as.character(curated_kegg %>% 
  filter(Category01 == "Phagotrophy") %>% 
  rownames_to_column(var = "ORDER") %>% 
  select(ORDER, Category02) %>% 
    rbind(data.frame(ORDER = 0, Category02 = "Mean")) %>% 
  arrange(as.numeric(ORDER)) %>%  
  select(Category02) %>% distinct() %>%
    .[["Category02"]]) 
geneid_order_hets
```

# Question 1 - N&P metabolism in the euphotic region

Load only curated TPM information

```{r}
load(file = "/scratch/group/hu-lab/pacocean-metaT/mean_counts_curated_only.RData", verbose = TRUE)
```

# Question 2 - Heterotrophic modes of nutrition

Load only curated TPM information

```{r}
load(file = "/scratch/group/hu-lab/pacocean-metaT/mean_counts_curated_only.RData", verbose)
```

# BREAK

# Untargeted - DE transcripts

# Prep to address key questions (local)

## Prepare data frames for targeted approach

Data for targeted sections is imported from `process-eukrhythmic-output` code titled *Curated genes only*.

```{r}
load("input-data/Avg_scaled_tpm_curated_08252023.RData", verbose = TRUE)
```

To address question 1, subset to a curated set of genes.

```{r}
counts_curated_annot <- counts_curated %>%
  mutate(KEGG = str_remove(KEGG_ko, "ko:")) %>%
  left_join(kegg_curated)

counts_curated_kegg <- counts_curated %>%
  mutate(KEGG = str_remove(KEGG_ko, "ko:")) %>%
  left_join(kegg_ortho_based)
# head(ctr_norm_curated)
```

```{r}
load("input-data/normed_center_df_curated_08252023.RData", verbose = TRUE)
# head(ctr_norm_curated)
# colnames(ctr_norm_curated)
```

```{r}
# Rename column headers
names_orig <- colnames(ctr_norm_curated)
names_new <- sub("_[^_]+$", "", names_orig)
names_new
colnames(ctr_norm_curated) <- names_new
```

Mean across columns that have the same name - which are replicates.

```{r}
# colnames(ctr_norm_curated)
mean_ctr_df <- ctr_norm_curated %>%
  cbind(as.list(.) %>%
    Filter(is.numeric, .) %>%
    split(names(.)) %>%
    lapply(as.data.frame) %>%
    lapply(rowMeans) %>%
    setNames(paste0("mean.", names(.)))) %>% 
  select(starts_with("mean"), SequenceID, ShortSeqID, Domain:Species, GOs, PFAMs, KEGG) %>% 
  select(-mean.rownames, -mean.X)
colnames(mean_ctr_df)
```

Join with KEGG information that is curated

```{r}
# Repeat with ctr_norm_curated
ctr_curated_annot <- mean_ctr_df %>%
  mutate(KEGG = str_remove(KEGG, "ko:")) %>%
  left_join(kegg_curated)

ctr_curated_kegg <- mean_ctr_df %>%
  mutate(KEGG = str_remove(KEGG, "ko:")) %>%
  left_join(kegg_ortho_based)

```

Use 'mean_ctr_df' for downstream targeted analyses.

# mean_ctr_df

```{r}
dim(mean_ctr_df)
glimpse(mean_ctr_df)

# Play with toy dataset
tmp <- mean_ctr_df %>% 
  sample_n(100)
```

```{r}
tmp2 <- mean_ctr_df %>% 
  pivot_longer(cols = starts_with("mean."), names_to = "SAMPLE01", values_to = "CTR") %>% 
  mutate(SAMPLE_TMP = str_remove(SAMPLE01, "mean.")) %>% 
  mutate(SAMPLE02 = factor(SAMPLE_TMP, levels = rev(sample_order_month), labels = rev(sample_order_month_RENAME))) %>% 
  group_by(SAMPLE02, SequenceID, pick(Domain:KEGG)) %>% 
    summarise(CTR_mod = mean(CTR)) %>% 
  distinct()

mid_point <- mean(tmp2$CTR_mod)
```

```{r}
order_spot_surf <- tmp2 %>% 
  filter(SAMPLE02 == "SPOT surface") %>% 
  arrange(CTR_mod)
# head(order_spot_surf)
?unique()
order_seqid <- as.character(unique(order_spot_surf$SequenceID))
```

change so aloha and CA samples are arranged by the first surface sample - look at prefiltering

```{r}
tmp2 %>% 
  mutate(SEQID_ORDER = factor(SequenceID, levels = order_seqid)) %>% 
  ggplot(aes(y = SAMPLE02, x = SEQID_ORDER, fill = CTR_mod)) +
  geom_tile() +
  theme(axis.text.x = element_blank()) +
  # scale_fill_gradient2(low = "blue", mid = "white", high = "red", 
  #                      midpoint = mid_point, na.value = NA,
  #                      space = "Lab")
  # scale_fill_steps(
  #   name = waiver(),
  #   low = "#2b8cbe",
  #   high = "#e34a33",
  #   space = "Lab",
  #   na.value = "grey50",
  #   guide = "coloursteps",
  #   aesthetics = "fill")
  scale_fill_stepsn(colors = c("#084594", "#4292c6","#c6dbef",
                               "#eff3ff", "#fef0d9", "#fdbb84", "#fc8d59", "#ef6548", "#d7301f"),
                      breaks = c(-1, -0.75, -0.5, -0.25 ,0, 1, 3, 5, 7, 10),
                      # limits = c(-1, 11),
                      guide = guide_coloursteps(even.steps = TRUE,
                                                show.limits = TRUE))
```

# Question 1

> How does nutrient utilization among euphotic zone phytoplankton vary between coastal California and the NPSG?

## Untargeted

Complete code: `/scripts/get_euphotic_DE_bytaxa.R`

Use output files below for further analysis below.

### Stats on DE transcripts

```{r, echo=TRUE, eval=FALSE}
de_all <- read.csv("input-data/bytaxa_euphoticzone_DE.csv")
de_all
```

Example code for compiling DE transcripts by individual taxa (from script):

```{r, echo=TRUE, eval=FALSE}
load("euphotic_by_taxa.RData", verbose = TRUE)
```

```{r, echo=TRUE, eval=FALSE}
res_hapto <- results(de_hapto, alpha=0.05)

plot_hapto <- data.frame(res_hapto) %>% 
  mutate(REGULATION = case_when(
    log2FoldChange > 0 ~ "upregulated in CA",
    log2FoldChange < 0 ~ "upregulated in NPSG"
  ),
  SIGNIFICANT = case_when(
    pvalue <= 0.05 ~ "Significantly",
    TRUE ~ "Not significantly"
  )) %>% 
  ggplot(aes(x = baseMean, y = log2FoldChange, color = SIGNIFICANT)) +
  geom_point(stat = "identity") +
  scale_x_log10() +
  theme_classic() +
  scale_color_manual(values = c("#878787", "#d73027")) +
  labs(title = mcols(res_hapto)$description[2])

hapto_transcripts <- data.frame(res_hapto) %>% 
  mutate(REGULATION = case_when(
    log2FoldChange > 0 ~ "upregulated in CA",
    log2FoldChange < 0 ~ "upregulated in NPSG"
  ),
  SIGNIFICANT = case_when(
    pvalue <= 0.05 ~ "Significantly",
    TRUE ~ "Not significantly"
  )) %>% 
  filter(SIGNIFICANT == "Significantly") %>% 
  rownames_to_column(var = "SequenceID") %>% 
  mutate(TAXA = "Haptophyte")

write.csv(hapto_transcripts, file = "hapto_sig_de_euphotic.csv")
```

See script: `euphotic_region_bytax.R`.

```{r, echo=TRUE, eval=FALSE}
# List of DE transcripts - what is upregulated vs downregulated by taxa
de_all <- read.csv("bytaxa_euphoticzone_DE.csv")
#
de_chloro <- read.csv("chloro_sig_de_euphotic.csv")
de_dino <- read.csv("dinos_sig_de_euphotic.csv")
de_diatom <- read.csv("diatom_sig_de_euphotic.csv")
de_hapto <- read.csv("hapto_sig_de_euphotic.csv")
```

Sequence IDs are all unique, because they correspond to taxa. Therefore, we need to include gene-level IDs so we can compare what is DE across CA vs. NPSG.

```{r, echo=TRUE, eval=FALSE}
# Import KEGG information
taxfxn <- read.csv("TaxonomicAndFunctionalAnnotations.csv")

alltax <- de_chloro %>% 
  rbind(de_diatom) %>% 
  rbind(de_dino) %>% 
  rbind(de_hapto) %>% 
  select(SequenceID, log2FoldChange, pvalue, REGULATION, TAXA) %>%
  left_join(taxfxn)
```

This `alltax` Robj is helpful for coming back to getting more taxonomic resolution.

What is shared versus unique?

```{r, echo=TRUE, eval=FALSE}
alltax_compareDE <- alltax %>% 
  unite(GENEID_ko_pfam, PFAMs, KEGG_ko, sep = ";") %>% 
  select(REGULATION, TAXA, log2FoldChange, GENEID_ko_pfam) %>% 
  group_by(REGULATION, GENEID_ko_pfam, TAXA) %>%
  summarise(n = dplyr::n(), .groups = "drop") %>%
  filter(n > 1L) %>% 
  pivot_wider(names_from = TAXA, values_from = n)
```

```{r}
output_untarget <- alltax_compareDE

# save(alltax_compareDE, alltax, file = "taxa-untarget-q1.RData")
```

### Local - untargeted mining

Bring untargeted results locally to mine.

```{r}
load("input-data/taxa-untarget-q1.RData", verbose = TRUE)
```

```{r}
# glimpse(alltax)
table(alltax %>% 
        select(REGULATION, TAXA))
```

#### UpsetR plot

Make supplementary figures to summarize what the significantly differentially expressed genes are for individual taxa.

```{r}
library(ggupset)

alltax %>% 
  unite(GENEID_ko_pfam, PFAMs, KEGG_ko, sep = ";") %>% 
  select(REGULATION, TAXA, log2FoldChange, GENEID_ko_pfam) %>% 
  group_by(REGULATION, GENEID_ko_pfam, TAXA) %>%
  summarise(n = dplyr::n(), .groups = "drop") %>%
  filter(n > 1L) %>% 
  group_by(GENEID_ko_pfam, REGULATION) %>% 
    summarise(TAXA = list(TAXA)) %>% 
  ggplot(aes(x = TAXA)) +
    geom_bar(aes(fill = REGULATION)) +
    scale_fill_manual(values = c("#74add1", "#fdae61")) +
    scale_x_upset(order_by = "freq") +
  theme_classic() +
    theme(axis.text.x = element_text(vjust = 1, hjust = 1)) +
    labs(x = "", y = "TPM Relative Abundance")
```

Based on this plot, it looks like these taxa primarily have their own strategies in the coastal California environment versus the NPSG environment.

#### What transcripts are shared across all taxa vs. unique?

```{r}
tax_indiv <- alltax_compareDE %>%
  mutate(CATEGORY = case_when(
                     (is.na(Chlorophyte) & is.na(Diatom) & is.na(Haptophyte)) ~ "Dinoflagellate only",
                   (is.na(Dinoflagellate) & is.na(Diatom) & is.na(Haptophyte)) ~ "Chlorophyte only",
                   (is.na(Dinoflagellate) & is.na(Chlorophyte) & is.na(Haptophyte)) ~ "Diatom only",
                   (is.na(Dinoflagellate) & is.na(Chlorophyte) & is.na(Diatom)) ~ "Haptophyte only",
                   TRUE ~ NA)) %>% 
  filter(!is.na(CATEGORY))

shared_euphotic <- alltax_compareDE %>% 
  drop_na() %>% 
  add_column(CATEGORY = "Shared across all taxa") %>% 
  rbind(tax_indiv) %>% 
  separate(GENEID_ko_pfam, into = c("PFAMs", "KEGG_ko"), sep = ";") %>% 
  mutate(KEGG = str_remove(KEGG_ko, "ko:")) %>%
  left_join(key_geneid) %>% 
  add_column(COUNT = 1)
```

```{r}
glimpse(alltax_compareDE)
```

#### Shared between Dinoflagellates & haptophytes or chlorophytes

```{r}
shared_dino_hapto_chl <- alltax_compareDE %>% 
  filter(!is.na(Dinoflagellate) &
           !is.na(Haptophyte) &
           is.na(Chlorophyte) &
           is.na(Diatom)) %>% 
  add_column(CATEGORY = "Dinoflagellate_Haptophyte") %>% 
  rbind(alltax_compareDE %>% 
  filter(!is.na(Dinoflagellate) &
           is.na(Haptophyte) &
           !is.na(Chlorophyte) &
           is.na(Diatom)) %>%  
  add_column(CATEGORY = "Dinoflagellate_Chlorophyte")) %>% 
  separate(GENEID_ko_pfam, into = c("PFAMs", "KEGG_ko"), sep = ";") %>% 
  mutate(KEGG = str_remove(KEGG_ko, "ko:")) %>%
  left_join(key_geneid) %>% 
  add_column(COUNT = 1)
# View(shared_dino_hapto_chl)
# write_delim(shared_dino_hapto_chl, file = "output-data/shared_dinos_hapto_chlor.txt", delim = "\t")
```

Use this data frame to see if the genes we pick out also belong to specific clusters.

```{r}
alltax %>% 
  left_join(df_kmeans_pacoce %>% select(SequenceID, CLUSTER = `.cluster`))
```

### Plot shared and unique categories

```{r}
unique(shared_euphotic$KeggOrthology_A)
unique(shared_euphotic$Category01)
unique(shared_euphotic$CATEGORY)
paths_ORDER <- c("Photosynthesis", "Energy Acquisition", "Carbon fixation", "Nutrient processing", "Gluconeogenesis-glycolysis", "N and P metabolism", "Glyoxylate cycle", "Phagotrophy", 
                 "Environmental Information Processing", "Cellular Processes",
                 "Genetic Information Processing", "Metabolism",
                 "Other")

paths_COLOR <-c ("#f7fcb9", "#fdae6b", "#fc9272", "#7fcdbb", "#d9f0a3", "#78c679", "#bfd3e6", "#fde0dd",
                 "#fd8d3c", "#225ea8", 
                 "#cb181d", "#41ab5d",
                 "#969696")
```

Additional supplementary figure to see how

```{r fig.height=6, fig.width=7}
shared_euphotic %>% 
  mutate(Category01 = str_replace_na(Category01, "Other")) %>%
  group_by(CATEGORY, REGULATION, Category01) %>% 
    summarise(Category01_SUM = sum(COUNT)) %>% 
  add_column(CATEGORY_TYPE = "KEGG_cat01") %>% 
  select(CATEGORY, REGULATION, CATEGORY_TYPE, TYPE_NAME = Category01, SUM = Category01_SUM) %>%
  #
  rbind(
    #
    shared_euphotic %>% 
  mutate(KeggOrthology_A = str_replace_na(KeggOrthology_A, "Other")) %>%
  group_by(CATEGORY, REGULATION, KeggOrthology_A) %>% 
    summarise(KeggOrthology_A_SUM = sum(COUNT)) %>% 
  add_column(CATEGORY_TYPE = "KEGG_ORTHO_A") %>% 
  select(CATEGORY, REGULATION, CATEGORY_TYPE, TYPE_NAME = KeggOrthology_A, SUM = KeggOrthology_A_SUM)
  #
  ) %>% 
  mutate(CATEGORY_TYPE_ORDER = factor(TYPE_NAME, levels = paths_ORDER)) %>% 
  ggplot(aes(x = CATEGORY_TYPE, fill = CATEGORY_TYPE_ORDER, y = SUM)) +
    geom_bar(stat = "identity", position = "fill", color = "black", stroke = 0.4) + facet_grid(cols = vars(REGULATION), rows = vars(CATEGORY)) +
  theme_classic() +
  coord_flip() +
  theme(axis.text.x = element_text(angle = 0, h = 1, vjust = 1),
        strip.text = element_text(angle = 0),
        legend.position = "right") +
  scale_fill_manual(values = paths_COLOR)
```

Manually look for specific shared transcripts.

```{r}
# glimpse(shared_euphotic)

write_delim((shared_euphotic %>% 
  filter(CATEGORY == "Shared across all taxa")), "output-data/shared_euphotic.txt", delim = "\t")
```

**Take home messages**: Most of the transcripts are upregulated in California. More dynamic environment compared to the NPSG surface. For transcripts that were shared across all taxa, they were on the overall low end. Among KEGG categories, a lot were assocaited with genetic information processing. For those that were curated for this study, many were related to phagotrophy. Emphasizing just how different the strategies are among all of these taxa to succeed in the euphotic zone.

### k-means clustering for euphotic zone

Explore:

-   Cluster 17 of Catalina

-   Cluster 19 of Port of LA

-   Overall, comparing clusters that have a lot of surface and DCM ALOHA - when done by unique transcripts, signal is not as strong, does this mean that these clusters have highly expressed genes, but there are fewer of them?

#### Tree map cluster 17

```{r}
glimpse(TPM_wcluster)
```

Composition of cluster 17

```{r, fig.width=15, fig.height=2}
TPM_wcluster %>% 
  filter(CLUSTER == "17") %>% 
  group_by(SUPERGROUP, SUPERGROUP_ORDER, SAMPLE) %>% 
  summarise(SUM_TPM = sum(TPM)) %>% 
  ggplot(aes(area = SUM_TPM, fill = SUPERGROUP_ORDER, subgroup = SUPERGROUP)) +
  geom_treemap(color = "white") +
    geom_treemap_subgroup_border(colour = "white", size = 2) +
  facet_grid(cols = vars(SAMPLE)) +
  theme_linedraw() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, face = "bold", size = 12),
        strip.background = element_blank(), strip.text = element_text(color = "black", face = "bold", vjust = 0.5, hjust = 0, size = 12),
        legend.position = "right",
        legend.title = element_blank(),
        legend.text = element_text(color = "black", size = 12),
        panel.border = element_blank(),
        axis.title = element_text(face = "bold", size = 12)) +
  scale_y_continuous(expand = c(0,0)) +
  scale_fill_manual(values = tax_order_color) +
  labs(x = "", y = "Sequence proportion by Supergroup")
```

```{r}
TPM_wcluster %>% 
  filter(CLUSTER == "17" & SAMPLE == "Catalina" & SUPERGROUP_ORDER == "Chlorophyte") %>% 
  group_by(SUPERGROUP_ORDER, Class, SAMPLE) %>% 
  summarise(SUM_TPM = sum(TPM)) %>% 
  ggplot(aes(area = SUM_TPM, fill = Class, subgroup = Class)) +
  geom_treemap(color = "white") +
    geom_treemap_subgroup_border(colour = "white", size = 2) +
  facet_grid(cols = vars(SAMPLE)) +
  theme_linedraw() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, face = "bold", size = 12),
        strip.background = element_blank(), strip.text = element_text(color = "black", face = "bold", vjust = 0.5, hjust = 0, size = 12),
        legend.position = "right",
        legend.title = element_blank(),
        legend.text = element_text(color = "black", size = 12),
        panel.border = element_blank(),
        axis.title = element_text(face = "bold", size = 12)) +
  scale_y_continuous(expand = c(0,0)) +
  # scale_fill_manual(values = tax_order_color) +
  labs(x = "", y = "Sequence proportion by Supergroup")
```

When we go further with taxa (within Mamiellophyceae), Bathycoccus is the main chlorophyte. Otherwise, we get unclassified.

Highly transcribed genes within Cluster 17

```{r}
# View(TPM_wcluster %>% 
#   filter(CLUSTER == "17" & SAMPLE == "Catalina") %>% 
#   group_by(SUPERGROUP_ORDER, PFAMs) %>% 
#   summarise(SUM_TPM = sum(TPM)) %>% 
#   arrange(desc(SUM_TPM)))
```

#### Tree map cluster 19

Composition of cluster 19

```{r, fig.width=15, fig.height=2}
TPM_wcluster %>% 
  filter(CLUSTER == "19") %>% 
  group_by(SUPERGROUP, SUPERGROUP_ORDER, SAMPLE) %>% 
  summarise(SUM_TPM = sum(TPM)) %>% 
  ggplot(aes(area = SUM_TPM, fill = SUPERGROUP_ORDER, subgroup = SUPERGROUP)) +
  geom_treemap(color = "white") +
    geom_treemap_subgroup_border(colour = "white", size = 2) +
  facet_grid(cols = vars(SAMPLE)) +
  theme_linedraw() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, face = "bold", size = 12),
        strip.background = element_blank(), strip.text = element_text(color = "black", face = "bold", vjust = 0.5, hjust = 0, size = 12),
        legend.position = "right",
        legend.title = element_blank(),
        legend.text = element_text(color = "black", size = 12),
        panel.border = element_blank(),
        axis.title = element_text(face = "bold", size = 12)) +
  scale_y_continuous(expand = c(0,0)) +
  scale_fill_manual(values = tax_order_color) +
  labs(x = "", y = "Sequence proportion by Supergroup")
```

```{r, fig.width=10, fig.height=5}
# unique(TPM_wcluster$SUPERGROUP_ORDER)
TPM_wcluster %>% 
  filter(CLUSTER == "19" & SAMPLE == "PortofLA" & SUPERGROUP_ORDER == "Stramenopiles-Diatom") %>% 
  group_by(SUPERGROUP_ORDER, Order, SAMPLE) %>% 
  summarise(SUM_TPM = sum(TPM)) %>% 
  ggplot(aes(area = SUM_TPM, fill = Order, subgroup = Order)) +
  geom_treemap(color = "white") +
    geom_treemap_subgroup_border(colour = "white", size = 2) +
  # facet_grid(cols = vars(Order)) +
  theme_linedraw() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, face = "bold", size = 12),
        strip.background = element_blank(), strip.text = element_text(color = "black", face = "bold", vjust = 0.5, hjust = 0, size = 12),
        legend.position = "right",
        legend.title = element_blank(),
        legend.text = element_text(color = "black", size = 12),
        panel.border = element_blank(),
        axis.title = element_text(face = "bold", size = 12)) +
  scale_y_continuous(expand = c(0,0)) +
  # scale_fill_manual(values = tax_order_color) +
  labs(x = "", y = "Sequence proportion by Supergroup")
```

Highly transcribed genes within Cluster 19

```{r}
# View(TPM_wcluster %>%
#   filter(CLUSTER == "19" & SAMPLE == "PortofLA") %>%
#   group_by(SUPERGROUP_ORDER, PFAMs) %>%
#   summarise(SUM_TPM = sum(TPM)) %>%
#   arrange(desc(SUM_TPM)))
```

## Targeted

First we will focus on transcripts among phytoplankton that were annotated under the N and P metabolism category.

`counts_curated_annot` originated from `input-data/Avg_scaled_tpm_curated_08252023.RData`, and then annealing output with the KEGG database information that we have curated ahead of time.

```{r}
unique(counts_curated_annot$Category01)
```

### Format to focus on N & P metabolism

Planning to subset genes from the N and P metabolism category. Modify input table for downstream visualization. Also make sure to

```{r}
counts_curated_annot_aloha <- counts_curated_annot
# glimpse(counts_curated_annot_aloha)
```

```{r}
n_p_TPM_0 <- counts_curated_annot_aloha %>% 
  mutate(Category01 = str_replace_na(Category01, "Other")) %>%
  filter(Category01 == "N and P metabolism" & Domain == "Eukaryota") %>% 
  select(starts_with("mean."), Supergroup:Species, Category02, GeneID, Gene_identification, PFAMs) %>% 
  pivot_longer(cols = starts_with("mean."), names_to = "SAMPLE_tmp", values_to = "TPM", values_transform =) %>% 
  mutate(SAMPLE = str_remove(SAMPLE_tmp, "mean."))

# head(n_p_TPM_0)
min_TPM <- min((n_p_TPM_0 %>% filter(TPM>0))$TPM)
# log(min_TPM)

n_p_TPM_1 <- n_p_TPM_0 %>%
  mutate(TAXA = case_when(
    Phylum == "Dinoflagellata" ~ "Dinoflagellate",
    Phylum == "Ciliophora" ~ "Ciliate",
    Phylum == "Haptophyta" ~ "Haptophyte",
    Phylum == "Chlorophyta" ~ "Chlorophyte",
    Class == "Bacillariophyta" ~ "Diatom",
    Supergroup == "Rhizaria" ~ "Rhizaria",
    TRUE ~ "Else")) %>% 
  select(TAXA, SAMPLE, Category02, GeneID, Gene_identification, PFAMs, TPM) %>% 
  filter(TAXA != "Else") %>% 
  mutate(TPM_mod = case_when(
    TPM == 0 ~ min_TPM,
    TRUE ~ TPM)) %>% 
  mutate(SAMPLE_MOD = str_replace(SAMPLE, "July_", "ALOHA_"),
         SAMPLE_MOD = str_replace(SAMPLE_MOD, "March_", "ALOHA_")) %>% 
  group_by(SAMPLE_MOD, TAXA, Category02, GeneID, Gene_identification, PFAMs) %>% 
    summarise(TPM_mod_avg = mean(TPM_mod))

# Changed 0 for TPM to be the minimum

# length(unique(n_p_TPM_1$GeneID)) # 24 total genes
unique(n_p_TPM_1$SAMPLE_MOD)

n_p_TPM_meanSAMPLE <- n_p_TPM_1 %>% 
  group_by(TAXA, Category02, GeneID, Gene_identification, PFAMs) %>% 
  summarise(MEAN_TPM = mean(TPM_mod_avg)) %>% 
  add_column(SAMPLE_MOD = "Mean")

n_p_TPM_meanGeneID <- n_p_TPM_1 %>% 
  group_by(TAXA, Category02, SAMPLE_MOD, Gene_identification, PFAMs) %>% 
  summarise(MEAN_TPM = mean(TPM_mod_avg)) %>% 
  add_column(GeneID = "Mean")

n_p_TPM_df <- n_p_TPM_1 %>% 
  group_by(TAXA, Category02, SAMPLE_MOD, GeneID, Gene_identification, PFAMs) %>% 
  summarise(MEAN_TPM = mean(TPM_mod_avg)) %>% 
  rbind(n_p_TPM_meanSAMPLE) %>% 
  rbind(n_p_TPM_meanGeneID) %>% 
  mutate(FACET_SAMPLE = case_when(
    SAMPLE_MOD == "Mean" ~ "AVG",
    TRUE ~ "SAMPLE"
  ),
  FACET_GENE = case_when(
    GeneID == "Mean" ~ "AVG",
    TRUE ~ "GENE"
  )) 
```

Factor sample IDs and color for heat maps

```{r}
glimpse(n_p_TPM_df)
unique(n_p_TPM_df$TAXA)
length(unique(n_p_TPM_df$SAMPLE_MOD))
unique(n_p_TPM_df$SAMPLE_MOD)
sample_order_mean <- c("ALOHA_5m", "ALOHA_DCM", "ALOHA_150m", "ALOHA_1000m", "Catalina", "PortofLA", "SPOT_surface", "SPOT_150m", "SPOT_890m", "Mean")
length(sample_order_mean)
sample_order_mean_LABEL <- c("ALOHA surface", "ALOHA DCM", "ALOHA 150m", "ALOHA 1000m", "Catalina", "Port of LA", "SPOT surface", "SPOT 150m", "SPOT 890m", "Mean")

yl_red <- c("#ffffcc", "#fed976", "#feb24c", "#fc4e2a", "#e31a1c", "#b10026")
reds <- c("#f7f7f7","#fee5d9", "#fcae91", "#fb6a4a", "#a50f15")
n_p_TPM_df$SAMPLE_ORDER <- factor(n_p_TPM_df$SAMPLE_MOD, levels = rev(sample_order_mean), labels = rev(sample_order_mean_LABEL))
n_p_TPM_df$GeneID_ORDER <- factor(n_p_TPM_df$GeneID, levels = geneid_order_nuts)
phyto <- c("Diatom", "Chlorophyte", "Haptophyte", "Dinoflagellate")
```

```{r, fig.height=10, fig.width=8}
n_p_TPM_df %>%
  filter(TAXA %in% phyto) %>% 
   ggplot(aes(x = SAMPLE_ORDER, y = GeneID_ORDER, fill = log(MEAN_TPM))) +
    geom_tile(stat = "identity", color = "black") +
  scale_fill_stepsn(
      # limits = c(-5,5),
      # breaks = c(0.0, 3.5, 7.0, 10.5),
      show.limits = TRUE,
      # colors = reds) +
      colors = yl_red) +
    coord_flip() +
    theme_classic() +
    facet_grid(cols = vars(FACET_GENE), rows = vars(TAXA, rev(FACET_SAMPLE)), 
               space = "free", scales = "free", switch = "y") +
    # scale_y_discrete(position = "right") +
    scale_x_discrete(position = "top") +
    labs(x = "", y = "") +
    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, color = "black"),
          axis.text.y = element_text(color = "black", vjust = 0.5, hjust = 1),
          strip.background = element_blank(),
          axis.line = element_blank(),
          panel.border = element_blank(),
          axis.ticks = element_blank(),
          panel.grid = element_blank(),
          strip.placement = "outside",
          strip.text.x = element_blank())
```

Archive below code from individual taxa?

```{r}
# n_p_TPM_df %>% 
#   filter(TAXA == "Chlorophyte") %>% 
#    ggplot(aes(x = SAMPLE_ORDER, y = GeneID, fill = log(MEAN_TPM))) +
#     geom_tile(stat = "identity", color = "black") +
#   scale_fill_stepsn(
#       # limits = c(-5,5),
#       # breaks = c(0.0, 3.5, 7.0, 10.5),
#       show.limits = TRUE,
#       colors = reds) +
#     coord_flip() +
#     theme_classic() +
#     facet_grid(cols = vars(FACET_GENE), rows = vars(rev(FACET_SAMPLE)), space = "free", scales = "free") +
#     # scale_y_discrete(position = "right") +
#     scale_x_discrete(position = "top") +
#     labs(x = "", y = "") +
#     theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, color = "black"),
#           axis.text.y = element_text(color = "black", vjust = 0.5, hjust = 1),
#           strip.background = element_blank(),
#           axis.line = element_blank(),
#           panel.border = element_blank(),
#           axis.ticks = element_blank(),
#           panel.grid = element_blank(),
#           strip.text = element_blank())
```

```{r}
# n_p_TPM_df %>% 
#   filter(TAXA == "Haptophyte") %>% 
#    ggplot(aes(x = SAMPLE_ORDER, y = GeneID, fill = log(MEAN_TPM))) +
#     geom_tile(stat = "identity", color = "black") +
#   scale_fill_stepsn(
#       # limits = c(-5,5),
#       # breaks = c(0.0, 3.5, 7.0, 10.5),
#       show.limits = TRUE,
#       colors = reds) +
#     coord_flip() +
#     theme_classic() +
#     facet_grid(cols = vars(FACET_GENE), rows = vars(rev(FACET_SAMPLE)), space = "free", scales = "free") +
#     # scale_y_discrete(position = "right") +
#     scale_x_discrete(position = "top") +
#     labs(x = "", y = "") +
#     theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, color = "black"),
#           axis.text.y = element_text(color = "black", vjust = 0.5, hjust = 1),
#           strip.background = element_blank(),
#           axis.line = element_blank(),
#           panel.border = element_blank(),
#           axis.ticks = element_blank(),
#           panel.grid = element_blank(),
#           strip.text = element_blank())
```

```{r}
# n_p_TPM_df %>% 
#   filter(TAXA == "Dinoflagellate") %>% 
#    ggplot(aes(x = SAMPLE_ORDER, y = GeneID, fill = log(MEAN_TPM))) +
#     geom_tile(stat = "identity", color = "black") +
#   scale_fill_stepsn(
#       # limits = c(-5,5),
#       # breaks = c(0.0, 3.5, 7.0, 10.5),
#       show.limits = TRUE,
#       colors = reds) +
#     coord_flip() +
#     theme_classic() +
#     facet_grid(cols = vars(FACET_GENE), rows = vars(rev(FACET_SAMPLE)), space = "free", scales = "free") +
#     # scale_y_discrete(position = "right") +
#     scale_x_discrete(position = "top") +
#     labs(x = "", y = "") +
#     theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, color = "black"),
#           axis.text.y = element_text(color = "black", vjust = 0.5, hjust = 1),
#           strip.background = element_blank(),
#           axis.line = element_blank(),
#           panel.border = element_blank(),
#           axis.ticks = element_blank(),
#           panel.grid = element_blank(),
#           strip.text = element_blank())
```

```{r}
# n_p_TPM_df %>% 
#   filter(TAXA == "Diatom") %>% 
#    ggplot(aes(x = SAMPLE_ORDER, y = GeneID, fill = log(MEAN_TPM))) +
#     geom_tile(stat = "identity", color = "black") +
#   scale_fill_stepsn(
#       # limits = c(-5,5),
#       # breaks = c(0.0, 3.5, 7.0, 10.5),
#       show.limits = TRUE,
#       colors = reds) +
#     coord_flip() +
#     theme_classic() +
#     facet_grid(cols = vars(FACET_GENE), rows = vars(rev(FACET_SAMPLE)), space = "free", scales = "free") +
#     # scale_y_discrete(position = "right") +
#     scale_x_discrete(position = "top") +
#     labs(x = "", y = "") +
#     theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, color = "black"),
#           axis.text.y = element_text(color = "black", vjust = 0.5, hjust = 1),
#           strip.background = element_blank(),
#           axis.line = element_blank(),
#           panel.border = element_blank(),
#           axis.ticks = element_blank(),
#           panel.grid = element_blank(),
#           strip.text = element_blank())
```

# Question 2

> Do we see a similar euphotic vs. sub-euphotic shift in the metabolic potential of taxa observed at coastal California and the NPSG?

## Untargeted

To approach question 2 with an untargetted approach, used `run_bydepth_deseq_taxa.R` script to generate R objects of each comparison.

To compare euphotic versus subeuphotic, decided to with all samples, CA only samples and then only NPSG samples. See code: `ca-light.R`, `all-light.R`, and `npsg-light.R`.

Run this script, which selects the differentially expressed genes and includes the functional annotation information: `euphotic_v_subeuphotic.R`.

```{r, echo=TRUE, eval=FALSE}
# Import KEGG information
taxfxn <- read.csv("TaxonomicAndFunctionalAnnotations.csv")
head(taxfxn)

# Sequence IDs are all unique, because they correspond to taxa. Therefore, we need to include gene-level IDs so we can compare what is DE across the euphotic vs. subeuphotic regions.
CA_only <- read.csv("bytaxa_CA-LIGHT_DE.csv")
NPSG_only <- read.csv("bytaxa_NPSG-LIGHT_DE.csv")
all_only <- read.csv("bytaxa_ALL-LIGHT_DE.csv")

#
head(CA_only)
# For this there are three tables. 
CA_tax_bydepth <- CA_only %>% 
  select(SequenceID, log2FoldChange, pvalue, REGULATION, TAXA) %>%
  left_join(taxfxn)

# head(CA_tax_bydepth)

NPSG_tax_bydepth <- NPSG_only %>% 
  select(SequenceID, log2FoldChange, pvalue, REGULATION, TAXA) %>%
  left_join(taxfxn)

ALL_tax_bydepth <- all_only %>% 
  select(SequenceID, log2FoldChange, pvalue, REGULATION, TAXA) %>%
  left_join(taxfxn)

##

alltax_compareDE <- ALL_tax_bydepth %>% 
  unite(GENEID_ko_pfam, PFAMs, KEGG_ko, sep = ";") %>% 
  select(REGULATION, TAXA, log2FoldChange, GENEID_ko_pfam) %>% 
  group_by(REGULATION, GENEID_ko_pfam, TAXA) %>%
  summarise(n = dplyr::n(), .groups = "drop") %>%
  filter(n > 1L) %>% 
  pivot_wider(names_from = TAXA, values_from = n)

NPSGtax_compareDE <- NPSG_tax_bydepth %>% 
  unite(GENEID_ko_pfam, PFAMs, KEGG_ko, sep = ";") %>% 
  select(REGULATION, TAXA, log2FoldChange, GENEID_ko_pfam) %>% 
  group_by(REGULATION, GENEID_ko_pfam, TAXA) %>%
  summarise(n = dplyr::n(), .groups = "drop") %>%
  filter(n > 1L) %>% 
  pivot_wider(names_from = TAXA, values_from = n)

CAtax_compareDE <- CA_tax_bydepth %>% 
  unite(GENEID_ko_pfam, PFAMs, KEGG_ko, sep = ";") %>% 
  select(REGULATION, TAXA, log2FoldChange, GENEID_ko_pfam) %>% 
  group_by(REGULATION, GENEID_ko_pfam, TAXA) %>%
  summarise(n = dplyr::n(), .groups = "drop") %>%
  filter(n > 1L) %>% 
  pivot_wider(names_from = TAXA, values_from = n)

save(alltax_compareDE, CAtax_compareDE, NPSGtax_compareDE, ALL_tax_bydepth, NPSG_tax_bydepth, CA_tax_bydepth, file = "taxa-untarget_bydepth-q2.RData")
```

Locally, now can work with results.

#### Local -untargeted

```{r}
load("input-data/taxa-untarget_bydepth-q2.RData", verbose = TRUE)
```

### Shared vs unique

```{r message=FALSE, fig.height=13, fig.width=6}
(ALL_tax_bydepth %>% 
  unite(GENEID_ko_pfam, PFAMs, KEGG_ko, sep = ";") %>% 
  select(REGULATION, TAXA, log2FoldChange, GENEID_ko_pfam) %>% 
  group_by(REGULATION, GENEID_ko_pfam, TAXA) %>%
  summarise(n = dplyr::n(), .groups = "drop") %>%
  filter(n > 1L) %>% 
  group_by(GENEID_ko_pfam, REGULATION) %>% 
    summarise(TAXA = list(TAXA)) %>% 
  ggplot(aes(x = TAXA)) +
    geom_bar(aes(fill = REGULATION)) +
    scale_fill_manual(values = c("#74add1", "#fdae61")) +
    scale_x_upset(order_by = "freq") +
  theme_classic() +
    theme(axis.text.x = element_text(vjust = 1, hjust = 1)) +
    labs(x = "", y = "TPM Relative Abundance",
         title = "All euphotic vs subeuphotic comparison")) +
  (NPSG_tax_bydepth %>% 
  unite(GENEID_ko_pfam, PFAMs, KEGG_ko, sep = ";") %>% 
  select(REGULATION, TAXA, log2FoldChange, GENEID_ko_pfam) %>% 
  group_by(REGULATION, GENEID_ko_pfam, TAXA) %>%
  summarise(n = dplyr::n(), .groups = "drop") %>%
  filter(n > 1L) %>% 
  group_by(GENEID_ko_pfam, REGULATION) %>% 
    summarise(TAXA = list(TAXA)) %>% 
  ggplot(aes(x = TAXA)) +
    geom_bar(aes(fill = REGULATION)) +
    scale_fill_manual(values = c("#74add1", "#fdae61")) +
    scale_x_upset(order_by = "freq") +
  theme_classic() +
    theme(axis.text.x = element_text(vjust = 1, hjust = 1)) +
    labs(x = "", y = "TPM Relative Abundance",
         title = "NPSG comparison")) +
  (CA_tax_bydepth %>% 
  unite(GENEID_ko_pfam, PFAMs, KEGG_ko, sep = ";") %>% 
  select(REGULATION, TAXA, log2FoldChange, GENEID_ko_pfam) %>% 
  group_by(REGULATION, GENEID_ko_pfam, TAXA) %>%
  summarise(n = dplyr::n(), .groups = "drop") %>%
  filter(n > 1L) %>% 
  group_by(GENEID_ko_pfam, REGULATION) %>% 
    summarise(TAXA = list(TAXA)) %>% 
  ggplot(aes(x = TAXA)) +
    geom_bar(aes(fill = REGULATION)) +
    scale_fill_manual(values = c("#74add1", "#fdae61")) +
    scale_x_upset(order_by = "freq") +
  theme_classic() +
    theme(axis.text.x = element_text(vjust = 1, hjust = 1)) +
    labs(x = "", y = "TPM Relative Abundance",
         title = "Coastal California comparison")) + patchwork::plot_layout(ncol = 1)
```

#### What transcripts are shared across all taxa vs. unique?

```{r}
tax_indiv <- alltax_compareDE %>%
  mutate(CATEGORY = case_when(
                     (is.na(Ciliate) & is.na(Rhizaria) & is.na(Haptophyte)) ~ "Dinoflagellate only",
                   (is.na(Dinoflagellate) & is.na(Rhizaria) & is.na(Haptophyte)) ~ "Ciliate only",
                   (is.na(Dinoflagellate) & is.na(Ciliate) & is.na(Rhizaria)) ~ "Haptophyte only",
                   (is.na(Dinoflagellate) & is.na(Ciliate) & is.na(Haptophyte)) ~ "Rhizaria only",
                   TRUE ~ NA)) %>% 
  filter(!is.na(CATEGORY))

shared_depth_spec <- alltax_compareDE %>% 
  drop_na() %>% 
  add_column(CATEGORY = "Shared across all taxa") %>% 
  rbind(tax_indiv) %>% 
  separate(GENEID_ko_pfam, into = c("PFAMs", "KEGG_ko"), sep = ";") %>% 
  mutate(KEGG = str_remove(KEGG_ko, "ko:")) %>%
  left_join(key_geneid) %>% 
  add_column(COUNT = 1)
```

```{r}
unique(shared_depth_spec$KeggOrthology_A)
unique(shared_depth_spec$Category01)

paths_ORDER <- c("Photosynthesis", "Energy Acquisition", "Carbon fixation", "Nutrient processing", "Gluconeogenesis-glycolysis", "N and P metabolism", "Glyoxylate cycle", "Phagotrophy", 
                 "Environmental Information Processing", "Cellular Processes",
                 "Genetic Information Processing", "Metabolism",
                 "Other")

paths_COLOR <-c ("#f7fcb9", "#fdae6b", "#fc9272", "#7fcdbb", "#d9f0a3", "#78c679", "#bfd3e6", "#fde0dd",
                 "#fd8d3c", "#225ea8", 
                 "#cb181d", "#41ab5d",
                 "#969696")
```

```{r fig.height=9, fig.width=5}
shared_depth_spec %>% 
  mutate(Category01 = str_replace_na(Category01, "Other")) %>%
  group_by(CATEGORY, REGULATION, Category01) %>% 
    summarise(Category01_SUM = sum(COUNT)) %>% 
  add_column(CATEGORY_TYPE = "KEGG_cat01") %>% 
  select(CATEGORY, REGULATION, CATEGORY_TYPE, TYPE_NAME = Category01, SUM = Category01_SUM) %>%
  #
  rbind(
    #
    shared_depth_spec %>% 
  mutate(KeggOrthology_A = str_replace_na(KeggOrthology_A, "Other")) %>%
  group_by(CATEGORY, REGULATION, KeggOrthology_A) %>% 
    summarise(KeggOrthology_A_SUM = sum(COUNT)) %>% 
  add_column(CATEGORY_TYPE = "KEGG_ORTHO_A") %>% 
  select(CATEGORY, REGULATION, CATEGORY_TYPE, TYPE_NAME = KeggOrthology_A, SUM = KeggOrthology_A_SUM)
  #
  ) %>% 
  mutate(CATEGORY_TYPE_ORDER = factor(TYPE_NAME, levels = paths_ORDER)) %>% 
  ggplot(aes(x = CATEGORY_TYPE, fill = CATEGORY_TYPE_ORDER, y = SUM)) +
    geom_bar(stat = "identity", position = "fill", color = "black", stroke = 0.4) + 
  facet_grid(cols = vars(REGULATION), rows = vars(CATEGORY)) +
  theme_classic() +
  coord_flip() +
  theme(axis.text.x = element_text(angle = 0, h = 1, vjust = 1),
        strip.text = element_text(angle = 0),
        legend.position = "bottom") +
  scale_fill_manual(values = paths_COLOR)
```

```{r}
glimpse(shared_depth_spec)
# colnames(shared_euphotic)
# unique(shared_euphotic$CATEGORY)
# shared_depth_spec %>% 
#   group_by(CATEGORY, KeggOrthology_A) %>% 
#   summarize(COUNT_TRANSCRIPTS = sum(COUNT)) %>% 
#   # filter(Category01 == "Phagotrophy") %>%
#   ggplot(aes(x = KeggOrthology_A, y = COUNT_TRANSCRIPTS, fill = CATEGORY)) +
#     geom_bar(stat = "identity") +
#   theme_classic() +
#   theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))

write.csv(shared_depth_spec,"output-data/shared_v_unique-depth_q2.csv")
```

Look at list of genes that are shared across all taxa.

```{r}
# View(shared_depth_spec %>% 
#   filter(CATEGORY == "Shared across all taxa") %>% 
#     na.omit() %>% 
#     select(PFAMs, KEGG_ko, starts_with("Kegg"), starts_with("Category"), GeneID) %>% 
#     distinct())
```

## Targeted

Shifting gears to focus on phagotrophy-related transcripts. There are a lot of them, and there is another category that separates different phagotrophy pathways.

`counts_curated_annot` originated from `input-data/Avg_scaled_tpm_curated_08252023.RData`, and then annealing output with the KEGG database information that we have curated ahead of time.

```{r}
# unique(counts_curated_annot$Category01)
# unique(counts_curated_annot$Supergroup)
glimpse(counts_curated_annot)
```

```{r}
# pre-format dataframe; average across July and March at ALOHA
depth_TPM_0 <- counts_curated_annot %>% 
  mutate(Category01 = str_replace_na(Category01, "Other")) %>%
  filter(Domain == "Eukaryota") %>% 
  filter(Category01 != "Entner-Doudoroff pathway") %>% 
  select(starts_with("mean."), Supergroup:Species, Category01, Category02, GeneID, Gene_identification, PFAMs) %>% 
  pivot_longer(cols = starts_with("mean."), names_to = "SAMPLE_tmp", values_to = "TPM_tmp", values_transform =) %>% 
  mutate(SAMPLE = str_remove(SAMPLE_tmp, "mean.")) %>% 
  mutate(SAMPLE = str_replace(SAMPLE, "July_", "ALOHA_"),
         SAMPLE = str_replace(SAMPLE, "March_", "ALOHA_")) %>% 
  # Summarize across July and March samples
  group_by(Supergroup, Phylum, Class, Order, Family, Genus, Species, Category01, Category02, GeneID, Gene_identification, PFAMs, SAMPLE) %>% 
    summarize(TPM = mean(TPM_tmp))

# head(depth_TPM_0)
## Get min value (instead of a zero)
min_TPM <- min((depth_TPM_0 %>% filter(TPM>0))$TPM)
# log(min_TPM); min_TPM

# Modify taxa and min TPM value.
taxa_depth <- c("Ciliate", "Dinoflagellate", "Haptophyte", "Rhizaria")

depth_TPM_1 <- depth_TPM_0 %>%
  mutate(TAXA = case_when(
    Phylum == "Dinoflagellata" ~ "Dinoflagellate",
    Phylum == "Ciliophora" ~ "Ciliate",
    Phylum == "Haptophyta" ~ "Haptophyte",
    Phylum == "Chlorophyta" ~ "Chlorophyte",
    Class == "Bacillariophyta" ~ "Diatom",
    Supergroup == "Rhizaria" ~ "Rhizaria",
    TRUE ~ "Else")) %>% 
  select(TAXA, SAMPLE, Category01, Category02, GeneID, Gene_identification, PFAMs, TPM) %>% 
  filter(TAXA != "Else") %>% 
  filter(TAXA %in% taxa_depth) %>% 
  mutate(TPM_mod = case_when(
    TPM == 0 ~ min_TPM,
    TRUE ~ TPM)) %>% 
  group_by(SAMPLE, TAXA, Supergroup, Phylum, Class, Order, Family, Genus, Species, Category01, Category02, GeneID, Gene_identification, PFAMs) %>% 
    summarise(TPM_mod_avg = mean(TPM_mod))
```

```{r, fig.height=6, fig.width=6}
depth_TPM_meanSAMPLE <- depth_TPM_1 %>% 
  group_by(TAXA, Category01) %>% 
  summarise(MEAN_TPM = mean(TPM_mod_avg)) %>% 
  add_column(SAMPLE = "Mean")

depth_TPM_meanCAT <- depth_TPM_1 %>% 
  group_by(TAXA, SAMPLE) %>% 
  summarise(MEAN_TPM = mean(TPM_mod_avg)) %>% 
  add_column(Category01 = "Mean")


yl_red <- c("#ffffcc", "#fed976", "#feb24c", "#fc4e2a", "#e31a1c", "#b10026")

# glimpse(depth_TPM_meanSAMPLE)
depth_TPM_meanSAMPLE %>% 
  ggplot(aes(x = Category01, y = TAXA, fill = MEAN_TPM)) +
  geom_tile(stat = "identity", color = "black") +
  scale_fill_stepsn(
      # limits = c(-5,5),
      # breaks = c(0.0, 3.5, 7.0, 10.5),
      show.limits = TRUE,
      colors = yl_red) +
    coord_flip() +
    theme_classic() +
    labs(x = "", y = "") +
    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, color = "black"),
          axis.text.y = element_text(color = "black", vjust = 0.5, hjust = 1),
          strip.background = element_blank(),
          axis.line = element_blank(),
          panel.border = element_blank(),
          axis.ticks = element_blank(),
          panel.grid = element_blank(),
          strip.placement = "outside",
          strip.text.x = element_blank())

```

Heat map for mean across categories:

```{r, fig.height=6, fig.width=6}
# unique(depth_TPM_meanCAT$SAMPLE)

# glimpse(depth_TPM_meanCAT)
depth_TPM_meanCAT %>% 
  mutate(SAMPLE_ORDER_LIGHT = factor(SAMPLE, levels = c("ALOHA_1000m", "SPOT_890m", "SPOT_150m", "ALOHA_150m", "ALOHA_DCM", "ALOHA_5m", "Catalina", "PortofLA", "SPOT_surface"))) %>% 
  ggplot(aes(x = SAMPLE_ORDER_LIGHT, y = TAXA, fill = MEAN_TPM)) +
  geom_tile(stat = "identity", color = "black") +
  scale_fill_stepsn(
      # limits = c(-5,5),
      # breaks = c(0.0, 3.5, 7.0, 10.5),
      show.limits = TRUE,
      colors = yl_red) +
    coord_flip() +
    theme_classic() +
    labs(x = "", y = "") +
    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, color = "black"),
          axis.text.y = element_text(color = "black", vjust = 0.5, hjust = 1),
          strip.background = element_blank(),
          axis.line = element_blank(),
          panel.border = element_blank(),
          axis.ticks = element_blank(),
          panel.grid = element_blank(),
          strip.placement = "outside",
          strip.text.x = element_blank())
```

```{r}
# Get heatmap averages by SAMPLE, then by CATEGORY
dark <- c("ALOHA_1000m", "SPOT_150m", "SPOT_890m")

depth_TPM_pt_plot <- depth_TPM_1 %>% 
  # Sum TPM by species, euphotic region, and gene ID
  # unite(SPP, Class, Order, sep = "-") %>% 
  mutate(DEPTH_BIN = case_when(
    SAMPLE %in% dark ~ "Subeuphotic",
    !(SAMPLE %in% dark) ~ "Euphotic"
  )) %>%
  # mutate(
  #   TPM_point_bin = case_when(
  #   DEPTH_BIN == "Euphotic" ~ TPM_mod_avg,
  #   DEPTH_BIN != "Euphotic" ~ (TPM_mod_avg*(-1))
  # )) %>% 
  # group_by(TAXA, Category01) %>% 
    # summarise(value = sum(TPM_mod_avg)) %>% 
    # mutate(z_score_TPM = scale(sum_tpm_bin))
    # mutate(z_score = as.numeric((TPM_point_bin - mean(TPM_point_bin)) / sd(TPM_point_bin)))
  ### Group by and then sum where negatives will be subeuphotic
  group_by(TAXA, Category01, DEPTH_BIN, GeneID, .groups = "rowwise") %>%
    summarise(sum_tpm_bin = sum(TPM_mod_avg))
# 
# glimpse(depth_TPM_pt_plot)
# range(depth_TPM_pt_plot$sum_tpm_bin)
```

Generate plots to combine

```{r, fig.height=7, fig.width=25}
library(ggbeeswarm); library(see)

unique(depth_TPM_pt_plot$TAXA)
taxa_depth <- c("Ciliate", "Dinoflagellate", "Haptophyte", "Rhizaria")

(depth_TPM_pt_plot %>% 
  filter(TAXA %in% taxa_depth) %>% 
  filter(DEPTH_BIN == "Euphotic") %>% 
  ggplot(aes(x = Category01, y = sum_tpm_bin)) +
     geom_beeswarm(method = "swarm", 
                 priority = "density",
                 size = 0.3, 
                 corral.width = 1,
                 side = -1L) +
    geom_violinhalf() +
  scale_y_log10() +
  facet_grid(cols = vars(TAXA), rows = vars(DEPTH_BIN)) +
  labs(y = "TPM (log scale)", x = "") +
  theme_classic() +
    theme(axis.text.x = element_blank(),
          axis.text.y = element_text(color = "black", vjust = 0.5, hjust = 1),
          strip.background = element_blank(),
          # axis.line = element_blank(),
          panel.border = element_blank(),
          axis.ticks = element_blank(),
          # panel.grid = element_blank(),
          strip.placement = "outside",
          strip.text.x = element_text(color = "black"))) +
(depth_TPM_pt_plot %>% 
  filter(TAXA %in% taxa_depth) %>% 
  filter(DEPTH_BIN != "Euphotic") %>% 
  ggplot(aes(x = Category01, y = sum_tpm_bin)) +
     geom_beeswarm(method = "swarm", 
                 priority = "density",
                 size = 0.3, 
                 corral.width = 1,
                 side = -1L) +
   geom_violinhalf() +
  scale_y_continuous(trans = c("log10", "reverse")) +
   # scale_y_reverse() +
  facet_grid(cols = vars(TAXA), rows = vars(DEPTH_BIN)) +
  labs(y = "TPM (log scale)", x = "") +
  theme_classic() +
    theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1, color = "black"),
          axis.text.y = element_text(color = "black", vjust = 0.5, hjust = 1),
          strip.background = element_blank(),
          # axis.line = element_blank(),
          panel.border = element_blank(),
          axis.ticks = element_blank(),
          panel.grid = element_blank(),
          strip.placement = "outside",
          strip.text.x = element_blank())) + patchwork::plot_layout(ncol = 1)
```

#### Heterotrophy only

> Subset to genes that were present in at least 2 samples for the taxonomic group? - Normalize to individual taxa.

First, isolate a list of KEGG IDs that are found in at least 2 samples.

```{r}
# head(counts_curated_annot)
tmp <- counts_curated_annot %>% 
  filter(Category01 == "Phagotrophy" & Domain == "Eukaryota") %>% 
  select(starts_with("mean."), KEGG)
# head(tmp)
# dim(tmp)
tmp2 <- tmp[apply(tmp != 0, 1, sum) >=2,]
dim(tmp)[1] - dim(tmp2)[1]

kegg_keep_hets <- as.character(unique(tmp2$KEGG))

```

Removed about 18k transcripts, keeping 98% of the data.

```{r}
het_TPM_scale <- counts_curated_annot %>%
  # Filter by category and domain
  filter(Category01 == "Phagotrophy" & Domain == "Eukaryota") %>%
  # Filter by frequency in samples
  filter(KEGG %in% kegg_keep_hets) %>% 
  select(starts_with("mean."), Supergroup:Species, Category02, GeneID, KEGG, Gene_identification, PFAMs) %>%
  mutate(TAXA = case_when(
    Phylum == "Dinoflagellata" ~ "Dinoflagellate",
    Phylum == "Ciliophora" ~ "Ciliate",
    Phylum == "Haptophyta" ~ "Haptophyte",
    Phylum == "Chlorophyta" ~ "Chlorophyte",
    Class == "Bacillariophyta" ~ "Diatom",
    Supergroup == "Rhizaria" ~ "Rhizaria",
    TRUE ~ "Else")) %>%
  filter(TAXA != "Else") %>% 
  pivot_longer(cols = starts_with("mean."), names_to = "SAMPLE_tmp", values_to = "TPM") %>% 
  mutate(LOG_TPM = log(TPM))  %>% 
  mutate(SAMPLE = str_remove(SAMPLE_tmp, "mean.")) %>% 
  mutate(SAMPLE = str_replace(SAMPLE, "July_", "ALOHA_"),
         SAMPLE = str_replace(SAMPLE, "March_", "ALOHA_")) %>% 
  mutate(SAMPLE_ORDER = factor(SAMPLE, levels = sample_order))

# glimpse(het_TPM_scale)
```

```{r}
# sample_order <- c("Catalina", "PortofLA", "SPOT_surface", "SPOT_150m", "SPOT_890m",
#   "July_5m", "March_5m", "July_DCM","March_DCM", "July_150m", "March_150m", "July_1000m", "March_1000m", "Mean")
# sample_label <- c("Catalina", "Port of LA", "SPOT surface", "SPOT 150m", "SPOT 890m",
#   "ALOHA surface (July)", "ALOHA surface (March)", "ALOHA DCM (July)","ALOHA DCM (March)", "ALOHA 150m (July)", "ALOHA 150m (March)", "ALOHA 1000m (July)", "ALOHA 1000m (March)", "Mean")
# 
# phyto <- c("Diatom", "Chlorophyte", "Haptophyte", "Dinoflagellate")
```

Here, we've narrowed things down to key phagotrophy-related genes.

```{r, fig.height=25, fig.width=15}
het_TPM_scale %>% 
  filter(TPM > 0) %>% 
  # mutate(SAMPLE_ORDER = factor(SAMPLE, levels = sample_order, labels = sample_label)) %>% 
  ggplot(aes(x = GeneID, y = SAMPLE_ORDER)) +
    geom_tile(aes(fill = LOG_TPM), color = "white") +
    # scale_fill_binned(type = "gradient") +
  scale_fill_steps(
    low = "#ece2f0",
    high = "#016c59",
    space = "Lab",
    na.value = "grey50",
    guide = "coloursteps",
    aesthetics = "fill"
  ) +
    coord_flip() +
    facet_grid(cols = vars(TAXA), rows = vars(Category02), scales = "free", space = "free") +
  theme_classic() +
  theme(strip.placement = "outside",
        strip.text.x = element_text(angle = 0, vjust = 0.5, hjust = 0),
        strip.text.y = element_text(angle = 0, vjust = 0.5, hjust = 0),
        axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
```

```{r}
head(het_TPM_scale)
```

```{r, fig.width=13, fig.height=3.5}
het_TPM_scale %>% 
  group_by(TAXA, Category02) %>% 
  mutate(TOTAL_TPM_TAXA = sum(TPM)) %>% 
  ungroup() %>% 
  group_by(Category02, SAMPLE_ORDER, TAXA) %>% 
    summarise(SUM_TPM = sum(TPM),
              PERC_TPM = 100*(SUM_TPM/TOTAL_TPM_TAXA)) %>% 
  filter(SUM_TPM > 0) %>% 
  # mutate(LOG_SUM_TPM = log(SUM_TPM)) %>% 
  # mutate(SAMPLE_ORDER = factor(SAMPLE, levels = sample_order, labels = sample_label)) %>% 
  ggplot(aes(x = Category02, y = SAMPLE_ORDER)) +
    geom_tile(aes(fill = PERC_TPM), color = "white") +
    # scale_fill_binned(type = "gradient") +
  scale_fill_steps(
    low = "#ece2f0",
    high = "#016c59",
    space = "Lab",
    na.value = "grey63",
    guide = "coloursteps",
    aesthetics = "fill"
  ) +
    coord_flip() +
    facet_grid(cols = vars(TAXA), scales = "free", space = "free") +
  theme_classic() +
  theme(strip.placement = "outside",
        strip.text.x = element_text(angle = 0, vjust = 0.5, hjust = 0),
        strip.text.y = element_text(angle = 0, vjust = 0.5, hjust = 0),
        axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
```

### z-score for heterotrophy

```{r}
# head(het_TPM_scale)

reformat_het_01 <- het_TPM_scale %>% 
  group_by(SAMPLE, SAMPLE_ORDER, TAXA, GeneID, 	
Gene_identification, Category02) %>% 
  summarise(SUM_TPM = sum(TPM))

mean_tpm_z <- mean(reformat_het_01$SUM_TPM)
# mean_tpm_z
range(reformat_het_01$SUM_TPM)
reformat_het_02 <- reformat_het_01 %>% 
  filter(SUM_TPM > 0) %>% 
  group_by(SAMPLE, SAMPLE_ORDER, TAXA, Category02) %>% 
  summarise(SCORE_SUM_TPM = sum(SUM_TPM),
            SD_TPM = sd(SUM_TPM),
            MEAN_TPM = mean(SUM_TPM)) %>% 
  mutate(SD_TPM = replace_na(SD_TPM, 1)) %>%
  mutate(Z_SCORE = ((SCORE_SUM_TPM - mean_tpm_z)/SD_TPM))
head(reformat_het_02)
range(reformat_het_02$SD_TPM)
range(reformat_het_02$Z_SCORE)
hist(reformat_het_02$Z_SCORE)
```

```{r}
reformat_het_02 %>% 
  ggplot(aes(x = SAMPLE_ORDER, y = Category02, fill = Z_SCORE)) +
  geom_tile() +
  facet_grid(rows = vars(TAXA)) +
  scale_fill_stepsn(name = "", 
                    colors =c("#023858", "#045a8d","#0570b0","#74a9cf", "#d0d1e6", "#ece7f2","#fff7fb",
                              "#ffffcc", "#fed976", "#feb24c", "#fc4e2a", "#e31a1c", "#bd0026", "#800026"),
                    breaks = c(-1500, -1000, -500, -250, -100, -10, -1,
                               0, 1, 10, 100, 250, 500, 1000, 1500),
                    limits = c(-2500, 2500))
# ,
                    # values = scales::rescale(c(-25, -10, 0, 10, 50))) 
  # scale_fill_steps(
  #   low = "blue",
  #   high = "red",
  #   space = "Lab",
  #   na.value = "grey50",
  #   guide = "coloursteps",
  #   aesthetics = "fill"
  # )
```

### Tree map

```{r}
head(counts_curated_annot)
unique(counts_curated_annot$Category01)
```

```{r, fig.width=8, fig.height=4}
phagotrophy_order <- c("Motility and prey recognition", "Actin polymerization", "Lysosome binding and processing","Chitinase","V-type ATPase", "Phagosome maturation", "Endocytosis", "SNARE complex","Fatty acid biosynthesis", "Fatty acid breakdown")
# length(phagotrophy_order)
phagotrophy_color <- c("#49a381","#a8e6cf","#94b166", "#dcedc1","#e99660", "#ffd3b6","#e96f68", "#ffaaa5","#c44c55", "#ff8b94")

counts_curated_annot %>% 
  select(starts_with("mean."), Supergroup:Species, Category02, GeneID, KEGG, Gene_identification, PFAMs) %>%
  mutate(TAXA = case_when(
    Phylum == "Dinoflagellata" ~ "Dinoflagellate",
    Phylum == "Ciliophora" ~ "Ciliate",
    Phylum == "Haptophyta" ~ "Haptophyte",
    Phylum == "Chlorophyta" ~ "Chlorophyte",
    Class == "Bacillariophyta" ~ "Diatom",
    Supergroup == "Rhizaria" ~ "Rhizaria",
    TRUE ~ "Else")) %>%
  # filter(TAXA != "Else") %>%
  pivot_longer(cols = starts_with("mean."), names_to = "SAMPLE_tmp", values_to = "TPM") %>% 
  filter(TPM > 0) %>% 
  mutate(SAMPLE = str_remove(SAMPLE_tmp, "mean.")) %>% 
  mutate(SAMPLE = str_replace(SAMPLE, "July_", "ALOHA_"),
         SAMPLE = str_replace(SAMPLE, "March_", "ALOHA_")) %>% 
  mutate(SAMPLE_ORDER = factor(SAMPLE, levels = sample_order)) %>% 
  group_by(GeneID, Category02, TAXA, SAMPLE_ORDER) %>% 
    summarise(SUM = sum(TPM)) %>% 
  group_by(GeneID, Category02, TAXA) %>% 
    summarise(n = n(), groups = "drop") %>% 
  mutate(CATEGORY02_ORDER = factor(Category02, levels = phagotrophy_order)) %>%
  filter(n > 1L) %>% 
  group_by(GeneID, CATEGORY02_ORDER) %>% 
    summarize(TAXA = list(TAXA)) %>% 
  ggplot(aes(x = TAXA)) +
    geom_bar(aes(fill = CATEGORY02_ORDER)) +
  scale_fill_manual(values = phagotrophy_color) +
  theme_classic() +
  scale_x_upset(order_by = "freq",n_intersections = 8) +
    theme(axis.text.x = element_text(vjust = 1, hjust = 1)) +
    labs(x = "", y = "TPM Relative Abundance")
```

### Tree map heterotrophy

```{r}
glimpse(depth_TPM_1)
```

```{r, fig.height=10, fig.width=18}
# glimpse(depth_TPM_1)
phagotrophy_order <- c("Motility and prey recognition", "Actin polymerization", "Lysosome binding and processing","Chitinase","V-type ATPase", "Phagosome maturation", "Endocytosis", "SNARE complex","Fatty acid biosynthesis", "Fatty acid breakdown")
# length(phagotrophy_order)
phagotrophy_color <- c("#49a381","#a8e6cf","#94b166", "#dcedc1","#e99660", "#ffd3b6","#e96f68", "#ffaaa5","#c44c55", "#ff8b94")

sample_order <- c("ALOHA_5m", "ALOHA_DCM", "ALOHA_150m", "ALOHA_1000m", "Catalina", "PortofLA", "SPOT_surface", "SPOT_150m", "SPOT_890m")

depth_TPM_1 %>% 
  filter(Category01 == "Phagotrophy") %>% 
  # mutate(SAMPLE_ORDER_LIGHT = factor(SAMPLE, levels = sample_order, labels = sample_order <- c("ALOHA euphotic", "ALOHA euphotic", "ALOHA euphotic", "ALOHA subeuphotic", "CA euphotic", "CA euphotic", "CA euphotic", "CA subeuphotic", "CA subeuphotic"))) %>%
  group_by(TAXA, SAMPLE, Category02, GeneID) %>% 
    summarize(MEAN_TPM = mean(TPM_mod_avg)) %>% 
  ungroup() %>% 
  group_by(TAXA, SAMPLE, Category02) %>% 
    summarize(SUM_TPM = sum(MEAN_TPM)) %>% 
  mutate(CATEGORY02_ORDER = factor(Category02, levels = phagotrophy_order)) %>%
  mutate(SAMPLE_ORDER = factor(SAMPLE, levels = sample_order)) %>%
  ggplot(aes(x = SAMPLE_ORDER, y = CATEGORY02_ORDER, size = SUM_TPM, fill = CATEGORY02_ORDER)) +
  geom_rect(xmin=3.5,
                  xmax = 4.5,
                  ymin = -Inf,
                  ymax = Inf, fill = 'grey', alpha = 0.9) +
  geom_rect(xmin=7.5,
                  xmax = 9.5,
                  ymin = -Inf,
                  ymax = Inf, fill = 'grey', alpha = 0.9) +
    geom_point(shape = 21, color = "black") +
  facet_grid(cols = vars(TAXA)) +
  theme_linedraw() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, face = "bold", size = 12),
        axis.text.y = element_text(face = "bold", size = 12),
        strip.background = element_blank(), strip.text = element_text(color = "black", face = "bold", vjust = 0.5, hjust = 0, size = 12),
        legend.position = "right",
        legend.title = element_blank(),
        legend.text = element_text(color = "black", size = 12),
        panel.border = element_blank(),
        axis.title = element_text(face = "bold", size = 12)) +
  scale_size_continuous(range = c(1,20))+
  scale_fill_manual(values = phagotrophy_color)
```

```{r, fig.height=12, fig.width=18}
# glimpse(depth_TPM_1)
phagotrophy_order <- c("Motility and prey recognition", "Actin polymerization", "Lysosome binding and processing","Chitinase","V-type ATPase", "Phagosome maturation", "Endocytosis", "SNARE complex","Fatty acid biosynthesis", "Fatty acid breakdown")
# length(phagotrophy_order)
phagotrophy_color <- c("#49a381","#a8e6cf","#94b166", "#dcedc1","#e99660", "#ffd3b6","#e96f68", "#ffaaa5","#c44c55", "#ff8b94")

# sample_order <- c("ALOHA_5m", "ALOHA_DCM", "ALOHA_150m", "ALOHA_1000m", "Catalina", "PortofLA", "SPOT_surface", "SPOT_150m", "SPOT_890m")

depth_TPM_1 %>% 
  filter(Category01 == "Phagotrophy") %>% 
  mutate(SAMPLE_ORDER_LIGHT = factor(SAMPLE, levels = sample_order, labels = sample_order <- c("ALOHA euphotic", "ALOHA euphotic", "ALOHA euphotic", "ALOHA subeuphotic", "CA euphotic", "CA euphotic", "CA euphotic", "CA subeuphotic", "CA subeuphotic"))) %>%
  group_by(TAXA, SAMPLE_ORDER_LIGHT, Category02, GeneID) %>% 
    summarize(MEAN_TPM = mean(TPM_mod_avg)) %>% 
  mutate(CATEGORY02_ORDER = factor(Category02, levels = phagotrophy_order)) %>%
  ggplot(aes(area = MEAN_TPM, fill = CATEGORY02_ORDER, subgroup = GeneID, label = GeneID)) +
    geom_treemap(color = "white") +
    geom_treemap_subgroup_border(colour = "white", size = 2) +
  geom_treemap_text(place = "center", grow = TRUE) +
  facet_grid(rows = vars(SAMPLE_ORDER_LIGHT), cols = vars(TAXA)) +
  theme_linedraw() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, face = "bold", size = 12),
        strip.background = element_blank(), strip.text = element_text(color = "black", face = "bold", vjust = 0.5, hjust = 0, size = 12),
        legend.position = "right",
        legend.title = element_blank(),
        legend.text = element_text(color = "black", size = 12),
        panel.border = element_blank(),
        axis.title = element_text(face = "bold", size = 12)) +
  scale_y_continuous(expand = c(0,0)) +
  scale_fill_manual(values = phagotrophy_color) +
  labs(x = "", y = "Transcript proportion by phagotrophy category")
```

```{r}
unique(depth_TPM_1$TAXA)
```

```{r, fig.height=15, fig.width=8}
yl_red <- c("#ffffcc", "#fed976", "#feb24c", "#fc4e2a", "#e31a1c", "#b10026")
depth_TPM_1 %>% 
  filter(Category01 == "Phagotrophy") %>% 
  filter(TAXA == "Ciliate") %>% 
  mutate(SAMPLE_ORDER = factor(SAMPLE, levels = sample_order)) %>%
  group_by(TAXA, SAMPLE_ORDER, Category02, GeneID) %>% 
    summarize(MEAN_TPM = mean(TPM_mod_avg)) %>% 
  mutate(CATEGORY02_ORDER = factor(Category02, levels = phagotrophy_order)) %>%
  ggplot(aes(fill = log(MEAN_TPM), y = GeneID, x= SAMPLE_ORDER)) +
   geom_tile(stat = "identity", color = "black") +
     scale_fill_stepsn(
      # limits = c(-5,5),
      # breaks = c(0.0, 3.5, 7.0, 10.5),
      show.limits = TRUE,
      # colors = reds) +
      colors = yl_red) +
  facet_grid(rows = vars(CATEGORY02_ORDER), scales = "free", space = "free") +
  theme_linedraw() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, face = "bold", size = 12),
        strip.background = element_blank(), strip.text = element_text(color = "black", face = "bold", vjust = 0.5, hjust = 0, size = 12),
        axis.text.y = element_blank(),
        legend.position = "right",
        legend.title = element_blank(),
        legend.text = element_text(color = "black", size = 12),
        panel.border = element_blank(),
        axis.title = element_text(face = "bold", size = 12)) +
  labs(x = "", y = "Transcript proportion by phagotrophy category")
```

```{r}
range(depth_TPM_1$TPM_mod_avg)
median(depth_TPM_1$TPM_mod_avg)
```

```{r, fig.width=18, fig.height=8}
depth_TPM_1 %>% 
  filter(Category01 == "Phagotrophy") %>% 
  mutate(SAMPLE_ORDER_LIGHT = factor(SAMPLE, levels = sample_order, labels = sample_order <- c("ALOHA euphotic", "ALOHA euphotic", "ALOHA euphotic", "ALOHA subeuphotic", "CA euphotic", "CA euphotic", "CA euphotic", "CA subeuphotic", "CA subeuphotic"))) %>%
  mutate(SAMPLE_ORDER = factor(SAMPLE, levels = sample_order)) %>%
  group_by(TAXA, SAMPLE_ORDER, SAMPLE_ORDER_LIGHT, Category02, GeneID) %>% 
    summarize(MEAN_TPM = mean(TPM_mod_avg)) %>% 
  ungroup() %>% 
  group_by(TAXA, SAMPLE_ORDER, Category02) %>% 
  mutate(z_score = scale(MEAN_TPM)) %>% 
  mutate(CATEGORY02_ORDER = factor(Category02, levels = phagotrophy_order)) %>%
  ggplot(aes(x = SAMPLE_ORDER, y = z_score, group = Category02, fill = Category02, color = Category02)) +
  geom_jitter() +
  geom_boxplot(stat = "boxplot", position = "dodge2") +
  facet_grid(cols = vars(TAXA)) +
  # scale_y_continuous(limits = c(0, 15)) +
  theme_linedraw() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, face = "bold", size = 12),
        strip.background = element_blank(), strip.text = element_text(color = "black", face = "bold", vjust = 0.5, hjust = 0, size = 12),
        legend.position = "right",
        legend.title = element_blank(),
        legend.text = element_text(color = "black", size = 12),
        panel.border = element_blank(),
        axis.title = element_text(face = "bold", size = 12)) +
  scale_color_manual(values = phagotrophy_color) +
  scale_fill_manual(values = phagotrophy_color) +
  labs(x = "", y = "Transcript proportion by phagotrophy category")
```

# Supplementary

```{r}
# months <- read.csv("summary-months.csv")
```

```{r, fig.height=5, fig.width=5}
# | warning: false



k <- seq(0, 2*pi, pi/60)
df <- data.frame(
  x = 16*sin(k)^3 +25,
  y = 13*cos(k) - 5*cos(2*k) - 2*cos(3*k) - cos(4*k) +20)
ggplot(df, aes(x, y)) +
  geom_polygon(aes(group = 1), fill = "red", color = "#444444") +
  geom_text(aes(x = 25, y = 20, label = "Happy Valentine's Day!"),
            size = 8, color = "white") +
  theme_bw()
geom_val
```

# Session info

```{r}
sessionInfo()
```
